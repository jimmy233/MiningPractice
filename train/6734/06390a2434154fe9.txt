int King(int VAR__819283, int VAR__19328)
{
   int monkey;
   int VAR__NUM;
   int VAR__53647;
   int VAR__21230;
   int countor;

   monkey   = VAR__819283;
   VAR__NUM = VAR__19328;
   int *Monkey = (int *)malloc(monkey * ( sizeof( int )));
   for ( VAR__53647 = 0; VAR__53647 < monkey; VAR__53647++ )
   {
      *( Monkey + VAR__53647 ) = 0;
   }

   for ( VAR__53647 = 0, VAR__21230 = 0, countor = 1; VAR__21230 < ( monkey - 1 ); )
   {
      if (( *( Monkey + ( VAR__53647 % monkey ))) == ( -1 ))
      {
         VAR__53647++;
         continue;
      }

      if ( countor == VAR__NUM )
      {
         *( Monkey + ( VAR__53647 % monkey )) = -1;
         VAR__21230++;
         VAR__53647++;
         countor = 1;
         continue;
      }

      VAR__53647++;
      countor++;
   }

   for ( VAR__53647 = 0; VAR__53647 < monkey; VAR__53647++ )
   {
      if (( *( Monkey + VAR__53647 )) != ( -1 ))
      {
         return VAR__53647 + 1;
      }
   }

   free(Monkey);
}


int main()
{
   int king[100];
   int VAR__819283;
   int VAR__19328;
   int VAR_1238123  = 0;
   int VAR__8444594 = 0;

   scanf("%d%d", &VAR__819283, &VAR__19328);

   while (( VAR__819283 != 0 ) && ( VAR__19328 != 0 ))
   {
      king[VAR_1238123] = King(VAR__819283, VAR__19328);
      VAR_1238123++;
      scanf("%d%d", &VAR__819283, &VAR__19328);
   }

   for ( VAR__8444594 = 0; VAR__8444594 < VAR_1238123; VAR__8444594++ )
   {
      printf("%d\n", *( king + VAR__8444594 ));
   }

   return 0;
}
