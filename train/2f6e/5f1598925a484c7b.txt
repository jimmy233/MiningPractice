int qianshou(char children[], int sign[], int VAR__NUM, int time)
{
   int VAR__53647 = 1;
   int VAR__21230;
   int VAR__8444594;

   for ( ; VAR__53647 < VAR__NUM; VAR__53647++ )
   {
      if ( time == (( VAR__NUM / 2 ) - 1 ))
      {
         printf("0 %d", VAR__NUM - 1);
         return 0;
      }

      if ( sign[VAR__53647] == 1 )
      {
loop:
         continue;
      }


      for ( VAR__8444594 = VAR__53647 + 1; ; VAR__8444594++ )
      {
         if (( children[VAR__53647] == children[VAR__8444594] ) && ( sign[VAR__8444594] != 1 ))
         {
            goto loop;
         }
         else
         if (( children[VAR__8444594] != children[VAR__53647] ) && ( sign[VAR__8444594] != 1 ))
         {
            break;
         }
      }

      sign[VAR__53647] = 1;
      for ( VAR__21230 = VAR__53647; VAR__21230 < VAR__NUM; VAR__21230++ )
      {
         if (( children[VAR__21230] != children[VAR__53647] ) && ( sign[VAR__21230] == 0 ))
         {
            sign[VAR__21230] = 1;
            break;
         }
      }

      printf("%d %d\n", VAR__53647, VAR__21230);
      time++;
      break;
   }

   qianshou(children, sign, VAR__NUM, time);
}


int main()
{
   int  VAR__NUM;
   int  VAR__53647;
   int  time = 0;
   char children[SIZE];

   gets(children);
   VAR__NUM = strlen(children);
   int sign[VAR__NUM];
   for ( VAR__53647 = 0; VAR__53647 < VAR__NUM; VAR__53647++ )
   {
      sign[VAR__53647] = 0;
   }

   qianshou(children, sign, VAR__NUM, time);
   return 0;
}
