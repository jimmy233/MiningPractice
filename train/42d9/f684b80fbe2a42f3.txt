typedef struct point
{
   int VAR__7685;
   int VAR__3918907;
   int VAR__9290;
} P;
typedef struct len
{
   double real;
   P      *VAR__819283;
   P      *VAR__19328;
} L;
P   points[10];
L   LEN_OF_STH[1000];
int lencount = 0;
int cmp(const void *VAR__819283, const void *VAR__19328)
{
   double VAR__8444594;
   L      *aa = (L *)VAR__819283;
   L      *bb = (L *)VAR__19328;

   if ( VAR__8444594 = aa->real - bb->real )
   {
      return VAR__8444594 < 0;
   }

   return aa->VAR__819283 - bb->VAR__819283;
}


int main()
{
   int    VAR_1238123;
   int    VAR__53647;
   int    VAR__21230;
   double tmp;

   scanf("%d", &VAR_1238123);
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      scanf("%d", &points[VAR__53647].VAR__7685);
      scanf("%d", &points[VAR__53647].VAR__3918907);
      scanf("%d", &points[VAR__53647].VAR__9290);
   }

   for ( VAR__53647 = 0; VAR__53647 < ( VAR_1238123 - 1 ); VAR__53647++ )
   {
      for ( VAR__21230 = VAR__53647 + 1; VAR__21230 < VAR_1238123; VAR__21230++ )
      {
         tmp  = 0;
         tmp += pow(points[VAR__53647].VAR__7685 - points[VAR__21230].VAR__7685, 2);
         tmp += pow(points[VAR__53647].VAR__3918907 - points[VAR__21230].VAR__3918907, 2);
         tmp += pow(points[VAR__53647].VAR__9290 - points[VAR__21230].VAR__9290, 2);
         LEN_OF_STH[lencount].real        = pow(tmp, 0.5);
         LEN_OF_STH[lencount].VAR__819283 = &points[VAR__53647];
         LEN_OF_STH[lencount].VAR__19328  = &points[VAR__21230];
         lencount++;
      }
   }

   qsort(LEN_OF_STH, lencount, sizeof( L ), cmp);
   for ( VAR__53647 = 0; VAR__53647 < lencount; VAR__53647++ )
   {
      printf("(%d,%d,%d)-(%d,%d,%d)=%.2lf\n", LEN_OF_STH[VAR__53647].VAR__819283->VAR__7685, LEN_OF_STH[VAR__53647].VAR__819283->VAR__3918907, LEN_OF_STH[VAR__53647].VAR__819283->VAR__9290, LEN_OF_STH[VAR__53647].VAR__19328->VAR__7685, LEN_OF_STH[VAR__53647].VAR__19328->VAR__3918907, LEN_OF_STH[VAR__53647].VAR__19328->VAR__9290, LEN_OF_STH[VAR__53647].real);
   }

   return 0;
}
