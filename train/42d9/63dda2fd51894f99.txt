int main()
{
   struct Distance
   {
      int    ANOTHER_POINTER[3];
      int    YET_ANOTHER_POINTER[3];
      double length;
   }
   VAR__12302[50];
   struct Distance
   {
      int    ANOTHER_POINTER[3];
      int    YET_ANOTHER_POINTER[3];
      double length;
   }
       VAR__TEMP;
   int VAR_1238123;
   int VAR__53647;
   int VAR__21230;
   int VAR__8444594 = 0;

   cin >> VAR_1238123;
   int    point[10][3];
   double result;
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      (( cin >> point[VAR__53647][0] ) >> point[VAR__53647][1] ) >> point[VAR__53647][2];
   }

   for ( VAR__53647 = 0; VAR__53647 < ( VAR_1238123 - 1 ); VAR__53647++ )
   {
      for ( VAR__21230 = VAR__53647 + 1; VAR__21230 < VAR_1238123; VAR__21230++ )
      {
         VAR__12302[VAR__8444594].ANOTHER_POINTER[0]     = point[VAR__53647][0];
         VAR__12302[VAR__8444594].ANOTHER_POINTER[1]     = point[VAR__53647][1];
         VAR__12302[VAR__8444594].ANOTHER_POINTER[2]     = point[VAR__53647][2];
         VAR__12302[VAR__8444594].YET_ANOTHER_POINTER[0] = point[VAR__21230][0];
         VAR__12302[VAR__8444594].YET_ANOTHER_POINTER[1] = point[VAR__21230][1];
         VAR__12302[VAR__8444594].YET_ANOTHER_POINTER[2] = point[VAR__21230][2];
         result = ((( point[VAR__53647][0] - point[VAR__21230][0] ) * ( point[VAR__53647][0] - point[VAR__21230][0] )) + (( point[VAR__53647][1] - point[VAR__21230][1] ) * ( point[VAR__53647][1] - point[VAR__21230][1] ))) + (( point[VAR__53647][2] - point[VAR__21230][2] ) * ( point[VAR__53647][2] - point[VAR__21230][2] ));
         VAR__12302[VAR__8444594].length = sqrt(result * 1.0);
         VAR__8444594++;
      }
   }


   for ( VAR__53647 = 0; VAR__53647 < ( VAR__8444594 - 1 ); VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 < (( VAR__8444594 - 1 ) - VAR__53647 ); VAR__21230++ )
      {
         if ( VAR__12302[VAR__21230].length < VAR__12302[VAR__21230 + 1].length )
         {
            VAR__TEMP = VAR__12302[VAR__21230];
            VAR__12302[VAR__21230]     = VAR__12302[VAR__21230 + 1];
            VAR__12302[VAR__21230 + 1] = VAR__TEMP;
         }
      }
   }



   for ( VAR__53647 = 0; VAR__53647 < VAR__8444594; VAR__53647++ )
   {
      ((((((((((((((((((( cout << "(" ) << VAR__12302[VAR__53647].ANOTHER_POINTER[0] ) << "," ) << VAR__12302[VAR__53647].ANOTHER_POINTER[1] ) << "," ) << VAR__12302[VAR__53647].ANOTHER_POINTER[2] ) << ")" ) << "-" ) << "(" ) << VAR__12302[VAR__53647].YET_ANOTHER_POINTER[0] ) << "," ) << VAR__12302[VAR__53647].YET_ANOTHER_POINTER[1] ) << "," ) << VAR__12302[VAR__53647].YET_ANOTHER_POINTER[2] ) << ")" ) << "=" ) << fixed ) << setprecision(2)) << VAR__12302[VAR__53647].length ) << endl;
   }

   return 0;
}
