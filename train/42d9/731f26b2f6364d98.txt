int main()
{
   struct point
   {
      int    NO;
      double VAR__7685;
      double VAR__3918907;
      double VAR__9290;
      double VAR__12302[10];
   }
   points[10];
   struct data
   {
      int    VAR__NUM;
      int    fromx;
      int    fromy;
      int    fromz;
      int    tox;
      int    toy;
      int    toz;
      double dd;
   }
   result[45 + 5];
   struct data
   {
      int    VAR__NUM;
      int    fromx;
      int    fromy;
      int    fromz;
      int    tox;
      int    toy;
      int    toz;
      double dd;
   }
       VAR__TEMP;
   int VAR_1238123;

   cin >> VAR_1238123;
   for ( int VAR__53647 = 0; VAR__53647 <= ( VAR_1238123 - 1 ); VAR__53647++ )
   {
      points[VAR__53647].NO = VAR__53647 + 1;
      (( cin >> points[VAR__53647].VAR__7685 ) >> points[VAR__53647].VAR__3918907 ) >> points[VAR__53647].VAR__9290;
   }

   int VAR__8444594 = 0;
   int end;
   for ( int VAR__53647 = 0; VAR__53647 <= ( VAR_1238123 - 2 ); VAR__53647++ )
   {
      for ( int VAR__21230 = VAR__53647 + 1; VAR__21230 <= ( VAR_1238123 - 1 ); VAR__21230++ )
      {
         result[++VAR__8444594].dd     = ( points[VAR__53647].VAR__12302[VAR__21230] = sqrt(((( points[VAR__53647].VAR__7685 - points[VAR__21230].VAR__7685 ) * ( points[VAR__53647].VAR__7685 - points[VAR__21230].VAR__7685 )) + (( points[VAR__53647].VAR__3918907 - points[VAR__21230].VAR__3918907 ) * ( points[VAR__53647].VAR__3918907 - points[VAR__21230].VAR__3918907 ))) + (( points[VAR__53647].VAR__9290 - points[VAR__21230].VAR__9290 ) * ( points[VAR__53647].VAR__9290 - points[VAR__21230].VAR__9290 ))));
         result[VAR__8444594].fromx    = (int)points[VAR__53647].VAR__7685;
         result[VAR__8444594].fromy    = (int)points[VAR__53647].VAR__3918907;
         result[VAR__8444594].fromz    = (int)points[VAR__53647].VAR__9290;
         result[VAR__8444594].tox      = (int)points[VAR__21230].VAR__7685;
         result[VAR__8444594].toy      = (int)points[VAR__21230].VAR__3918907;
         result[VAR__8444594].toz      = (int)points[VAR__21230].VAR__9290;
         result[VAR__8444594].VAR__NUM = VAR__8444594;
         end = VAR__8444594;
      }
   }


   for ( int VAR__53647 = 1; VAR__53647 <= end; VAR__53647++ )
   {
      for ( int VAR__21230 = VAR__53647; VAR__21230 <= end; VAR__21230++ )
      {
         if ( result[VAR__53647].dd < result[VAR__21230].dd )
         {
            VAR__TEMP          = result[VAR__53647];
            result[VAR__53647] = result[VAR__21230];
            result[VAR__21230] = VAR__TEMP;
         }
      }
   }


   for ( int VAR__53647 = 1; VAR__53647 <= end; VAR__53647++ )
   {
      for ( int VAR__21230 = VAR__53647; VAR__21230 <= end; VAR__21230++ )
      {
         if (( result[VAR__53647].dd == result[VAR__21230].dd ) && ( result[VAR__53647].VAR__NUM > result[VAR__21230].VAR__NUM ))
         {
            VAR__TEMP          = result[VAR__53647];
            result[VAR__53647] = result[VAR__21230];
            result[VAR__21230] = VAR__TEMP;
         }
      }
   }


   for ( int VAR__53647 = 1; VAR__53647 <= end; VAR__53647++ )
   {
      (((((((((((((((( cout << "(" ) << result[VAR__53647].fromx ) << "," ) << result[VAR__53647].fromy ) << "," ) << result[VAR__53647].fromz ) << ")-(" ) << result[VAR__53647].tox ) << "," ) << result[VAR__53647].toy ) << "," ) << result[VAR__53647].toz ) << ")=" ) << fixed ) << setprecision(2)) << result[VAR__53647].dd ) << endl;
   }

   return 0;
}
