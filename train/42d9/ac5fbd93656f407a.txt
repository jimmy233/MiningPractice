const int maxN = 105;
int       VAR__7685[maxN];
int       VAR__3918907[maxN];
int       VAR__9290[maxN];
int       dis[maxN][maxN];
int       VAR__12302[maxN * maxN] = { 0 };
int       VAR_1238123;
int calc(int VAR__819283, int VAR__19328)
{
   return ((( VAR__7685[VAR__819283] - VAR__7685[VAR__19328] ) * ( VAR__7685[VAR__819283] - VAR__7685[VAR__19328] )) + (( VAR__3918907[VAR__819283] - VAR__3918907[VAR__19328] ) * ( VAR__3918907[VAR__819283] - VAR__3918907[VAR__19328] ))) + (( VAR__9290[VAR__819283] - VAR__9290[VAR__19328] ) * ( VAR__9290[VAR__819283] - VAR__9290[VAR__19328] ));
}


int main()
{
   int VAR__53647;
   int VAR__21230;

   cin >> VAR_1238123;
   for ( VAR__53647 = 1; VAR__53647 <= VAR_1238123; VAR__53647++ )
   {
      (( cin >> VAR__7685[VAR__53647] ) >> VAR__3918907[VAR__53647] ) >> VAR__9290[VAR__53647];
      dis[VAR__53647][VAR__53647] = 0;
      for ( VAR__21230 = 1; VAR__21230 < VAR__53647; VAR__21230++ )
      {
         dis[VAR__53647][VAR__21230] = ( dis[VAR__21230][VAR__53647] = calc(VAR__53647, VAR__21230));
         VAR__12302[++VAR__12302[0]] = dis[VAR__53647][VAR__21230];
      }
   }

   sort(VAR__12302 + 1, ( VAR__12302 + VAR__12302[0] ) + 1);
   VAR__12302[VAR__12302[0] + 1] = -1;
   for ( int VAR__8444594 = VAR__12302[0]; VAR__8444594; VAR__8444594-- )
   {
      if ( VAR__12302[VAR__8444594] != VAR__12302[VAR__8444594 + 1] )
      {
         for ( VAR__53647 = 1; VAR__53647 < VAR_1238123; VAR__53647++ )
         {
            for ( VAR__21230 = VAR__53647 + 1; VAR__21230 <= VAR_1238123; VAR__21230++ )
            {
               if ( dis[VAR__53647][VAR__21230] == VAR__12302[VAR__8444594] )
               {
                  printf("(%d,%d,%d)-(%d,%d,%d)=%.2f\n", VAR__7685[VAR__53647], VAR__3918907[VAR__53647], VAR__9290[VAR__53647], VAR__7685[VAR__21230], VAR__3918907[VAR__21230], VAR__9290[VAR__21230], sqrt(dis[VAR__53647][VAR__21230]));
               }
            }
         }
      }
   }


   return 0;
}
