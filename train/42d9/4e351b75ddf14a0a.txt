int main()
{
   struct address
   {
      int VAR__7685;
      int VAR__3918907;
      int VAR__9290;
   }
          point[10];
   int    VAR_1238123;
   int    VAR__53647;
   int    VAR__21230;
   int    VAR__8444594;
   double VAR__12302[45];
   double VAR__temp;

   cin >> VAR_1238123;
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      (( cin >> point[VAR__53647].VAR__7685 ) >> point[VAR__53647].VAR__3918907 ) >> point[VAR__53647].VAR__9290;
   }

   for ( VAR__53647 = 0; VAR__53647 < ( VAR_1238123 - 1 ); VAR__53647++ )
   {
      for ( VAR__21230 = VAR__53647 + 1; VAR__21230 < VAR_1238123; VAR__21230++ )
      {
         VAR__12302[((((((( 2 * VAR_1238123 ) - 1 ) - VAR__53647 ) * VAR__53647 ) / 2 ) + VAR__21230 ) - VAR__53647 ) - 1] = sqrt(((( point[VAR__53647].VAR__7685 - point[VAR__21230].VAR__7685 ) * ( point[VAR__53647].VAR__7685 - point[VAR__21230].VAR__7685 )) + (( point[VAR__53647].VAR__3918907 - point[VAR__21230].VAR__3918907 ) * ( point[VAR__53647].VAR__3918907 - point[VAR__21230].VAR__3918907 ))) + (( point[VAR__53647].VAR__9290 - point[VAR__21230].VAR__9290 ) * ( point[VAR__53647].VAR__9290 - point[VAR__21230].VAR__9290 )));
      }
   }

   for ( VAR__53647 = 0; VAR__53647 < ((( VAR_1238123 * ( VAR_1238123 - 1 )) / 2 ) - 1 ); VAR__53647++ )
   {
      for ( VAR__21230 = VAR__53647 + 1; VAR__21230 < (( VAR_1238123 * ( VAR_1238123 - 1 )) / 2 ); VAR__21230++ )
      {
         if ( VAR__12302[VAR__21230] > VAR__12302[VAR__53647] )
         {
            VAR__temp = VAR__12302[VAR__53647];
            VAR__12302[VAR__53647] = VAR__12302[VAR__21230];
            VAR__12302[VAR__21230] = VAR__temp;
         }
      }
   }

   for ( VAR__53647 = 0; VAR__53647 < (( VAR_1238123 * ( VAR_1238123 - 1 )) / 2 ); )
   {
      for ( VAR__21230 = 0; VAR__21230 < ( VAR_1238123 - 1 ); VAR__21230++ )
      {
         for ( VAR__8444594 = VAR__21230 + 1; VAR__8444594 < VAR_1238123; VAR__8444594++ )
         {
            if ( sqrt(((( point[VAR__8444594].VAR__7685 - point[VAR__21230].VAR__7685 ) * ( point[VAR__8444594].VAR__7685 - point[VAR__21230].VAR__7685 )) + (( point[VAR__8444594].VAR__3918907 - point[VAR__21230].VAR__3918907 ) * ( point[VAR__8444594].VAR__3918907 - point[VAR__21230].VAR__3918907 ))) + (( point[VAR__8444594].VAR__9290 - point[VAR__21230].VAR__9290 ) * ( point[VAR__8444594].VAR__9290 - point[VAR__21230].VAR__9290 ))) == VAR__12302[VAR__53647] )
            {
               (((((((((((( cout << "(" ) << point[VAR__21230].VAR__7685 ) << "," ) << point[VAR__21230].VAR__3918907 ) << "," ) << point[VAR__21230].VAR__9290 ) << ")-(" ) << point[VAR__8444594].VAR__7685 ) << "," ) << point[VAR__8444594].VAR__3918907 ) << "," ) << point[VAR__8444594].VAR__9290 ) << ")=";
               ((( cout << fixed ) << setprecision(2)) << VAR__12302[VAR__53647] ) << endl;
            }
         }
      }

      for ( VAR__21230 = VAR__53647 + 1; VAR__21230 < (( VAR_1238123 * ( VAR_1238123 - 1 )) / 2 ); VAR__21230++ )
      {
         if ( VAR__12302[VAR__21230] != VAR__12302[VAR__53647] )
         {
            break;
         }
      }

      VAR__53647 = VAR__21230;
   }

   return 0;
}
