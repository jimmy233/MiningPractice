int main()
{
   int    VAR_1238123;
   int    VAR__819283[10][3];
   double VAR__12302[45][3];
   int    VAR__53647 = 0;
   double change;

   cin >> VAR_1238123;
   for ( int VAR__temp = 0; VAR__temp < VAR_1238123; ++VAR__temp )
   {
      (( cin >> VAR__819283[VAR__temp][0] ) >> VAR__819283[VAR__temp][1] ) >> VAR__819283[VAR__temp][2];
   }

   for ( int t1 = 0; t1 < VAR_1238123; ++t1 )
   {
      for ( int t2 = t1 + 1; t2 < VAR_1238123; ++t2 )
      {
         VAR__12302[VAR__53647][0] = t1;
         VAR__12302[VAR__53647][1] = t2;
         VAR__12302[VAR__53647][2] = sqrt(((( VAR__819283[t1][0] - VAR__819283[t2][0] ) * ( VAR__819283[t1][0] - VAR__819283[t2][0] )) + (( VAR__819283[t1][1] - VAR__819283[t2][1] ) * ( VAR__819283[t1][1] - VAR__819283[t2][1] ))) + (( VAR__819283[t1][2] - VAR__819283[t2][2] ) * ( VAR__819283[t1][2] - VAR__819283[t2][2] )));
         ++VAR__53647;
      }
   }


   for ( int t1 = 0; t1 < ( VAR__53647 - 1 ); ++t1 )
   {
      for ( int t2 = 0; t2 < (( VAR__53647 - 1 ) - t1 ); ++t2 )
      {
         if ( VAR__12302[t2][2] < VAR__12302[t2 + 1][2] )
         {
            change                = VAR__12302[t2][2];
            VAR__12302[t2][2]     = VAR__12302[t2 + 1][2];
            VAR__12302[t2 + 1][2] = change;
            change                = VAR__12302[t2][0];
            VAR__12302[t2][0]     = VAR__12302[t2 + 1][0];
            VAR__12302[t2 + 1][0] = change;
            change                = VAR__12302[t2][1];
            VAR__12302[t2][1]     = VAR__12302[t2 + 1][1];
            VAR__12302[t2 + 1][1] = change;
         }
      }
   }



   for ( int VAR__temp = 0; VAR__temp < VAR__53647; ++VAR__temp )
   {
      printf("(%d,%d,%d)-(%d,%d,%d)=%0.2lf\n", VAR__819283[(int)VAR__12302[VAR__temp][0]][0], VAR__819283[(int)VAR__12302[VAR__temp][0]][1], VAR__819283[(int)VAR__12302[VAR__temp][0]][2], VAR__819283[(int)VAR__12302[VAR__temp][1]][0], VAR__819283[(int)VAR__12302[VAR__temp][1]][1], VAR__819283[(int)VAR__12302[VAR__temp][1]][2], VAR__12302[VAR__temp][2]);
   }

   return 0;
}
