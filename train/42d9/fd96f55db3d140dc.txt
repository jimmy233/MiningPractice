struct distance
{
   double VAR__819283[3];
   double VAR__19328[3];
   double distance;
};
int factorial(int VAR__53647)
{
   return ( VAR__53647 * ( VAR__53647 + 1 )) / 2;
}


double oper(double x1, double y1, double z1, double x2, double y2, double z2)
{
   return sqrt(((( x1 - x2 ) * ( x1 - x2 )) + (( y1 - y2 ) * ( y1 - y2 ))) + (( z1 - z2 ) * ( z1 - z2 )));
}


int main()
{
   int VAR_1238123;
   int VAR__53647;
   int VAR__21230;
   int VAR__1238129;

   cin >> VAR_1238123;
   double VAR__7685[VAR_1238123][3];
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      (( cin >> VAR__7685[VAR__53647][0] ) >> VAR__7685[VAR__53647][1] ) >> VAR__7685[VAR__53647][2];
   }

   VAR__1238129 = factorial(VAR_1238123 - 1);
   struct distance dot[VAR__1238129];
   int             VAR__8444594 = 0;
   for ( VAR__53647 = 1; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      for ( VAR__21230 = VAR__53647 + 1; VAR__21230 <= VAR_1238123; VAR__21230++ )
      {
         dot[VAR__8444594].VAR__819283[0] = VAR__7685[VAR__53647 - 1][0];
         dot[VAR__8444594].VAR__819283[1] = VAR__7685[VAR__53647 - 1][1];
         dot[VAR__8444594].VAR__819283[2] = VAR__7685[VAR__53647 - 1][2];
         dot[VAR__8444594].VAR__19328[0]  = VAR__7685[VAR__21230 - 1][0];
         dot[VAR__8444594].VAR__19328[1]  = VAR__7685[VAR__21230 - 1][1];
         dot[VAR__8444594].VAR__19328[2]  = VAR__7685[VAR__21230 - 1][2];
         dot[VAR__8444594].distance       = oper(dot[VAR__8444594].VAR__819283[0], dot[VAR__8444594].VAR__819283[1], dot[VAR__8444594].VAR__819283[2], dot[VAR__8444594].VAR__19328[0], dot[VAR__8444594].VAR__19328[1], dot[VAR__8444594].VAR__19328[2]);
         VAR__8444594++;
      }
   }


   for ( VAR__53647 = 0; VAR__53647 < ( VAR__1238129 - 1 ); VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 < (( VAR__1238129 - VAR__53647 ) - 1 ); VAR__21230++ )
      {
         if ( dot[VAR__21230].distance < dot[VAR__21230 + 1].distance )
         {
            struct distance VAR__TEMP = dot[VAR__21230];
            dot[VAR__21230]     = dot[VAR__21230 + 1];
            dot[VAR__21230 + 1] = VAR__TEMP;
         }
      }
   }


   for ( VAR__53647 = 0; VAR__53647 < VAR__1238129; VAR__53647++ )
   {
      (((((((((((((( cout << fixed ) << setprecision(0)) << "(" ) << dot[VAR__53647].VAR__819283[0] ) << "," ) << dot[VAR__53647].VAR__819283[1] ) << "," ) << dot[VAR__53647].VAR__819283[2] ) << ")-(" ) << dot[VAR__53647].VAR__19328[0] ) << "," ) << dot[VAR__53647].VAR__19328[1] ) << "," ) << dot[VAR__53647].VAR__19328[2] ) << ")=";
      ((( cout << fixed ) << setprecision(2)) << dot[VAR__53647].distance ) << endl;
   }

   return 0;
}
