int main()
{
   int    VAR_1238123;
   int    VAR__1238129 = 0;
   int    VAR__53647   = 0;
   int    VAR__21230   = 0;
   int    VAR__819283  = 0;
   int    VAR__19328   = 0;
   double i1           = 0;
   int    i2           = 0;
   int    i3           = 0;
   int    i4           = 0;
   int    i5           = 0;
   double VAR__7685[10];
   double VAR__3918907[10];
   double VAR__9290[10];
   double distance[100];
   int    VAR_233[100];
   int    VAR_666[100];
   int    ANOTHER_POINTER[100];
   int    q1[100];

   cin >> VAR_1238123;
   for ( VAR__1238129 = 0; VAR__1238129 < VAR_1238123; VAR__1238129++ )
   {
      (( cin >> VAR__7685[VAR__1238129] ) >> VAR__3918907[VAR__1238129] ) >> VAR__9290[VAR__1238129];
   }

   for ( VAR__53647 = 0; VAR__53647 < 100; VAR__53647++ )
   {
      VAR_233[VAR__53647] = 0;
      VAR_666[VAR__53647] = 0;
   }

   for ( VAR__53647 = 0; VAR__53647 < ( VAR_1238123 - 1 ); VAR__53647++ )
   {
      for ( VAR__21230 = VAR__53647 + 1; VAR__21230 < VAR_1238123; VAR__21230++ )
      {
         distance[VAR__19328] = sqrt(((( VAR__7685[VAR__53647] - VAR__7685[VAR__21230] ) * ( VAR__7685[VAR__53647] - VAR__7685[VAR__21230] )) + (( VAR__3918907[VAR__53647] - VAR__3918907[VAR__21230] ) * ( VAR__3918907[VAR__53647] - VAR__3918907[VAR__21230] ))) + (( VAR__9290[VAR__53647] - VAR__9290[VAR__21230] ) * ( VAR__9290[VAR__53647] - VAR__9290[VAR__21230] )));
         VAR_233[VAR__19328]  = VAR__53647;
         VAR_666[VAR__19328]  = VAR__21230;
         VAR__19328++;
      }
   }

   i4 = 0;
   i5 = 0;
   for ( i4 = 0; i4 < ((( VAR_1238123 * ( VAR_1238123 - 1 )) / 2 ) - 1 ); i4++ )
   {
      for ( i5 = i4 + 1; i5 < (( VAR_1238123 * ( VAR_1238123 - 1 )) / 2 ); i5++ )
      {
         if ( distance[i5] > distance[i4] )
         {
            i1           = distance[i4];
            distance[i4] = distance[i5];
            distance[i5] = i1;
            i2           = VAR_233[i4];
            VAR_233[i4]  = VAR_233[i5];
            VAR_233[i5]  = i2;
            i3           = VAR_666[i4];
            VAR_666[i4]  = VAR_666[i5];
            VAR_666[i5]  = i3;
         }
      }
   }

   VAR__53647 = 0;
   for ( VAR__53647 = 0; VAR__53647 < (( VAR_1238123 * ( VAR_1238123 - 1 )) / 2 ); VAR__53647++ )
   {
      if ( distance[VAR__53647] == distance[VAR__53647 + 1] )
      {
         if ( VAR_233[VAR__53647] > VAR_233[VAR__53647 + 1] )
         {
            i2 = VAR_233[VAR__53647 + 1];
            VAR_233[VAR__53647 + 1] = VAR_233[VAR__53647];
            VAR_233[VAR__53647]     = i2;
            i3 = VAR_666[VAR__53647 + 1];
            VAR_666[VAR__53647 + 1] = VAR_666[VAR__53647];
            VAR_666[VAR__53647]     = i3;
         }

         if (( VAR_233[VAR__53647] == VAR_233[VAR__53647 + 1] ) && ( VAR_666[VAR__53647] > VAR_666[VAR__53647 + 1] ))
         {
            i2 = VAR_233[VAR__53647 + 1];
            VAR_233[VAR__53647 + 1] = VAR_233[VAR__53647];
            VAR_233[VAR__53647]     = i2;
            i3 = VAR_666[VAR__53647 + 1];
            VAR_666[VAR__53647 + 1] = VAR_666[VAR__53647];
            VAR_666[VAR__53647]     = i3;
         }
      }
   }

   for ( VAR__53647 = 0; VAR__53647 < (( VAR_1238123 * ( VAR_1238123 - 1 )) / 2 ); VAR__53647++ )
   {
      ((((((((((((( cout << "(" ) << VAR__7685[VAR_233[VAR__53647]] ) << "," ) << VAR__3918907[VAR_233[VAR__53647]] ) << "," ) << VAR__9290[VAR_233[VAR__53647]] ) << ")" ) << "-(" ) << VAR__7685[VAR_666[VAR__53647]] ) << "," ) << VAR__3918907[VAR_666[VAR__53647]] ) << "," ) << VAR__9290[VAR_666[VAR__53647]] ) << ")=";
      printf("%.2lf\n", distance[VAR__53647]);
   }

   return 0;
}
