int main()
{
   int   VAR_1238123;
   int   VAR__1238129 = 0;
   int   VAR__819283  = 0;
   float VAR__1111    = 0;
   float D[50];
   int   X[11];
   int   Y[11];
   int   Z[11];
   int   VAR_233[50];
   int   VAR_666[50];

   cin >> VAR_1238123;
   for ( int VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      cin >> X[VAR__53647];
      cin >> Y[VAR__53647];
      cin >> Z[VAR__53647];
   }

   for ( int VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      for ( int VAR__21230 = VAR__53647 + 1; VAR__21230 < VAR_1238123; VAR__21230++ )
      {
         D[VAR__1238129]       = sqrt(((( X[VAR__53647] - X[VAR__21230] ) * ( X[VAR__53647] - X[VAR__21230] )) + (( Y[VAR__53647] - Y[VAR__21230] ) * ( Y[VAR__53647] - Y[VAR__21230] ))) + (( Z[VAR__53647] - Z[VAR__21230] ) * ( Z[VAR__53647] - Z[VAR__21230] )));
         VAR_233[VAR__1238129] = VAR__53647;
         VAR_666[VAR__1238129] = VAR__21230;
         VAR__1238129++;
      }
   }


   for ( int VAR__53647 = VAR__1238129 - 1; VAR__53647 > 0; VAR__53647-- )
   {
      for ( int VAR__21230 = 0; VAR__21230 < VAR__53647; VAR__21230++ )
      {
         if ( D[VAR__21230] < D[VAR__21230 + 1] )
         {
            VAR__1111               = D[VAR__21230];
            D[VAR__21230]           = D[VAR__21230 + 1];
            D[VAR__21230 + 1]       = VAR__1111;
            VAR__819283             = VAR_233[VAR__21230];
            VAR_233[VAR__21230]     = VAR_233[VAR__21230 + 1];
            VAR_233[VAR__21230 + 1] = VAR__819283;
            VAR__819283             = VAR_666[VAR__21230];
            VAR_666[VAR__21230]     = VAR_666[VAR__21230 + 1];
            VAR_666[VAR__21230 + 1] = VAR__819283;
         }
      }
   }


   for ( int VAR__8444594 = 0; VAR__8444594 < VAR__1238129; VAR__8444594++ )
   {
      printf("(%d,%d,%d)-(%d,%d,%d)=%.2f\n", X[VAR_233[VAR__8444594]], Y[VAR_233[VAR__8444594]], Z[VAR_233[VAR__8444594]], X[VAR_666[VAR__8444594]], Y[VAR_666[VAR__8444594]], Z[VAR_666[VAR__8444594]], D[VAR__8444594]);
   }

   return 0;
}
