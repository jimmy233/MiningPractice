struct location
{
   int VAR__7685;
   int VAR__3918907;
   int VAR__9290;
}
point[10];
struct location
{
   int VAR__7685;
   int VAR__3918907;
   int VAR__9290;
}
VAR__temp;
struct dis
{
   int    point1;
   int    point2;
   double VAR_9494;
   int    VAR__NUM;
}
LEN_OF_STH[45];
struct dis
{
   int    point1;
   int    point2;
   double VAR_9494;
   int    VAR__NUM;
}
VAR__TEMP;
int main()
{
   int    VAR_1238123;
   int    VAR__53647;
   int    VAR__21230;
   int    VAR__COUNT = 0;
   int    VAR_233;
   double VAR__temp;

   cin >> VAR_1238123;
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      (( cin >> point[VAR__53647].VAR__7685 ) >> point[VAR__53647].VAR__3918907 ) >> point[VAR__53647].VAR__9290;
   }

   for ( VAR__53647 = 0; VAR__53647 < ( VAR_1238123 - 1 ); VAR__53647++ )
   {
      for ( VAR__21230 = VAR__53647 + 1; VAR__21230 < VAR_1238123; VAR__21230++ )
      {
         LEN_OF_STH[VAR__COUNT].point1 = VAR__53647;
         LEN_OF_STH[VAR__COUNT].point2 = VAR__21230;
         VAR__temp = ( pow((double)( point[VAR__53647].VAR__7685 - point[VAR__21230].VAR__7685 ), 2) + pow((double)( point[VAR__53647].VAR__3918907 - point[VAR__21230].VAR__3918907 ), 2)) + pow((double)( point[VAR__53647].VAR__9290 - point[VAR__21230].VAR__9290 ), 2);
         LEN_OF_STH[VAR__COUNT].VAR_9494 = sqrt(VAR__temp);
         LEN_OF_STH[VAR__COUNT].VAR__NUM = VAR__COUNT;
         ++VAR__COUNT;
      }
   }


   for ( VAR__53647 = 0; VAR__53647 < ( VAR__COUNT - 1 ); VAR__53647++ )
   {
      VAR_233 = VAR__53647;
      for ( VAR__21230 = VAR__53647 + 1; VAR__21230 < VAR__COUNT; VAR__21230++ )
      {
         if ( LEN_OF_STH[VAR_233].VAR_9494 < LEN_OF_STH[VAR__21230].VAR_9494 )
         {
            VAR_233 = VAR__21230;
         }
         else
         if (( LEN_OF_STH[VAR_233].VAR_9494 == LEN_OF_STH[VAR__21230].VAR_9494 ) && ( LEN_OF_STH[VAR_233].VAR__NUM > LEN_OF_STH[VAR__21230].VAR__NUM ))
         {
            VAR_233 = VAR__21230;
         }
      }

      {
         VAR__TEMP              = LEN_OF_STH[VAR_233];
         LEN_OF_STH[VAR_233]    = LEN_OF_STH[VAR__53647];
         LEN_OF_STH[VAR__53647] = VAR__TEMP;
      }
   }

   for ( VAR__53647 = 0; VAR__53647 < VAR__COUNT; VAR__53647++ )
   {
      ((((((((((((((((((( cout << "(" ) << point[LEN_OF_STH[VAR__53647].point1].VAR__7685 ) << "," ) << point[LEN_OF_STH[VAR__53647].point1].VAR__3918907 ) << "," ) << point[LEN_OF_STH[VAR__53647].point1].VAR__9290 ) << ")" ) << "-" ) << "(" ) << point[LEN_OF_STH[VAR__53647].point2].VAR__7685 ) << "," ) << point[LEN_OF_STH[VAR__53647].point2].VAR__3918907 ) << "," ) << point[LEN_OF_STH[VAR__53647].point2].VAR__9290 ) << ")" ) << "=" ) << fixed ) << setprecision(2)) << LEN_OF_STH[VAR__53647].VAR_9494 ) << endl;
   }

   return 0;
}
