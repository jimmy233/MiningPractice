struct zb
{
   int VAR__7685;
   int VAR__3918907;
   int VAR__9290;
}
VAR__819283[11];
int main()
{
   double VAR__1111[100] = { 0.0 };
   int    VAR__53647;
   int    VAR__21230;
   int    VAR__8444594;
   int    VAR_1238123;
   int    co           = 0;
   int    VAR_666[100] = { 0 };
   int    VAR__TEMP;
   int    x1;
   int    y1;
   int    co1 = 0;
   double lo;
   double VAR__temp;

   cin >> VAR_1238123;
   for ( int VAR_233 = 1; VAR_233 <= (( VAR_1238123 * ( VAR_1238123 - 1 )) / 2 ); VAR_233++ )
   {
      VAR_666[VAR_233] = VAR_233;
   }

   for ( VAR__53647 = 1; VAR__53647 <= VAR_1238123; VAR__53647++ )
   {
      (( cin >> VAR__819283[VAR__53647].VAR__7685 ) >> VAR__819283[VAR__53647].VAR__3918907 ) >> VAR__819283[VAR__53647].VAR__9290;
   }

   for ( VAR__21230 = 1; VAR__21230 <= ( VAR_1238123 - 1 ); VAR__21230++ )
   {
      for ( VAR__8444594 = VAR__21230 + 1; VAR__8444594 <= VAR_1238123; VAR__8444594++ )
      {
         lo = sqrt((((( VAR__819283[VAR__21230].VAR__7685 - VAR__819283[VAR__8444594].VAR__7685 ) * ( VAR__819283[VAR__21230].VAR__7685 - VAR__819283[VAR__8444594].VAR__7685 )) + (( VAR__819283[VAR__21230].VAR__3918907 - VAR__819283[VAR__8444594].VAR__3918907 ) * ( VAR__819283[VAR__21230].VAR__3918907 - VAR__819283[VAR__8444594].VAR__3918907 ))) + (( VAR__819283[VAR__21230].VAR__9290 - VAR__819283[VAR__8444594].VAR__9290 ) * ( VAR__819283[VAR__21230].VAR__9290 - VAR__819283[VAR__8444594].VAR__9290 ))) * 1.0);
         co++;
         VAR__1111[co] = lo;
      }
   }


   for ( int VAR__7685 = 1; VAR__7685 <= ((( VAR_1238123 * ( VAR_1238123 - 1 )) / 2 ) - 1 ); VAR__7685++ )
   {
      for ( int VAR__3918907 = 1; VAR__3918907 <= ((( VAR_1238123 * ( VAR_1238123 - 1 )) / 2 ) - VAR__7685 ); VAR__3918907++ )
      {
         if ( VAR__1111[VAR__3918907] < VAR__1111[VAR__3918907 + 1] )
         {
            VAR__temp = VAR__1111[VAR__3918907];
            VAR__1111[VAR__3918907]     = VAR__1111[VAR__3918907 + 1];
            VAR__1111[VAR__3918907 + 1] = VAR__temp;
            VAR__TEMP                 = VAR_666[VAR__3918907];
            VAR_666[VAR__3918907]     = VAR_666[VAR__3918907 + 1];
            VAR_666[VAR__3918907 + 1] = VAR__TEMP;
         }
      }
   }



   for ( int VAR__7685 = 1; VAR__7685 <= (( VAR_1238123 * ( VAR_1238123 - 1 )) / 2 ); VAR__7685++ )
   {
      co1++;
      for ( int VAR__3918907 = 1; VAR__3918907 <= VAR_1238123; VAR__3918907++ )
      {
         if ( VAR_666[co1] > ( VAR_1238123 - VAR__3918907 ))
         {
            VAR_666[co1] -= VAR_1238123 - VAR__3918907;
         }
         else
         {
            x1 = VAR__3918907;
            y1 = VAR_666[co1] + VAR__3918907;
            break;
         }
      }

      (((((((((((((((( cout << "(" ) << VAR__819283[x1].VAR__7685 ) << "," ) << VAR__819283[x1].VAR__3918907 ) << "," ) << VAR__819283[x1].VAR__9290 ) << ")-(" ) << VAR__819283[y1].VAR__7685 ) << "," ) << VAR__819283[y1].VAR__3918907 ) << "," ) << VAR__819283[y1].VAR__9290 ) << ")=" ) << fixed ) << setprecision(2)) << VAR__1111[VAR__7685] ) << endl;
   }

   return 0;
}
