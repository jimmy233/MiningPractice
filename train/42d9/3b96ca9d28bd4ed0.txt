double distance(int x1, int y1, int z1, int x2, int y2, int z2)
{
   double VAR_666;
   double VAR_9494;

   VAR_666  = ((( x1 - x2 ) * ( x1 - x2 )) + (( y1 - y2 ) * ( y1 - y2 ))) + (( z1 - z2 ) * ( z1 - z2 ));
   VAR_9494 = sqrt(VAR_666);
   return VAR_9494;
}


int main()
{
   int    VAR_1238123;
   int    VAR__8444594;
   int    VAR__53647;
   int    VAR__21230;
   int    VAR__7685[10];
   int    VAR__3918907[10];
   int    VAR__9290[10];
   double VAR_SIZE[46][7];

   scanf("%d", &VAR_1238123);
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      scanf("%d%d%d", &VAR__7685[VAR__53647], &VAR__3918907[VAR__53647], &VAR__9290[VAR__53647]);
   }

   VAR__8444594 = 0;
   for ( VAR__53647 = 0; VAR__53647 < ( VAR_1238123 - 1 ); VAR__53647++ )
   {
      for ( VAR__21230 = VAR__53647; VAR__21230 < ( VAR_1238123 - 1 ); VAR__21230++ )
      {
         VAR_SIZE[VAR__8444594][0] = VAR__7685[VAR__53647] * 1.0;
         VAR_SIZE[VAR__8444594][1] = VAR__3918907[VAR__53647] * 1.0;
         VAR_SIZE[VAR__8444594][2] = VAR__9290[VAR__53647] * 1.0;
         VAR_SIZE[VAR__8444594][3] = VAR__7685[VAR__21230 + 1] * 1.0;
         VAR_SIZE[VAR__8444594][4] = VAR__3918907[VAR__21230 + 1] * 1.0;
         VAR_SIZE[VAR__8444594][5] = VAR__9290[VAR__21230 + 1] * 1.0;
         VAR_SIZE[VAR__8444594][6] = distance(VAR__7685[VAR__53647], VAR__3918907[VAR__53647], VAR__9290[VAR__53647], VAR__7685[VAR__21230 + 1], VAR__3918907[VAR__21230 + 1], VAR__9290[VAR__21230 + 1]);
         VAR__8444594++;
      }
   }

   for ( VAR__53647 = 0; VAR__53647 < ( VAR__8444594 - 1 ); VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 < (( VAR__8444594 - VAR__53647 ) - 1 ); VAR__21230++ )
      {
         if ( VAR_SIZE[VAR__21230][6] < VAR_SIZE[VAR__21230 + 1][6] )
         {
            VAR_SIZE[45][0]             = VAR_SIZE[VAR__21230 + 1][0];
            VAR_SIZE[45][1]             = VAR_SIZE[VAR__21230 + 1][1];
            VAR_SIZE[45][2]             = VAR_SIZE[VAR__21230 + 1][2];
            VAR_SIZE[45][3]             = VAR_SIZE[VAR__21230 + 1][3];
            VAR_SIZE[45][4]             = VAR_SIZE[VAR__21230 + 1][4];
            VAR_SIZE[45][5]             = VAR_SIZE[VAR__21230 + 1][5];
            VAR_SIZE[45][6]             = VAR_SIZE[VAR__21230 + 1][6];
            VAR_SIZE[VAR__21230 + 1][0] = VAR_SIZE[VAR__21230][0];
            VAR_SIZE[VAR__21230 + 1][1] = VAR_SIZE[VAR__21230][1];
            VAR_SIZE[VAR__21230 + 1][2] = VAR_SIZE[VAR__21230][2];
            VAR_SIZE[VAR__21230 + 1][3] = VAR_SIZE[VAR__21230][3];
            VAR_SIZE[VAR__21230 + 1][4] = VAR_SIZE[VAR__21230][4];
            VAR_SIZE[VAR__21230 + 1][5] = VAR_SIZE[VAR__21230][5];
            VAR_SIZE[VAR__21230 + 1][6] = VAR_SIZE[VAR__21230][6];
            VAR_SIZE[VAR__21230][0]     = VAR_SIZE[45][0];
            VAR_SIZE[VAR__21230][1]     = VAR_SIZE[45][1];
            VAR_SIZE[VAR__21230][2]     = VAR_SIZE[45][2];
            VAR_SIZE[VAR__21230][3]     = VAR_SIZE[45][3];
            VAR_SIZE[VAR__21230][4]     = VAR_SIZE[45][4];
            VAR_SIZE[VAR__21230][5]     = VAR_SIZE[45][5];
            VAR_SIZE[VAR__21230][6]     = VAR_SIZE[45][6];
         }
      }
   }

   for ( VAR__53647 = 0; VAR__53647 < VAR__8444594; VAR__53647++ )
   {
      printf("(%.0lf,%.0lf,%.0lf)-(%.0lf,%.0lf,%.0lf)=%.2lf\n", VAR_SIZE[VAR__53647][0], VAR_SIZE[VAR__53647][1], VAR_SIZE[VAR__53647][2], VAR_SIZE[VAR__53647][3], VAR_SIZE[VAR__53647][4], VAR_SIZE[VAR__53647][5], VAR_SIZE[VAR__53647][6]);
   }

   return 0;
}
