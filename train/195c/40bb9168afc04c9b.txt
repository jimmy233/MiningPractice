struct Node;
typedef struct Node *pNode;
struct Node
{
   int   VAR__7685;
   pNode VAR__NEXT;
};
pNode create()
{
   pNode VAR_233;

   VAR_233            = (pNode)malloc(sizeof( struct Node ));
   VAR_233->VAR__NEXT = NULL;
   return VAR_233;
}


void sort(pNode VAR__HEAD, int VAR_1238123)
{
   pNode VAR_233  = NULL;
   pNode VAR_666  = NULL;
   pNode VAR_9494 = NULL;
   int   VAR__53647;

   for ( VAR__53647 = 1; VAR__53647 <= VAR_1238123; VAR__53647++ )
   {
      VAR_9494 = (pNode)malloc(sizeof( struct Node ));
      scanf("%d", &VAR_9494->VAR__7685);
      VAR_666 = VAR__HEAD;
      VAR_233 = VAR__HEAD->VAR__NEXT;

      while ( VAR_233 )
      {
         if ( VAR_233->VAR__7685 >= VAR_9494->VAR__7685 )
         {
            break;
         }

         VAR_666 = VAR_233;
         VAR_233 = VAR_233->VAR__NEXT;
      }

      VAR_666->VAR__NEXT  = VAR_9494;
      VAR_9494->VAR__NEXT = VAR_233;
   }
}


void outputdata(pNode VAR_233)
{
   VAR_233 = VAR_233->VAR__NEXT;

   while ( VAR_233->VAR__NEXT )
   {
      printf("%d ", VAR_233->VAR__7685);
      VAR_233 = VAR_233->VAR__NEXT;
   }

   printf("%d", VAR_233->VAR__7685);
}


pNode inputdata(int VAR_1238123)
{
   pNode VAR_666   = NULL;
   pNode VAR_233   = NULL;
   pNode VAR__HEAD = NULL;
   int   VAR__53647;

   VAR__HEAD = create();
   VAR_666   = VAR__HEAD;
   for ( VAR__53647 = 1; VAR__53647 <= VAR_1238123; VAR__53647++ )
   {
      VAR_233 = (pNode)malloc(sizeof( struct Node ));

      if ( VAR_233 != NULL )
      {
         scanf("%d", &VAR_233->VAR__7685);
         VAR_233->VAR__NEXT = NULL;
         VAR_666->VAR__NEXT = VAR_233;
         VAR_666            = VAR_233;
      }
   }

   return VAR__HEAD;
}


void del(pNode VAR_233, int VAR__8444594)
{
   pNode VAR_666 = NULL;

   VAR_666 = VAR_233;
   VAR_233 = VAR_233->VAR__NEXT;

   while ( VAR_233 )
   {
      if ( VAR_233->VAR__7685 == VAR__8444594 )
      {
         VAR_666->VAR__NEXT = VAR_233->VAR__NEXT;
         free(VAR_233);
         VAR_233 = VAR_666->VAR__NEXT;
      }
      else
      {
         VAR_666 = VAR_233;
         VAR_233 = VAR_233->VAR__NEXT;
      }
   }
}


pNode rinputdata(int VAR_1238123)
{
   pNode VAR_666   = NULL;
   pNode VAR_233   = NULL;
   pNode VAR__HEAD = NULL;
   int   VAR__53647;

   VAR__HEAD = create();
   for ( VAR__53647 = 1; VAR__53647 <= VAR_1238123; VAR__53647++ )
   {
      VAR_233 = (pNode)malloc(sizeof( struct Node ));

      if ( VAR_233 != NULL )
      {
         scanf("%d", &VAR_233->VAR__7685);
         VAR_233->VAR__NEXT = VAR_666;
         VAR_666            = VAR_233;
      }
   }

   VAR__HEAD->VAR__NEXT = VAR_666;
   return VAR__HEAD;
}


void outputk(pNode VAR_233, int VAR__8444594)
{
   int VAR__53647 = 1;

   VAR_233 = VAR_233->VAR__NEXT;

   while ( VAR_233 )
   {
      if ( VAR__53647 == VAR__8444594 )
      {
         printf("%d", VAR_233->VAR__7685);
      }

      VAR_233 = VAR_233->VAR__NEXT;
      VAR__53647++;
   }
}


void change(pNode VAR_233, int VAR_1238123, int VAR__1238129)
{
   int   VAR__53647 = 1;
   pNode VAR_666    = NULL;
   pNode VAR_9494   = NULL;
   pNode VAR__HEAD  = NULL;

   VAR_666   = VAR_233;
   VAR__HEAD = VAR_233;
   VAR_233   = VAR_233->VAR__NEXT;

   while ( VAR_233 )
   {
      if ( VAR__53647 == (( VAR_1238123 - VAR__1238129 ) + 1 ))
      {
         break;
      }

      VAR__53647++;
      VAR_666 = VAR_233;
      VAR_233 = VAR_233->VAR__NEXT;
   }

   VAR_9494 = VAR__HEAD;

   while ( VAR_9494->VAR__NEXT )
   {
      VAR_9494 = VAR_9494->VAR__NEXT;
   }

   VAR_666->VAR__NEXT   = NULL;
   VAR_9494->VAR__NEXT  = VAR__HEAD->VAR__NEXT;
   VAR__HEAD->VAR__NEXT = VAR_233;
}


void found(pNode VAR_233, int VAR__8444594)
{
   pNode VAR__HEAD = VAR_233;
   int   ok        = 1;

   VAR_233 = VAR__HEAD->VAR__NEXT;

   while ( VAR_233 )
   {
      if ( VAR__8444594 == VAR_233->VAR__7685 )
      {
         printf("%d\n", VAR_233->VAR__7685);
         ok = 0;
      }

      VAR_233 = VAR_233->VAR__NEXT;
   }

   if ( ok )
   {
      printf("No Found!");
   }
}


pNode arrange(pNode VAR_233)
{
   pNode VAR_666   = NULL;
   pNode VAR__HEAD = NULL;
   pNode VAR__MIN  = NULL;
   pNode headnew   = NULL;
   pNode ppre      = NULL;
   pNode minpre    = NULL;
   pNode VAR_9494  = NULL;

   headnew   = create();
   VAR_666   = headnew;
   VAR__HEAD = VAR_233;

   while ( VAR__HEAD->VAR__NEXT )
   {
      VAR__MIN = ( VAR_233 = VAR__HEAD->VAR__NEXT );
      ppre     = ( minpre = VAR__HEAD );

      while ( VAR_233 )
      {
         if ( VAR__MIN->VAR__7685 > VAR_233->VAR__7685 )
         {
            VAR__MIN = VAR_233;
            minpre   = ppre;
         }

         ppre    = VAR_233;
         VAR_233 = VAR_233->VAR__NEXT;
      }

      VAR_9494            = (pNode)malloc(sizeof( struct Node ));
      VAR_9494->VAR__7685 = VAR__MIN->VAR__7685;
      VAR_666->VAR__NEXT  = VAR_9494;
      VAR_9494->VAR__NEXT = NULL;
      VAR_666             = VAR_9494;
      minpre->VAR__NEXT   = VAR__MIN->VAR__NEXT;
      free(VAR__MIN);
   }

   return headnew;
}


int main()
{
   int   VAR__1238129;
   int   VAR_1238123;
   pNode VAR__HEAD = NULL;

   scanf("%d %d", &VAR_1238123, &VAR__1238129);
   VAR__HEAD = inputdata(VAR_1238123);
   change(VAR__HEAD, VAR_1238123, VAR__1238129);
   outputdata(VAR__HEAD);
   return 0;
}
