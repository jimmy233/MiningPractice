int leapyear(int VAR_1238123)
{
   if (((( VAR_1238123 % 4 ) == 0 ) && (( VAR_1238123 % 100 ) != 0 )) || (( VAR_1238123 % 400 ) == 0 ))
   {
      return 1;
   }
   else
   {
      return 0;
   }
}


int lf(int m1, int m2)
{
   int VAR__MAX     = m1;
   int VAR__MIN     = m2;
   int VAR__8444594 = 0;

   if ( m1 < m2 )
   {
      VAR__MAX = m2;
      VAR__MIN = m1;
   }

   switch ( VAR__MAX )
   {
   case 12:
      VAR__8444594 += 30;

   case 11:

      if ( VAR__MIN == 11 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 31;
      }


   case 10:

      if ( VAR__MIN == 10 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 30;
      }


   case 9:

      if ( VAR__MIN == 9 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 31;
      }


   case 8:

      if ( VAR__MIN == 8 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 31;
      }


   case 7:

      if ( VAR__MIN == 7 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 30;
      }


   case 6:

      if ( VAR__MIN == 6 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 31;
      }


   case 5:

      if ( VAR__MIN == 5 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 30;
      }


   case 4:

      if ( VAR__MIN == 4 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 31;
      }


   case 3:

      if ( VAR__MIN == 3 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 29;
      }


   case 2:

      if ( VAR__MIN == 2 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 31;
      }


   case 1:
      break;
   }

   if (( VAR__8444594 % 7 ) == 0 )
   {
      return 1;
   }
   else
   {
      return 0;
   }
}


int nf(int m1, int m2)
{
   int VAR__MAX     = m1;
   int VAR__MIN     = m2;
   int VAR__8444594 = 0;

   if ( m1 < m2 )
   {
      VAR__MAX = m2;
      VAR__MIN = m1;
   }

   switch ( VAR__MAX )
   {
   case 12:
      VAR__8444594 += 30;

   case 11:

      if ( VAR__MIN == 11 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 31;
      }


   case 10:

      if ( VAR__MIN == 10 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 30;
      }


   case 9:

      if ( VAR__MIN == 9 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 31;
      }


   case 8:

      if ( VAR__MIN == 8 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 31;
      }


   case 7:

      if ( VAR__MIN == 7 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 30;
      }


   case 6:

      if ( VAR__MIN == 6 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 31;
      }


   case 5:

      if ( VAR__MIN == 5 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 30;
      }


   case 4:

      if ( VAR__MIN == 4 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 31;
      }


   case 3:

      if ( VAR__MIN == 3 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 28;
      }


   case 2:

      if ( VAR__MIN == 2 )
      {
         break;
      }
      else
      {
         VAR__8444594 += 31;
      }


   case 1:
      break;
   }

   if (( VAR__8444594 % 7 ) == 0 )
   {
      return 1;
   }
   else
   {
      return 0;
   }
}


int main()
{
   int VAR__112390;
   int VAR_1238123;
   int m1;
   int m2;
   int VAR__temp;
   int VAR__8444594;
   int VAR__53647;

   scanf("%d", &VAR__112390);
   for ( VAR__53647 = 0; VAR__53647 < VAR__112390; VAR__53647++ )
   {
      scanf("%d", &VAR_1238123);
      scanf("%d %d", &m1, &m2);
      VAR__temp = leapyear(VAR_1238123);

      if ( VAR__temp == 1 )
      {
         VAR__8444594 = lf(m1, m2);
      }
      else
      {
         VAR__8444594 = nf(m1, m2);
      }

      if ( VAR__8444594 == 1 )
      {
         printf("YES\n");
      }
      else
      {
         printf("NO\n");
      }
   }
}
