int main()
{
   int VAR_1238123;
   int VAR__53647;
   int VAR__3918907[300];
   int m1[300];
   int m2[300];

   scanf("%d", &VAR_1238123);
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      scanf("%d%d%d", &VAR__3918907[VAR__53647], &m1[VAR__53647], &m2[VAR__53647]);
   }

   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      if (((( VAR__3918907[VAR__53647] % 4 ) == 0 ) && (( VAR__3918907[VAR__53647] % 100 ) != 0 )) || (( VAR__3918907[VAR__53647] % 400 ) == 0 ))
      {
         switch ( m1[VAR__53647] )
         {
         case 1:
            m1[VAR__53647] = 0;
            break;

         case 2:
            m1[VAR__53647] = 31;
            break;

         case 3:
            m1[VAR__53647] = 31 + 29;
            break;

         case 4:
            m1[VAR__53647] = ( 31 + 29 ) + 31;
            break;

         case 5:
            m1[VAR__53647] = (( 31 + 29 ) + 31 ) + 30;
            break;

         case 6:
            m1[VAR__53647] = ((( 31 + 29 ) + 31 ) + 30 ) + 31;
            break;

         case 7:
            m1[VAR__53647] = (((( 31 + 29 ) + 31 ) + 30 ) + 31 ) + 30;
            break;

         case 8:
            m1[VAR__53647] = ((((( 31 + 29 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31;
            break;

         case 9:
            m1[VAR__53647] = (((((( 31 + 29 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31;
            break;

         case 10:
            m1[VAR__53647] = ((((((( 31 + 29 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) + 30;
            break;

         case 11:
            m1[VAR__53647] = ( 366 - 30 ) - 31;
            break;

         case 12:
            m1[VAR__53647] = 366 - 31;
            break;
         }

         switch ( m2[VAR__53647] )
         {
         case 1:
            m2[VAR__53647] = 0;
            break;

         case 2:
            m2[VAR__53647] = 31;
            break;

         case 3:
            m2[VAR__53647] = 31 + 29;
            break;

         case 4:
            m2[VAR__53647] = ( 31 + 29 ) + 31;
            break;

         case 5:
            m2[VAR__53647] = (( 31 + 29 ) + 31 ) + 30;
            break;

         case 6:
            m2[VAR__53647] = ((( 31 + 29 ) + 31 ) + 30 ) + 31;
            break;

         case 7:
            m2[VAR__53647] = (((( 31 + 29 ) + 31 ) + 30 ) + 31 ) + 30;
            break;

         case 8:
            m2[VAR__53647] = ((((( 31 + 29 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31;
            break;

         case 9:
            m2[VAR__53647] = (((((( 31 + 29 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31;
            break;

         case 10:
            m2[VAR__53647] = ((((((( 31 + 29 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) + 30;
            break;

         case 11:
            m2[VAR__53647] = ( 366 - 30 ) - 31;
            break;

         case 12:
            m2[VAR__53647] = 366 - 31;
            break;
         }

         if (((( m2[VAR__53647] - m1[VAR__53647] ) % 7 ) == 0 ) || ((( m1[VAR__53647] - m2[VAR__53647] ) % 7 ) == 0 ))
         {
            printf("YES\n");
         }
         else
         {
            printf("NO\n");
         }
      }
      else
      {
         switch ( m1[VAR__53647] )
         {
         case 1:
            m1[VAR__53647] = 0;
            break;

         case 2:
            m1[VAR__53647] = 31;
            break;

         case 3:
            m1[VAR__53647] = ( 31 + 29 ) - 1;
            break;

         case 4:
            m1[VAR__53647] = (( 31 + 29 ) + 31 ) - 1;
            break;

         case 5:
            m1[VAR__53647] = ((( 31 + 29 ) + 31 ) + 30 ) - 1;
            break;

         case 6:
            m1[VAR__53647] = (((( 31 + 29 ) + 31 ) + 30 ) + 31 ) - 1;
            break;

         case 7:
            m1[VAR__53647] = ((((( 31 + 29 ) + 31 ) + 30 ) + 31 ) + 30 ) - 1;
            break;

         case 8:
            m1[VAR__53647] = (((((( 31 + 29 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) - 1;
            break;

         case 9:
            m1[VAR__53647] = ((((((( 31 + 29 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) - 1;
            break;

         case 10:
            m1[VAR__53647] = (((((((( 31 + 29 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) + 30 ) - 1;
            break;

         case 11:
            m1[VAR__53647] = (( 366 - 30 ) - 31 ) - 1;
            break;

         case 12:
            m1[VAR__53647] = ( 366 - 31 ) - 1;
            break;
         }

         switch ( m2[VAR__53647] )
         {
         case 1:
            m2[VAR__53647] = 0;
            break;

         case 2:
            m2[VAR__53647] = 31;
            break;

         case 3:
            m2[VAR__53647] = ( 31 + 29 ) - 1;
            break;

         case 4:
            m2[VAR__53647] = (( 31 + 29 ) + 31 ) - 1;
            break;

         case 5:
            m2[VAR__53647] = ((( 31 + 29 ) + 31 ) + 30 ) - 1;
            break;

         case 6:
            m2[VAR__53647] = (((( 31 + 29 ) + 31 ) + 30 ) + 31 ) - 1;
            break;

         case 7:
            m2[VAR__53647] = ((((( 31 + 29 ) + 31 ) + 30 ) + 31 ) + 30 ) - 1;
            break;

         case 8:
            m2[VAR__53647] = (((((( 31 + 29 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) - 1;
            break;

         case 9:
            m2[VAR__53647] = ((((((( 31 + 29 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) - 1;
            break;

         case 10:
            m2[VAR__53647] = (((((((( 31 + 29 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) + 30 ) - 1;
            break;

         case 11:
            m2[VAR__53647] = (( 366 - 30 ) - 31 ) - 1;
            break;

         case 12:
            m2[VAR__53647] = ( 366 - 31 ) - 1;
            break;
         }

         if (((( m2[VAR__53647] - m1[VAR__53647] ) % 7 ) == 0 ) || ((( m1[VAR__53647] - m2[VAR__53647] ) % 7 ) == 0 ))
         {
            printf("YES\n");
         }
         else
         {
            printf("NO\n");
         }
      }
   }

   return 0;
}
