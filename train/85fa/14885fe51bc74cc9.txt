int main()
{
   int year[5];
   int month[5];
   int day[5];
   int total[5];
   int VAR__53647 = 0;

   for ( ; VAR__53647 <= 4; VAR__53647++ )
   {
      scanf("%d %d %d", &year[VAR__53647], &month[VAR__53647], &day[VAR__53647]);
   }

   for ( VAR__53647 = 0; VAR__53647 <= 4; VAR__53647++ )
   {
      switch ( month[VAR__53647] )
      {
      case 1:
         total[VAR__53647] = day[VAR__53647];
         break;

      case 2:
         total[VAR__53647] = 31 + day[VAR__53647];
         break;

      case 3:
         total[VAR__53647] = ( 31 + 28 ) + day[VAR__53647];
         break;

      case 4:
         total[VAR__53647] = (( 31 + 28 ) + 31 ) + day[VAR__53647];
         break;

      case 5:
         total[VAR__53647] = ((( 31 + 28 ) + 31 ) + 30 ) + day[VAR__53647];
         break;

      case 6:
         total[VAR__53647] = (((( 31 + 28 ) + 31 ) + 30 ) + 31 ) + day[VAR__53647];
         break;

      case 7:
         total[VAR__53647] = ((((( 31 + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + day[VAR__53647];
         break;

      case 8:
         total[VAR__53647] = (((((( 31 + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + day[VAR__53647];
         break;

      case 9:
         total[VAR__53647] = ((((((( 31 + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) + day[VAR__53647];
         break;

      case 10:
         total[VAR__53647] = (((((((( 31 + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) + 30 ) + day[VAR__53647];
         break;

      case 11:
         total[VAR__53647] = ((((((((( 31 + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) + 30 ) + 31 ) + day[VAR__53647];
         break;

      case 12:
         total[VAR__53647] = (((((((((( 31 + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) + 30 ) + 31 ) + 30 ) + day[VAR__53647];
         break;
      }

      if (((( year[VAR__53647] % 400 ) == 0 ) || ((( year[VAR__53647] % 4 ) == 0 ) && (( year[VAR__53647] % 100 ) != 0 ))) && ( month[VAR__53647] > 2 ))
      {
         total[VAR__53647] += 1;
      }

      printf("%d\n", total[VAR__53647]);
   }

   return 0;
}
