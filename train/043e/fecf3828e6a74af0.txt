void Swap(char *A_STRING, char *FindWord, char *SwapWord)
{
   int  VAR__21230;
   int  VAR_9494;
   int  VAR__8444594;
   int  VAR__53647 = 0;
   int  SwapWordLength;
   int  yc;
   int  FindWordLength;
   int  VAR_1238123;
   char *ANOTHER_POINTER;
   char *YET_ANOTHER_POINTER;

   ANOTHER_POINTER     = A_STRING;
   YET_ANOTHER_POINTER = FindWord;
   yc             = strlen(A_STRING);
   FindWordLength = strlen(FindWord);
   SwapWordLength = strlen(SwapWord);
   VAR_1238123    = SwapWordLength - FindWordLength;

   while (( *ANOTHER_POINTER ) != '\0' )
   {
      if ((( *ANOTHER_POINTER ) == ( *YET_ANOTHER_POINTER )) && ( !isalpha(*( ANOTHER_POINTER - 1 ))))
      {
         while ((( *ANOTHER_POINTER ) == ( *YET_ANOTHER_POINTER )) && (( *YET_ANOTHER_POINTER ) != '\0' ))
         {
            ANOTHER_POINTER++;
            YET_ANOTHER_POINTER++;
            VAR__53647++;
         }
      }

      else
      {
         ANOTHER_POINTER++;
         VAR__53647++;
      }

      if ((( *YET_ANOTHER_POINTER ) == '\0' ) && ( isalpha(*ANOTHER_POINTER) == 0 ))
      {
         if ( VAR_1238123 < 0 )
         {
            VAR__21230 = VAR__53647 - FindWordLength;
            for ( VAR__8444594 = 0; VAR__8444594 < SwapWordLength; VAR__8444594++ )
            {
               A_STRING[VAR__21230++] = SwapWord[VAR__8444594];
            }

            for ( VAR_9494 = VAR__53647; VAR_9494 < yc; VAR_9494++ )
            {
               A_STRING[VAR__21230++] = A_STRING[VAR_9494];
            }

            while ( VAR__21230 < yc )
            {
               A_STRING[VAR__21230++] = '\0';
            }

            yc               = strlen(A_STRING);
            VAR__53647      += VAR_1238123;
            ANOTHER_POINTER += VAR_1238123;
         }
         else
         {
            for ( VAR_9494 = yc + VAR_1238123; VAR_9494 > VAR__53647; VAR_9494-- )
            {
               A_STRING[VAR_9494] = A_STRING[yc--];
            }

            VAR__21230 = VAR__53647 - FindWordLength;
            for ( VAR__8444594 = 0; VAR__8444594 < SwapWordLength; VAR__8444594++ )
            {
               A_STRING[VAR__21230++] = SwapWord[VAR__8444594];
            }

            yc               = strlen(A_STRING);
            VAR__53647      += VAR_1238123;
            ANOTHER_POINTER += VAR_1238123;
         }
      }

      YET_ANOTHER_POINTER = FindWord;
   }
}


int main()
{
   char sen[MAX];
   char old[LEN];
   char VAR__819283[LEN];

   gets(sen);
   gets(old);
   gets(VAR__819283);
   Swap(sen, old, VAR__819283);
   puts(sen);
   return 0;
}
