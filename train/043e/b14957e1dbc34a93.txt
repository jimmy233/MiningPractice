int main()
{
   int  n1;
   int  n2;
   int  n3;
   int  VAR__53647;
   int  VAR__21230;
   char a1[100]              = { '\0' };
   char a2[100]              = { '\0' };
   char a3[100]              = { '\0' };
   char *ANOTHER_POINTER     = &a1[0];
   char *YET_ANOTHER_POINTER = &a2[0];
   char *p3 = &a3[0];
   char *p_end;
   char *p_in = &a1[0];
   char *VAR_233;
   char *p_cyc = &a1[0];

   gets(a1);
   gets(a2);
   gets(a3);
   n1    = strlen(a1);
   n2    = strlen(a2);
   n3    = strlen(a3);
   p_end = &a1[n1 - 1];
   for ( ANOTHER_POINTER = &a1[0]; ANOTHER_POINTER <= p_end; ANOTHER_POINTER++ )
   {
      if (( *YET_ANOTHER_POINTER ) == ( *ANOTHER_POINTER ))
      {
         p_in = ANOTHER_POINTER;
         for ( VAR__21230 = 0; VAR__21230 < n2; VAR__21230++ )
         {
            if (( *YET_ANOTHER_POINTER ) != ( *ANOTHER_POINTER ))
            {
               ANOTHER_POINTER--;
               break;
            }
            else
            {
               YET_ANOTHER_POINTER++;
               ANOTHER_POINTER++;
            }
         }

         YET_ANOTHER_POINTER = &a2[0];

         if (( VAR__21230 == n2 ) && (( *( p_in - 1 )) == ' ' ))
         {
            if ( n3 > n2 )
            {
               VAR_233 = p_end;

               while ( VAR_233 >= ANOTHER_POINTER )
               {
                  *(( VAR_233 + n3 ) - n2 ) = *VAR_233;
                  VAR_233--;
               }

               ANOTHER_POINTER = ( ANOTHER_POINTER + n3 ) - n2;
            }

            if ( n3 < n2 )
            {
               VAR_233         = ANOTHER_POINTER;
               ANOTHER_POINTER = ( VAR_233 + n3 ) - n2;

               while ( VAR_233 <= p_end )
               {
                  *(( VAR_233 + n3 ) - n2 ) = *VAR_233;
                  VAR_233++;
               }
            }

            p_end = ( p_end + n3 ) - n2;

            while ( p_in < ANOTHER_POINTER )
            {
               *p_in = *p3;
               p_in++;
               p3++;
            }
         }
         else
         if (( VAR__21230 == n2 ) && ( p_in == ( &a1[0] )))
         {
            if ( n3 > n2 )
            {
               VAR_233 = p_end;

               while ( VAR_233 >= ANOTHER_POINTER )
               {
                  *(( VAR_233 + n3 ) - n2 ) = *VAR_233;
                  VAR_233--;
               }

               ANOTHER_POINTER = ( ANOTHER_POINTER + n3 ) - n2;
            }

            if ( n3 < n2 )
            {
               VAR_233         = ANOTHER_POINTER;
               ANOTHER_POINTER = ( VAR_233 + n3 ) - n2;

               while ( VAR_233 <= p_end )
               {
                  *(( VAR_233 + n3 ) - n2 ) = *VAR_233;
                  VAR_233++;
               }
            }

            p_end = ( p_end + n3 ) - n2;

            while ( p_in < ANOTHER_POINTER )
            {
               *p_in = *p3;
               p_in++;
               p3++;
            }
         }


         p3 = &a3[0];
      }
   }

   for ( VAR_233 = &a1[0]; VAR_233 <= p_end; VAR_233++ )
   {
      printf("%c", *VAR_233);
   }

   return 0;
}
