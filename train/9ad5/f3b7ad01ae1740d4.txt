int tree(int, int);
int power(int, int);

int main()
{
   int VAR__7685;
   int VAR__3918907;

   ( cin >> VAR__7685 ) >> VAR__3918907;
   ( cout << tree(VAR__7685, VAR__3918907)) << endl;
   return 0;
}


int tree(int VAR__819283, int VAR__19328)
{
   int VAR__53647;
   int VAR__4857423;

   for ( VAR__53647 = 0; VAR__53647 < 11; VAR__53647++ )
   {
      VAR__4857423 = VAR__819283 / power(2, VAR__53647);

      if ( VAR__19328 == VAR__4857423 )
      {
         return VAR__19328;
      }
   }

   for ( VAR__53647 = 0; VAR__53647 < 11; VAR__53647++ )
   {
      VAR__4857423 = VAR__19328 / power(2, VAR__53647);

      if ( VAR__819283 == VAR__4857423 )
      {
         return VAR__819283;
      }
   }

   if (( VAR__819283 == 1 ) || ( VAR__19328 == 1 ))
   {
      return 1;
   }

   return tree(VAR__819283 / 2, VAR__19328 / 2);
}


int power(int VAR__1238129, int VAR_1238123)
{
   int VAR__21230;
   int VAR__SUM = 1;

   for ( VAR__21230 = 0; VAR__21230 < VAR_1238123; VAR__21230++ )
   {
      VAR__SUM = VAR__SUM * VAR__1238129;
   }

   return VAR__SUM;
}
