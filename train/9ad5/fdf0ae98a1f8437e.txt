int x1;
int y1;
int a1[100];
int a2[100];
int VAR__MAX(int VAR__819283, int VAR__19328)
{
   if ( VAR__819283 >= VAR__19328 )
   {
      return VAR__819283;
   }
   else
   {
      return VAR__19328;
   }
}


void find(int VAR_1238123)
{
   int VAR__53647;
   int VAR__21230;
   int VAR__8444594;

   for ( VAR__21230 = 0; ; VAR__21230++ )
   {
      if (( power(2, VAR__21230 + 1) > VAR_1238123 ) && ( power(2, VAR__21230) <= VAR_1238123 ))
      {
         x1 = VAR__21230;
         break;
      }
   }
}


int power(int VAR__819283, int VAR__19328)
{
   int VAR_233;
   int VAR_9494 = 1;

   for ( VAR_233 = 0; VAR_233 < VAR__19328; VAR_233++ )
   {
      VAR_9494 = VAR_9494 * VAR__819283;
   }

   return VAR_9494;
}


int main()
{
   int n1;
   int n2;
   int VAR__53647;
   int VAR__21230;
   int o;
   int t1;
   int t2;

   scanf("%d %d", &n1, &n2);
   find(n1);
   t1 = x1;
   for ( VAR__53647 = x1; VAR__53647 >= 0; VAR__53647-- )
   {
      a1[VAR__53647] = n1;
      y1             = n1 - power(2, VAR__53647);

      if (( n1 % 2 ) == 0 )
      {
         o = ( y1 / 2 ) + power(2, VAR__53647 - 1);
      }
      else
      {
         o = (( y1 + 1 ) / 2 ) + power(2, VAR__53647 - 1);
      }

      n1 = n1 - o;
   }

   find(n2);
   t2 = x1;
   for ( VAR__53647 = x1; VAR__53647 >= 0; VAR__53647-- )
   {
      a2[VAR__53647] = n2;
      y1             = n2 - power(2, VAR__53647);

      if (( n2 % 2 ) == 0 )
      {
         o = ( y1 / 2 ) + power(2, VAR__53647 - 1);
      }
      else
      {
         o = (( y1 + 1 ) / 2 ) + power(2, VAR__53647 - 1);
      }

      n2 = n2 - o;
   }

   for ( VAR__53647 = VAR__MAX(t1, t2); VAR__53647 >= 0; VAR__53647-- )
   {
      if ( a2[VAR__53647] == a1[VAR__53647] )
      {
         printf("%d\n", a1[VAR__53647]);
         break;
      }
   }

   return 0;
}
