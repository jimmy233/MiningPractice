int g_a;
int g_Matrix[100][100];
int Operation(int);
void lineDel(int);
void rowDel(int);
void Transform(int);

void lineDel(int times)
{
   int VAR__53647;
   int VAR__21230;
   int VAR__MIN;
   int post;

   for ( VAR__53647 = 1; VAR__53647 <= times; VAR__53647++ )
   {
      VAR__MIN = g_Matrix[VAR__53647][1];
      post     = 1;
      for ( VAR__21230 = 1; VAR__21230 <= times; VAR__21230++ )
      {
         if ( g_Matrix[VAR__53647][VAR__21230] < VAR__MIN )
         {
            VAR__MIN = g_Matrix[VAR__53647][VAR__21230];
            post     = VAR__21230;
         }
      }

      g_Matrix[0][VAR__21230] = 0;
      for ( VAR__21230 = 1; VAR__21230 <= times; VAR__21230++ )
      {
         g_Matrix[VAR__53647][VAR__21230] -= VAR__MIN;
      }
   }
}


void rowDel(int times)
{
   int VAR__53647;
   int VAR__21230;
   int VAR__MIN;
   int post;

   for ( VAR__21230 = 1; VAR__21230 <= times; VAR__21230++ )
   {
      if ( g_Matrix[0][VAR__21230] )
      {
         VAR__MIN = g_Matrix[1][VAR__21230];
         post     = 1;
         for ( VAR__53647 = 1; VAR__53647 <= times; VAR__53647++ )
         {
            if ( g_Matrix[VAR__53647][VAR__21230] < VAR__MIN )
            {
               VAR__MIN = g_Matrix[VAR__53647][VAR__21230];
               post     = VAR__53647;
            }
         }

         for ( VAR__53647 = 1; VAR__53647 <= times; VAR__53647++ )
         {
            g_Matrix[VAR__53647][VAR__21230] -= VAR__MIN;
         }
      }
   }
}


void Transform(int times)
{
   int VAR__53647;
   int VAR__21230;

   for ( VAR__53647 = 1; VAR__53647 <= times; VAR__53647++ )
   {
      for ( VAR__21230 = 1; VAR__21230 <= times; VAR__21230++ )
      {
         if (( VAR__53647 == 1 ) && ( VAR__21230 > 1 ))
         {
            g_Matrix[VAR__53647][VAR__21230] = g_Matrix[VAR__53647][VAR__21230 + 1];
         }

         if (( VAR__21230 == 1 ) && ( VAR__53647 > 1 ))
         {
            g_Matrix[VAR__53647][VAR__21230] = g_Matrix[VAR__53647 + 1][VAR__21230];
         }

         if (( VAR__53647 > 1 ) && ( VAR__21230 > 1 ))
         {
            g_Matrix[VAR__53647][VAR__21230] = g_Matrix[VAR__53647 + 1][VAR__21230 + 1];
         }
      }
   }
}


int Operation(int times)
{
   int VAR__21230;
   int VAR__NUM;

   if ( times != 1 )
   {
      for ( VAR__21230 = 1; VAR__21230 <= times; VAR__21230++ )
      {
         g_Matrix[0][VAR__21230] = 1;
      }

      lineDel(times);
      rowDel(times);
      VAR__NUM = g_Matrix[2][2];
      Transform(times - 1);
      return VAR__NUM + Operation(times - 1);
   }
   else
   {
      return 0;
   }
}


int main()
{
   int VAR_1238123;
   int VAR__53647;
   int VAR__21230;

   cin >> VAR_1238123;
   g_a = VAR_1238123;

   while ( VAR_1238123-- )
   {
      for ( VAR__53647 = 1; VAR__53647 <= g_a; VAR__53647++ )
      {
         for ( VAR__21230 = 1; VAR__21230 <= g_a; VAR__21230++ )
         {
            cin >> g_Matrix[VAR__53647][VAR__21230];
         }
      }


      ( cout << Operation(g_a)) << endl;
   }

   return 0;
}
