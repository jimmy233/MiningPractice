void Delete(int VAR__819283[][101], int, int);
int check_min(int VAR__819283[], int);

int VAR__SUM[101];
int VAR__819283[101][101];
int main()
{
   int VAR_1238123;
   int VAR_233;
   int VAR__53647;
   int VAR__21230;
   int VAR__1111;
   int VAR__1238129;
   int VAR__8444594;

   memset(VAR__819283, 0, sizeof( VAR__819283 ));
   memset(VAR__SUM, 0, sizeof( VAR__SUM ));
   cin >> VAR_1238123;
   for ( VAR__8444594 = 0; VAR__8444594 < VAR_1238123; VAR__8444594++ )
   {
      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         for ( VAR__21230 = 0; VAR__21230 < VAR_1238123; VAR__21230++ )
         {
            cin >> VAR__819283[VAR__53647][VAR__21230];
         }
      }

      Delete(VAR__819283, VAR_1238123, VAR__8444594);
   }

   for ( VAR__1111 = 0; VAR__1111 < VAR_1238123; VAR__1111++ )
   {
      ( cout << VAR__SUM[VAR__1111] ) << endl;
   }

   return 0;
}


void Delete(int VAR__819283[][101], int VAR_1238123, int VAR_233)
{
   if ( VAR_1238123 == 1 )
   {
      return;
   }

   int VAR__53647;
   int VAR__21230;
   int VAR__8444594;
   int VAR__1111;
   int VAR__1238129;
   int VAR_666;
   int VAR_129012;
   int VAR_9494;
   int VAR__MIN;
   int Min[101];
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      VAR__MIN = check_min(VAR__819283[VAR__53647], VAR_1238123);
      for ( VAR__21230 = 0; VAR__21230 < VAR_1238123; VAR__21230++ )
      {
         VAR__819283[VAR__53647][VAR__21230] = VAR__819283[VAR__53647][VAR__21230] - VAR__MIN;
      }
   }

   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 < VAR_1238123; VAR__21230++ )
      {
         if ( VAR__21230 == 0 )
         {
            Min[VAR__53647] = VAR__819283[VAR__21230][VAR__53647];
         }

         if ( VAR__819283[VAR__21230][VAR__53647] < Min[VAR__53647] )
         {
            Min[VAR__53647] = VAR__819283[VAR__21230][VAR__53647];
         }
      }
   }

   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 < VAR_1238123; VAR__21230++ )
      {
         VAR__819283[VAR__21230][VAR__53647] = VAR__819283[VAR__21230][VAR__53647] - Min[VAR__53647];
      }
   }

   VAR__SUM[VAR_233] = VAR__SUM[VAR_233] + VAR__819283[1][1];
   for ( VAR__8444594 = 2; VAR__8444594 < VAR_1238123; VAR__8444594++ )
   {
      for ( VAR__1111 = 2; VAR__1111 < VAR_1238123; VAR__1111++ )
      {
         VAR__819283[VAR__8444594 - 1][VAR__1111 - 1] = VAR__819283[VAR__8444594][VAR__1111];
      }
   }

   for ( VAR__1238129 = 2; VAR__1238129 < VAR_1238123; VAR__1238129++ )
   {
      VAR__819283[0][VAR__1238129 - 1] = VAR__819283[0][VAR__1238129];
      VAR__819283[VAR__1238129 - 1][0] = VAR__819283[VAR__1238129][0];
   }

   Delete(VAR__819283, VAR_1238123 - 1, VAR_233);
}


int check_min(int VAR__819283[], int VAR_1238123)
{
   int VAR__MIN;
   int VAR__53647;

   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      if ( VAR__53647 == 0 )
      {
         VAR__MIN = VAR__819283[VAR__53647];
      }

      if ( VAR__819283[VAR__53647] < VAR__MIN )
      {
         VAR__MIN = VAR__819283[VAR__53647];
      }
   }

   return VAR__MIN;
}
