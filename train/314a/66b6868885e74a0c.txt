int main()
{
   int  time[1001] = { 0 };
   char VAR__7685[10000];
   char ch;
   int  tem[1001];
   int  VAR__MAX   = 0;
   int  VAR__COUNT = 1;
   int  LEN_OF_STH;
   int  come[1001];
   int  go[1001];
   int  VAR__53647;
   int  VAR__21230;

   cin.getline(VAR__7685, 10000, '\n');
   LEN_OF_STH = strlen(VAR__7685);
   for ( VAR__53647 = 0; VAR__53647 <= 1000; VAR__53647++ )
   {
      time[VAR__53647] = 0;
   }

   for ( VAR__53647 = 0; VAR__53647 <= ( LEN_OF_STH - 1 ); VAR__53647++ )
   {
      if ( VAR__7685[VAR__53647] == ',' )
      {
         tem[VAR__COUNT] = VAR__53647;
         VAR__COUNT++;
      }

      tem[VAR__COUNT] = LEN_OF_STH;
      tem[0]          = -1;
   }

   for ( VAR__53647 = 1; VAR__53647 <= VAR__COUNT; VAR__53647++ )
   {
      if (( tem[VAR__53647] - tem[VAR__53647 - 1] ) == 2 )
      {
         come[VAR__53647] = VAR__7685[tem[VAR__53647] - 1] - 48;
      }

      if (( tem[VAR__53647] - tem[VAR__53647 - 1] ) == 3 )
      {
         come[VAR__53647] = ( VAR__7685[tem[VAR__53647] - 1] - 48 ) + ( 10 * ( VAR__7685[tem[VAR__53647] - 2] - 48 ));
      }

      if (( tem[VAR__53647] - tem[VAR__53647 - 1] ) == 4 )
      {
         come[VAR__53647] = (( VAR__7685[tem[VAR__53647] - 1] - 48 ) + ( 10 * ( VAR__7685[tem[VAR__53647] - 2] - 48 ))) + ( 100 * ( VAR__7685[tem[VAR__53647] - 3] - 48 ));
      }
   }

   for ( VAR__53647 = 1; VAR__53647 <= ( VAR__COUNT - 1 ); VAR__53647++ )
   {
      ( cin >> go[VAR__53647] ) >> ch;
   }

   cin >> go[VAR__COUNT];
   for ( VAR__53647 = 1; VAR__53647 <= VAR__COUNT; VAR__53647++ )
   {
      for ( VAR__21230 = come[VAR__53647]; VAR__21230 < go[VAR__53647]; VAR__21230++ )
      {
         time[VAR__21230]++;
      }
   }

   for ( VAR__53647 = 0; VAR__53647 <= 999; VAR__53647++ )
   {
      if ( time[VAR__53647] > VAR__MAX )
      {
         VAR__MAX = time[VAR__53647];
      }
   }

   ((( cout << VAR__COUNT ) << ' ' ) << VAR__MAX ) << endl;
   return 0;
}
