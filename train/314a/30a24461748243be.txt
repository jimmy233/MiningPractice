int  VAR__SUM     = 0;
int  LEN_OF_STH   = 0;
int  maxn         = 0;
char times[10001] = { 0 };
char inch[1001][5];
char outch[1001][5];
int  in[2001];
int  out[1001];
int  sch[1001] = { 0 };
int main()
{
   int VAR__53647;
   int VAR__21230   = 0;
   int VAR__8444594 = 0;

   memset(times, 0, sizeof( times ));
   cin >> times;

   while ( times[LEN_OF_STH] )
   {
      LEN_OF_STH += 1;
   }

   for ( VAR__53647 = 0; VAR__53647 < LEN_OF_STH; ++VAR__53647 )
   {
      if ( isdigit(times[VAR__53647]))
      {
         inch[VAR__21230][VAR__8444594] = times[VAR__53647];
         VAR__8444594++;
      }
      else
      {
         VAR__21230++;
         VAR__8444594 = 0;
      }
   }

   LEN_OF_STH   = 0;
   VAR__21230   = 0;
   VAR__8444594 = 0;
   memset(times, 0, sizeof( times ));
   cin >> times;

   while ( times[LEN_OF_STH] )
   {
      LEN_OF_STH++;
   }

   for ( VAR__53647 = 0; VAR__53647 < LEN_OF_STH; ++VAR__53647 )
   {
      if ( isdigit(times[VAR__53647]))
      {
         outch[VAR__21230][VAR__8444594] = times[VAR__53647];
         VAR__8444594++;
      }
      else
      {
         VAR__21230++;
         VAR__8444594 = 0;
      }
   }

   VAR__SUM = VAR__21230 + 1;
   for ( VAR__53647 = 0; VAR__53647 < VAR__SUM; ++VAR__53647 )
   {
      in[VAR__53647]  = atoi(inch[VAR__53647]);
      out[VAR__53647] = atoi(outch[VAR__53647]);
   }

   for ( VAR__53647 = 0; VAR__53647 < VAR__SUM; ++VAR__53647 )
   {
      for ( VAR__21230 = in[VAR__53647]; VAR__21230 < out[VAR__53647]; ++VAR__21230 )
      {
         sch[VAR__21230]++;
      }
   }

   for ( VAR__53647 = 0; VAR__53647 < 1001; ++VAR__53647 )
   {
      if ( sch[VAR__53647] > maxn )
      {
         maxn = sch[VAR__53647];
      }
   }


   ((( cout << VAR__SUM ) << " " ) << maxn ) << endl;
   return 0;
}
