int main()
{
   char num1[251];
   char num2[251];
   int  VAR__53647;
   int  len1;
   int  len2;
   int  num_sum[251];

   for ( VAR__53647 = 0; VAR__53647 < 251; VAR__53647++ )
   {
      num_sum[VAR__53647] = 0;
   }

   cin >> num1;
   cin >> num2;
   len1 = strlen(num1);
   len2 = strlen(num2);
   char temp_char;
   for ( VAR__53647 = 0; VAR__53647 < ( len1 / 2 ); VAR__53647++ )
   {
      temp_char        = num1[VAR__53647];
      num1[VAR__53647] = num1[( len1 - 1 ) - VAR__53647];
      num1[( len1 - 1 ) - VAR__53647] = temp_char;
   }

   num1[len1] = '\0';
   for ( VAR__53647 = 0; VAR__53647 < ( len2 / 2 ); VAR__53647++ )
   {
      temp_char        = num2[VAR__53647];
      num2[VAR__53647] = num2[( len2 - 1 ) - VAR__53647];
      num2[( len2 - 1 ) - VAR__53647] = temp_char;
   }

   num2[len2] = '\0';

   if ( len1 >= len2 )
   {
      for ( VAR__53647 = 0; VAR__53647 < len2; VAR__53647++ )
      {
         num_sum[VAR__53647] = (( num1[VAR__53647] - '0' ) + num2[VAR__53647] ) - '0';
      }

      for ( VAR__53647 = len2; VAR__53647 < len1; VAR__53647++ )
      {
         num_sum[VAR__53647] = num1[VAR__53647] - '0';
      }

      for ( VAR__53647 = 0; VAR__53647 < len1; VAR__53647++ )
      {
         if ( num_sum[VAR__53647] > 9 )
         {
            num_sum[VAR__53647]     = num_sum[VAR__53647] - 10;
            num_sum[VAR__53647 + 1] = num_sum[VAR__53647 + 1] + 1;
         }
      }
   }
   else
   {
      for ( VAR__53647 = 0; VAR__53647 < len1; VAR__53647++ )
      {
         num_sum[VAR__53647] = (( num1[VAR__53647] - '0' ) + num2[VAR__53647] ) - '0';
      }

      for ( VAR__53647 = len1; VAR__53647 < len2; VAR__53647++ )
      {
         num_sum[VAR__53647] = num2[VAR__53647] - '0';
      }

      for ( VAR__53647 = 0; VAR__53647 < len2; VAR__53647++ )
      {
         if ( num_sum[VAR__53647] > 9 )
         {
            num_sum[VAR__53647]     = num_sum[VAR__53647] - 10;
            num_sum[VAR__53647 + 1] = num_sum[VAR__53647 + 1] + 1;
         }
      }
   }

   int first_pos = 0;
   for ( VAR__53647 = 250; VAR__53647 >= 0; VAR__53647-- )
   {
      if ( num_sum[VAR__53647] != 0 )
      {
         first_pos = VAR__53647;
         break;
      }
   }


   for ( VAR__53647 = first_pos; VAR__53647 >= 0; VAR__53647-- )
   {
      cout << num_sum[VAR__53647];
   }

   cout << endl;
   return 0;
}
