void conv(int VAR__819283[], char A_STRING[])
{
   memset(VAR__819283, 0, ( sizeof( int )) * MAXN);
   int VAR__1111 = strlen(A_STRING);
   for ( int VAR__53647 = VAR__1111 - 1; VAR__53647 >= 0; --VAR__53647 )
   {
      VAR__819283[( VAR__1111 - 1 ) - VAR__53647] = A_STRING[VAR__53647] - '0';
   }
}


void BigNumAdd(int VAR__819283[], int VAR__19328[], int VAR__4857423[])
{
   memset(VAR__4857423, 0, ( sizeof( int )) * MAXN);
   for ( int VAR__53647 = 0; VAR__53647 < MAXN; VAR__53647++ )
   {
      VAR__4857423[VAR__53647] += VAR__819283[VAR__53647] + VAR__19328[VAR__53647];

      if ( VAR__4857423[VAR__53647] >= 10 )
      {
         VAR__4857423[VAR__53647 + 1]++;
         VAR__4857423[VAR__53647] -= 10;
      }
   }
}


void printBigNum(int VAR__819283[])
{
   int VAR__53647;

   for ( VAR__53647 = MAXN - 1; ( VAR__819283[VAR__53647] == 0 ) && ( VAR__53647 >= 0 ); --VAR__53647 )
   {
   }

   if ( VAR__53647 == ( -1 ))
   {
      ( cout << 0 ) << endl;
      return;
   }

   for ( ; VAR__53647 >= 0; --VAR__53647 )
   {
      cout << VAR__819283[VAR__53647];
   }

   cout << endl;
}


int main()
{
   int  VAR__819283[MAXN];
   int  VAR__19328[MAXN];
   int  VAR__4857423[MAXN];
   char A_STRING[MAXN];

   cin >> A_STRING;
   conv(VAR__819283, A_STRING);
   cin >> A_STRING;
   conv(VAR__19328, A_STRING);
   BigNumAdd(VAR__819283, VAR__19328, VAR__4857423);
   printBigNum(VAR__4857423);
   return 0;
}
