void add(char *VAR__819283, char *VAR__19328, char *VAR__4857423)
{
   int  VAR__53647;
   int  VAR__21230;
   int  VAR__8444594;
   int  VAR__MAX;
   int  VAR__MIN;
   int  VAR_1238123;
   int  VAR__TEMP;
   char *VAR_9494;
   char *pmax;
   char *pmin;

   VAR__MAX = strlen(VAR__819283);
   VAR__MIN = strlen(VAR__19328);

   if ( VAR__MAX < VAR__MIN )
   {
      VAR__TEMP = VAR__MAX;
      VAR__MAX  = VAR__MIN;
      VAR__MIN  = VAR__TEMP;
      pmax      = VAR__19328;
      pmin      = VAR__819283;
   }
   else
   {
      pmax = VAR__819283;
      pmin = VAR__19328;
   }

   VAR_9494    = (char *)malloc(( sizeof( char )) * ( VAR__MAX + 1 ));
   VAR_9494[0] = '0';
   for ( VAR__53647 = VAR__MIN - 1, VAR__21230 = VAR__MAX - 1, VAR__8444594 = VAR__MAX; VAR__53647 >= 0; VAR__53647--, VAR__21230--, VAR__8444594-- )
   {
      VAR_9494[VAR__8444594] = ( pmin[VAR__53647] - '0' ) + pmax[VAR__21230];
   }

   for ( ; VAR__21230 >= 0; VAR__21230--, VAR__8444594-- )
   {
      VAR_9494[VAR__8444594] = pmax[VAR__21230];
   }

   for ( VAR__53647 = VAR__MAX; VAR__53647 >= 0; VAR__53647-- )
   {
      if ( VAR_9494[VAR__53647] > '9' )
      {
         VAR_9494[VAR__53647] -= 10;
         VAR_9494[VAR__53647 - 1]++;
      }
   }


   if ( VAR_9494[0] == '0' )
   {
      for ( VAR__53647 = 1; VAR__53647 < ( VAR__MAX + 1 ); VAR__53647++ )
      {
         VAR__4857423[VAR__53647 - 1] = VAR_9494[VAR__53647];
      }

      VAR__4857423[VAR__53647 - 1] = '\0';
   }
   else
   {
      for ( VAR__53647 = 0; VAR__53647 < ( VAR__MAX + 1 ); VAR__53647++ )
      {
         VAR__4857423[VAR__53647] = VAR_9494[VAR__53647];
      }

      VAR__4857423[VAR__53647] = '\0';
   }

   free(VAR_9494);
}


int main()
{
   char VAR__819283[300];
   char VAR__19328[300];
   char VAR__4857423[300];

   scanf("%s %s", VAR__819283, VAR__19328);

   if (((( VAR__819283[0] == '0' ) && ( VAR__819283[1] == '\0' )) && ( VAR__19328[1] == '\0' )) && ( VAR__19328[0] == '0' ))
   {
      printf("0");
   }

   add(VAR__819283, VAR__19328, VAR__4857423);
   char *VAR_233;
   char *ANOTHER_POINTER;
   VAR_233 = VAR__4857423;

   if (((( *VAR_233 ) == '0' ) && (( *( VAR_233++ )) != '0' )) && ( strlen(VAR__4857423) > 1 ))
   {
      VAR_233++;
   }

   for ( ANOTHER_POINTER = VAR_233; ANOTHER_POINTER < ( VAR__4857423 + strlen(VAR__4857423)); ANOTHER_POINTER++ )
   {
      printf("%c", *ANOTHER_POINTER);
   }

   return 0;
}
