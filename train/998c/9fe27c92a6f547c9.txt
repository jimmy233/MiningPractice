int add(int maxlen, int *num1, int *num2);

int  maxlen;
int  len1;
int  len2;
int  highestpos;
int  num1[256];
int  num2[256];
char VAR__819283[256];
char VAR__19328[256];
int main()
{
   int VAR__53647;
   int VAR__21230;

   ( cin >> VAR__819283 ) >> VAR__19328;
   len1   = strlen(VAR__819283);
   len2   = strlen(VAR__19328);
   maxlen = ( len1 > len2 ) ? ( len1 ) : ( len2 );
   for ( VAR__53647 = 0, VAR__21230 = len1 - 1; VAR__53647 < len1; VAR__53647++, VAR__21230-- )
   {
      num1[VAR__53647] = VAR__819283[VAR__21230] - '0';
   }

   for ( VAR__53647 = 0, VAR__21230 = len2 - 1; VAR__53647 < len2; VAR__53647++, VAR__21230-- )
   {
      num2[VAR__53647] = VAR__19328[VAR__21230] - '0';
   }

   highestpos = add(maxlen, num1, num2);
   for ( VAR__53647 = highestpos; VAR__53647 >= 0; VAR__53647-- )
   {
      cout << num1[VAR__53647];
   }

   return 0;
}


int add(int maxlen, int *num1, int *num2)
{
   int VAR__53647;

   highestpos = 0;
   for ( VAR__53647 = 0; VAR__53647 <= maxlen; VAR__53647++ )
   {
      num1[VAR__53647] = num1[VAR__53647] + num2[VAR__53647];

      if ( num1[VAR__53647] >= 10 )
      {
         num1[VAR__53647] = num1[VAR__53647] - 10;
         num1[VAR__53647 + 1]++;
      }

      if ( num1[VAR__53647] )
      {
         highestpos = VAR__53647;
      }
   }

   return highestpos;
}
