char VAR__819283[300];
char VAR__19328[300];
char VAR__7685[300];
char VAR__3918907[300];
int  he[300];
int  VAR__1111;
int main()
{
   int VAR__53647;
   int VAR__21230;

   ( cin >> VAR__819283 ) >> VAR__19328;

   if (((( strlen(VAR__819283) == 1 ) && ( strlen(VAR__19328) == 1 )) && ( VAR__819283[0] == '0' )) && ( VAR__19328[0] == '0' ))
   {
      ( cout << "0" ) << endl;
   }
   else
   {
      memset(he, 0, sizeof( he ));
      memset(VAR__7685, '0', sizeof( VAR__7685 ));
      memset(VAR__3918907, '0', sizeof( VAR__3918907 ));
      for ( VAR__53647 = 0; VAR__53647 < strlen(VAR__819283); VAR__53647++ )
      {
         VAR__7685[( strlen(VAR__819283) - VAR__53647 ) - 1] = VAR__819283[VAR__53647];
      }

      for ( VAR__53647 = 0; VAR__53647 < strlen(VAR__19328); VAR__53647++ )
      {
         VAR__3918907[( strlen(VAR__19328) - VAR__53647 ) - 1] = VAR__19328[VAR__53647];
      }

      if ( strlen(VAR__819283) > strlen(VAR__19328))
      {
         VAR__1111 = strlen(VAR__819283);
         for ( VAR__53647 = strlen(VAR__19328); VAR__53647 < strlen(VAR__819283); VAR__53647++ )
         {
            VAR__3918907[VAR__53647] = '0';
         }
      }
      else
      {
         VAR__1111 = strlen(VAR__19328);
         for ( VAR__53647 = strlen(VAR__819283); VAR__53647 < strlen(VAR__19328); VAR__53647++ )
         {
            VAR__7685[VAR__53647] = '0';
         }
      }

      for ( VAR__53647 = 0; VAR__53647 < VAR__1111; VAR__53647++ )
      {
         he[VAR__53647] = ( he[VAR__53647] + (((int)VAR__7685[VAR__53647] ) - 48 )) + (((int)VAR__3918907[VAR__53647] ) - 48 );

         if ( he[VAR__53647] >= 10 )
         {
            he[VAR__53647 + 1]++;
            he[VAR__53647] = he[VAR__53647] % 10;
         }
      }

      for ( VAR__53647 = 299; VAR__53647 >= 0; VAR__53647-- )
      {
         if ( he[VAR__53647] != 0 )
         {
            break;
         }
      }

      for ( VAR__21230 = VAR__53647; VAR__21230 >= 0; VAR__21230-- )
      {
         cout << he[VAR__21230];
      }

      cout << endl;
   }

   return 0;
}
