struct stu
{
   int        VAR__NUM;
   struct stu *VAR__NEXT;
};
int main()
{
   int VAR__53647;
   int VAR__21230;
   int VAR_1238123;
   int VAR__3918907;
   int VAR_666;
   int VAR__1238129;
   int VAR__temp;

   VAR_1238123 = 1000;
   struct stu *VAR__HEAD;
   struct stu *head0;
   struct stu *VAR_233;
   struct stu *ANOTHER_POINTER;
   struct stu *YET_ANOTHER_POINTER;
   struct stu *p0;
   struct stu *p3;
   struct stu *p4;
   struct stu *p5;
   struct stu *p6;
   struct stu *p7;
   struct stu *p8;
   char       VAR__819283[VAR_1238123];
   char       VAR__19328[VAR_1238123];
   gets(VAR__819283);
   VAR__53647 = strlen(VAR__819283);
   gets(VAR__19328);
   VAR__21230 = strlen(VAR__19328);

   if ( VAR__53647 > VAR__21230 )
   {
      VAR__temp = VAR__53647;
   }
   else
   {
      VAR__temp = VAR__21230;
   }

   VAR__temp = VAR__temp + 1;
   int VAR__112390[VAR__temp];
   ANOTHER_POINTER           = ( YET_ANOTHER_POINTER = (struct stu *)malloc(LEN));
   ANOTHER_POINTER->VAR__NUM = VAR__819283[VAR__53647 - 1] - '0';
   VAR__HEAD    = ANOTHER_POINTER;
   p3           = ( p4 = (struct stu *)malloc(LEN));
   p3->VAR__NUM = VAR__19328[VAR__21230 - 1] - '0';
   head0        = p3;
   VAR__53647   = VAR__53647 - 1;
   VAR__21230   = VAR__21230 - 1;
   VAR_233      = VAR__HEAD;
   p0           = head0;
   int c1 = 0;
   int c2;
   c2           = VAR_233->VAR__NUM + p0->VAR__NUM;
   p5           = ( p6 = (struct stu *)malloc(LEN));
   VAR__3918907 = c2 + ( c1 / 10 );
   p5->VAR__NUM = VAR__3918907 % 10;
   c1           = c2;
   p7           = p5;

   while (( VAR__53647 > 0 ) || ( VAR__21230 > 0 ))
   {
      YET_ANOTHER_POINTER            = ANOTHER_POINTER;
      ANOTHER_POINTER                = (struct stu *)malloc(LEN);
      ANOTHER_POINTER->VAR__NUM      = ( VAR__53647 > 0 ) ? ( VAR__819283[--VAR__53647] - '0' ) : ( 0 );
      YET_ANOTHER_POINTER->VAR__NEXT = ANOTHER_POINTER;
      p4            = p3;
      p3            = (struct stu *)malloc(LEN);
      p3->VAR__NUM  = ( VAR__21230 > 0 ) ? ( VAR__19328[--VAR__21230] - '0' ) : ( 0 );
      p4->VAR__NEXT = p3;
      p0            = p0->VAR__NEXT;
      VAR_233       = VAR_233->VAR__NEXT;
      c2            = VAR_233->VAR__NUM + p0->VAR__NUM;
      p6            = p5;
      p5            = (struct stu *)malloc(LEN);
      VAR__3918907  = c2 + ( VAR__3918907 / 10 );
      p5->VAR__NUM  = VAR__3918907 % 10;
      c1            = c2;
      p6->VAR__NEXT = p5;
   }

   ANOTHER_POINTER->VAR__NEXT = NULL;
   p3->VAR__NEXT = NULL;
   p6            = p5;
   p5            = (struct stu *)malloc(LEN);
   p5->VAR__NUM  = VAR__3918907 / 10;
   p6->VAR__NEXT = p5;
   p5->VAR__NEXT = NULL;
   VAR_233       = VAR__HEAD;
   p0            = head0;
   p8            = p7;
   for ( VAR__1238129 = VAR__temp - 1; p8 != NULL; VAR__1238129-- )
   {
      VAR__112390[VAR__1238129] = p8->VAR__NUM;
      p8 = p8->VAR__NEXT;
   }

   VAR__1238129 = 0;

   if (( p5->VAR__NUM == 0 ) && ( VAR__temp == 2 ))
   {
      VAR__1238129 = 1;
   }
   else
   {
      while (( VAR__112390[VAR__1238129] == 0 ) && ( VAR__1238129 < VAR__temp ))
      {
         VAR__1238129++;
      }
   }

   for ( VAR__3918907 = VAR__1238129; VAR__3918907 < VAR__temp; VAR__3918907++ )
   {
      printf("%d", VAR__112390[VAR__3918907]);
   }

   getchar();
   getchar();
   getchar();
}
