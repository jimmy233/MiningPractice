void rev(char *VAR__7685);
int val(char VAR__819283);

int main()
{
   char VAR__819283[260];
   char VAR__19328[260];
   char VAR__SUM[260];
   int  VAR__53647;
   int  tmp  = 0;
   int  sign = 0;

   for ( VAR__53647 = 0; VAR__53647 < 260; VAR__53647++ )
   {
      VAR__819283[VAR__53647] = 0;
   }

   for ( VAR__53647 = 0; VAR__53647 < 260; VAR__53647++ )
   {
      VAR__19328[VAR__53647] = 0;
   }

   for ( VAR__53647 = 0; VAR__53647 < 260; VAR__53647++ )
   {
      VAR__SUM[VAR__53647] = 0;
   }

   gets(VAR__819283);
   gets(VAR__19328);
   rev(VAR__819283);
   rev(VAR__19328);
   for ( VAR__53647 = 0; ( VAR__53647 <= strlen(VAR__819283)) || ( VAR__53647 <= strlen(VAR__19328)); VAR__53647++ )
   {
      VAR__SUM[VAR__53647] = (( val(VAR__819283[VAR__53647]) + val(VAR__19328[VAR__53647])) + tmp ) + '0';

      if ( VAR__SUM[VAR__53647] > '9' )
      {
         VAR__SUM[VAR__53647] = VAR__SUM[VAR__53647] - 10;
         tmp = 1;
      }
      else
      {
         tmp = 0;
      }
   }

   for ( VAR__53647 = strlen(VAR__SUM) - 1; VAR__53647 >= 0; VAR__53647-- )
   {
      if ( VAR__53647 == 0 )
      {
         sign = 1;
      }

      if (( VAR__SUM[VAR__53647] != '0' ) || ( sign == 1 ))
      {
         printf("%c", VAR__SUM[VAR__53647]);
         sign = 1;
      }
   }

   return 0;
}


void rev(char *VAR__7685)
{
   int VAR__53647;
   int tmp;
   int VAR__1111;

   VAR__1111 = strlen(VAR__7685);
   for ( VAR__53647 = 0; VAR__53647 <= (( VAR__1111 / 2 ) - 1 ); VAR__53647++ )
   {
      tmp = VAR__7685[VAR__53647];
      VAR__7685[VAR__53647] = VAR__7685[( VAR__1111 - VAR__53647 ) - 1];
      VAR__7685[( VAR__1111 - VAR__53647 ) - 1] = tmp;
   }
}


int val(char VAR__819283)
{
   if (( VAR__819283 > '0' ) && ( VAR__819283 <= '9' ))
   {
      return VAR__819283 - 48;
   }
   else
   {
      return 0;
   }
}
