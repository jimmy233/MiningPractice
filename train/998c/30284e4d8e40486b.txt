void add(char *VAR__819283, char *VAR__19328);

int main()
{
   char VAR__819283[301];
   char VAR__19328[301];

   ( cin >> VAR__819283 ) >> VAR__19328;

   if (( strcmp(VAR__819283, "0") == 0 ) && ( strcmp(VAR__19328, "0") == 0 ))
   {
      cout << 0;
   }
   else
   {
      if ( strlen(VAR__819283) >= strlen(VAR__19328))
      {
         add(VAR__819283, VAR__19328);
      }
      else
      {
         add(VAR__19328, VAR__819283);
      }
   }
}


void add(char *VAR__819283, char *VAR__19328)
{
   char VAR__4857423[301];

   memset(VAR__4857423, '0', sizeof( VAR__4857423 ));
   int VAR__12302[301];
   int VAR__127322[301];
   int l1 = strlen(VAR__819283);
   int l2 = strlen(VAR__19328);
   int VAR__53647;
   int VAR__temp;
   int VAR__21230;
   for ( VAR__53647 = l1 - 1; VAR__53647 >= 0; VAR__53647-- )
   {
      VAR__12302[( l1 - 1 ) - VAR__53647] = VAR__819283[VAR__53647] - '0';
   }

   for ( VAR__53647 = l2 - 1; VAR__53647 >= 0; VAR__53647-- )
   {
      VAR__127322[( l2 - 1 ) - VAR__53647] = VAR__19328[VAR__53647] - '0';
   }

   for ( VAR__53647 = l2; VAR__53647 < l1; VAR__53647++ )
   {
      VAR__127322[VAR__53647] = 0;
   }

   for ( VAR__53647 = 0; VAR__53647 < l1; VAR__53647++ )
   {
      VAR__temp = (( VAR__12302[VAR__53647] + VAR__127322[VAR__53647] ) + VAR__4857423[VAR__53647] ) - '0';
      VAR__4857423[VAR__53647]     = ( VAR__temp % 10 ) + '0';
      VAR__4857423[VAR__53647 + 1] = ( VAR__temp / 10 ) + '0';
   }

   for ( VAR__53647 = 200; VAR__53647 >= 0; VAR__53647-- )
   {
      if ( VAR__4857423[VAR__53647] != '0' )
      {
         break;
      }
   }


   for ( VAR__21230 = VAR__53647; VAR__21230 >= 0; VAR__21230-- )
   {
      cout << VAR__4857423[VAR__21230];
   }
}
