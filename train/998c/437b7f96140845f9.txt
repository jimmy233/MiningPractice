int VAR__1238129(int VAR__4857423[], int VAR__53647);

int main()
{
   const int MAX_LEN      = 251;
   int       an1[MAX_LEN] = { 0 };
   int       an2[MAX_LEN] = { 0 };
   int       VAR_1238123;
   char      seLine1[MAX_LEN + 1] = { 0 };
   char      seLine2[MAX_LEN + 1] = { 0 };
   int       VAR_233 = 0;

   cin.getline(seLine1, MAX_LEN + 1);
   cin.getline(seLine2, MAX_LEN + 1);
   int nLen1 = strlen(seLine1);
   int nLen2 = strlen(seLine2);
   memset(an1, 0, sizeof( an1 ));
   memset(an2, 0, sizeof( an2 ));
   int VAR__53647;
   int VAR__21230 = 0;
   for ( VAR__53647 = nLen1 - 1; VAR__53647 >= 0; VAR__53647-- )
   {
      an1[VAR__21230++] = seLine1[VAR__53647] - '0';
   }

   VAR__21230 = 0;
   for ( VAR__53647 = nLen2 - 1; VAR__53647 >= 0; VAR__53647-- )
   {
      an2[VAR__21230++] = seLine2[VAR__53647] - '0';
   }

   for ( VAR__53647 = 0; VAR__53647 < MAX_LEN; VAR__53647++ )
   {
      an1[VAR__53647] += an2[VAR__53647];
      VAR_233          = VAR__53647;

      if ( VAR__1238129(an1, VAR_233))
      {
         continue;
      }
   }

   VAR__53647 = MAX_LEN - 1;

   while (( an1[VAR__53647] == 0 ) && ( VAR__53647 > 0 ))
   {
      VAR__53647--;
   }

   for ( ; VAR__53647 >= 0; VAR__53647-- )
   {
      cout << an1[VAR__53647];
   }
}


int VAR__1238129(int VAR__4857423[], int VAR_233)
{
   if ( VAR__4857423[VAR_233] >= 10 )
   {
      VAR__4857423[VAR_233] -= 10;
      VAR__4857423[VAR_233 + 1]++;
      return VAR__4857423[VAR_233 + 1], VAR_233 + 1;
   }
   else
   {
      return 1;
   }
}
