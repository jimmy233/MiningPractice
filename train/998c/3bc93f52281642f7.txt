int main()
{
   int  an1[MAX_LEN];
   int  an2[MAX_LEN];
   int  VAR__SUM[MAX_LEN];
   char seLine1[MAX_LEN];
   char seLine2[MAX_LEN];

   gets(seLine1);
   gets(seLine2);
   int nLen1 = strlen(seLine1);
   int nLen2 = strlen(seLine2);
   memset(an1, 0, sizeof( an1 ));
   memset(an2, 0, sizeof( an2 ));
   memset(VAR__SUM, 0, sizeof( VAR__SUM ));
   int VAR__53647;
   int VAR__21230;
   int VAR__4857423;
   for ( VAR__53647 = nLen1 - 1, VAR__21230 = 0; VAR__53647 >= 0; VAR__53647--, VAR__21230++ )
   {
      an1[VAR__21230] = seLine1[VAR__53647] - '0';
   }

   for ( VAR__53647 = nLen2 - 1, VAR__21230 = 0; VAR__53647 >= 0; VAR__53647--, VAR__21230++ )
   {
      an2[VAR__21230] = seLine2[VAR__53647] - '0';
   }

   VAR__4857423 = 0;
   for ( VAR__53647 = 0; VAR__53647 < MAX_LEN; VAR__53647++ )
   {
      VAR__SUM[VAR__53647] = ( an1[VAR__53647] + an2[VAR__53647] ) + VAR__4857423;
      VAR__4857423         = 0;

      while ( VAR__SUM[VAR__53647] >= 10 )
      {
         VAR__SUM[VAR__53647] -= 10;
         VAR__4857423++;
      }
   }

   VAR__53647 = MAX_LEN - 1;

   while ( VAR__SUM[VAR__53647] == 0 )
   {
      VAR__53647--;
   }

   if ( VAR__53647 == ( -1 ))
   {
      printf("0");
   }

   for ( ; VAR__53647 >= 0; VAR__53647-- )
   {
      printf("%d", VAR__SUM[VAR__53647]);
   }

   printf("\n");
   return 0;
}
