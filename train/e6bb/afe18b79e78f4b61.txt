int VAR__21230;
int VAR__8444594;
int bec[9][9]     = { 0 };
int tempbec[9][9] = { 0 };
void increase(int bec[][9])
{
   bec[VAR__21230 - 1][VAR__8444594]     += tempbec[VAR__21230][VAR__8444594];
   bec[VAR__21230 - 1][VAR__8444594 - 1] += tempbec[VAR__21230][VAR__8444594];
   bec[VAR__21230 - 1][VAR__8444594 + 1] += tempbec[VAR__21230][VAR__8444594];
   bec[VAR__21230][VAR__8444594 - 1]     += tempbec[VAR__21230][VAR__8444594];
   bec[VAR__21230][VAR__8444594 + 1]     += tempbec[VAR__21230][VAR__8444594];
   bec[VAR__21230 + 1][VAR__8444594 - 1] += tempbec[VAR__21230][VAR__8444594];
   bec[VAR__21230 + 1][VAR__8444594]     += tempbec[VAR__21230][VAR__8444594];
   bec[VAR__21230 + 1][VAR__8444594 + 1] += tempbec[VAR__21230][VAR__8444594];
}


int main()
{
   int VAR__1238129;
   int VAR_1238123;
   int VAR__53647 = 0;
   int VAR__NUM   = 1;

   ( cin >> VAR__1238129 ) >> VAR_1238123;
   bec[4][4] = VAR__1238129;
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 < 9; VAR__21230++ )
      {
         for ( VAR__8444594 = 0; VAR__8444594 < 9; VAR__8444594++ )
         {
            tempbec[VAR__21230][VAR__8444594] = bec[VAR__21230][VAR__8444594];
            bec[VAR__21230][VAR__8444594]     = bec[VAR__21230][VAR__8444594] * 2;
         }
      }


      for ( VAR__21230 = 1; VAR__21230 < 8; VAR__21230++ )
      {
         for ( VAR__8444594 = 1; VAR__8444594 < 8; VAR__8444594++ )
         {
            increase(bec);
         }
      }
   }

   for ( VAR__21230 = 0; VAR__21230 < 9; VAR__21230++ )
   {
      for ( VAR__8444594 = 0; VAR__8444594 < 9; VAR__8444594++ )
      {
         if (( VAR__NUM % 9 ) == 1 )
         {
            cout << bec[VAR__21230][VAR__8444594];
         }

         if (( VAR__NUM % 9 ) == 0 )
         {
            (( cout << " " ) << bec[VAR__21230][VAR__8444594] ) << "\n";
         }

         if ((( VAR__NUM % 9 ) != 0 ) && (( VAR__NUM % 9 ) != 1 ))
         {
            ( cout << " " ) << bec[VAR__21230][VAR__8444594];
         }

         VAR__NUM++;
      }
   }


   return 0;
}
