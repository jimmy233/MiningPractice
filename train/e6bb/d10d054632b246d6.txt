int cell[20][20];
struct cell_q
{
   int px;
   int py;
   int VAR__NUM;
}
queue[10000];
void Grow(int px, int py, int VAR__NUM)
{
   cell[px][py]         += VAR__NUM;
   cell[px - 1][py]     += VAR__NUM;
   cell[px + 1][py]     += VAR__NUM;
   cell[px][py - 1]     += VAR__NUM;
   cell[px][py + 1]     += VAR__NUM;
   cell[px - 1][py - 1] += VAR__NUM;
   cell[px - 1][py + 1] += VAR__NUM;
   cell[px + 1][py - 1] += VAR__NUM;
   cell[px + 1][py + 1] += VAR__NUM;
}


int main()
{
   int VAR_1238123;
   int VAR__1238129;
   int VAR__7685;
   int VAR__3918907;
   int VAR__12302;

   ( cin >> VAR__1238129 ) >> VAR_1238123;
   cell[5][5] = VAR__1238129;
   int VAR__HEAD = 0;
   int tail      = 0;
   for ( VAR__12302 = 1; VAR__12302 <= VAR_1238123; VAR__12302++ )
   {
      for ( VAR__7685 = 1; VAR__7685 <= 9; VAR__7685++ )
      {
         for ( VAR__3918907 = 1; VAR__3918907 <= 9; VAR__3918907++ )
         {
            if ( cell[VAR__7685][VAR__3918907] != 0 )
            {
               queue[tail].px       = VAR__7685;
               queue[tail].py       = VAR__3918907;
               queue[tail].VAR__NUM = cell[VAR__7685][VAR__3918907];
               tail++;
            }
         }
      }

      while ( VAR__HEAD < tail )
      {
         Grow(queue[VAR__HEAD].px, queue[VAR__HEAD].py, queue[VAR__HEAD].VAR__NUM);
         VAR__HEAD++;
      }
   }

   for ( VAR__7685 = 1; VAR__7685 <= 9; VAR__7685++ )
   {
      for ( VAR__3918907 = 1; VAR__3918907 <= 8; VAR__3918907++ )
      {
         ( cout << cell[VAR__7685][VAR__3918907] ) << ' ';
      }

      ( cout << cell[VAR__7685][9] ) << endl;
   }

   return 0;
}
