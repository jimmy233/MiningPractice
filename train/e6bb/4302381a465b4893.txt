int chess[15][15][5];
int VAR__12302;
int VAR__127322(int VAR__53647, int VAR__21230, int VAR__8444594)
{
   if (((( VAR__53647 < 1 ) || ( VAR__53647 > 9 )) || ( VAR__21230 < 1 )) || ( VAR__21230 > 9 ))
   {
      return 0;
   }

   if ( chess[VAR__53647][VAR__21230][VAR__8444594] != ( -1 ))
   {
      return chess[VAR__53647][VAR__21230][VAR__8444594];
   }

   chess[VAR__53647][VAR__21230][VAR__8444594] = (((((((( VAR__127322(VAR__53647, VAR__21230, VAR__8444594 - 1) * 2 ) + VAR__127322(VAR__53647, VAR__21230 - 1, VAR__8444594 - 1)) + VAR__127322(VAR__53647, VAR__21230 + 1, VAR__8444594 - 1)) + VAR__127322(VAR__53647 + 1, VAR__21230, VAR__8444594 - 1)) + VAR__127322(VAR__53647 - 1, VAR__21230, VAR__8444594 - 1)) + VAR__127322(VAR__53647 - 1, VAR__21230 - 1, VAR__8444594 - 1)) + VAR__127322(VAR__53647 - 1, VAR__21230 + 1, VAR__8444594 - 1)) + VAR__127322(VAR__53647 + 1, VAR__21230 - 1, VAR__8444594 - 1)) + VAR__127322(VAR__53647 + 1, VAR__21230 + 1, VAR__8444594 - 1);
   return chess[VAR__53647][VAR__21230][VAR__8444594];
}


int main()
{
   int VAR__53647;
   int VAR__21230;
   int VAR__temp;

   for ( VAR__53647 = 1; VAR__53647 <= 9; VAR__53647++ )
   {
      for ( VAR__21230 = 1; VAR__21230 <= 9; VAR__21230++ )
      {
         chess[VAR__53647][VAR__21230][0] = 0;
         for ( VAR__temp = 1; VAR__temp <= 4; VAR__temp++ )
         {
            chess[VAR__53647][VAR__21230][VAR__temp] = -1;
         }
      }
   }

   ( cin >> chess[5][5][0] ) >> VAR__12302;
   for ( VAR__53647 = 1; VAR__53647 <= 9; VAR__53647++ )
   {
      cout << VAR__127322(VAR__53647, 1, VAR__12302);
      for ( VAR__21230 = 2; VAR__21230 <= 9; VAR__21230++ )
      {
         ( cout << " " ) << VAR__127322(VAR__53647, VAR__21230, VAR__12302);
      }

      cout << endl;
   }

   return 0;
}
