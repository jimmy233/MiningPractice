int VAR__1238129 = 0;
int VAR_1238123 = 0;
void Get_In(int VAR__819283[10000], int VAR__19328[10000])
{
   int VAR__53647 = 0;
   int VAR__21230 = 0;

   for ( VAR__53647 = 0; VAR__53647 < VAR__1238129; VAR__53647++ )
   {
      cin >> VAR__819283[VAR__53647];
   }

   for ( VAR__21230 = 0; VAR__21230 < VAR_1238123; VAR__21230++ )
   {
      cin >> VAR__19328[VAR__21230];
   }
}


void Ranking(int VAR__819283[10000], int VAR__1111)
{
   int VAR__53647 = 0;
   int VAR__21230 = 0;
   int VAR__TEMP  = 0;

   for ( VAR__53647 = 0; VAR__53647 < ( VAR__1111 - 1 ); VAR__53647++ )
   {
      for ( VAR__21230 = VAR__53647 + 1; VAR__21230 < VAR__1111; VAR__21230++ )
      {
         if ( VAR__819283[VAR__53647] > VAR__819283[VAR__21230] )
         {
            VAR__TEMP = VAR__819283[VAR__53647];
            VAR__819283[VAR__53647] = VAR__819283[VAR__21230];
            VAR__819283[VAR__21230] = VAR__TEMP;
         }
      }
   }
}


void Combine(int VAR__819283[10000], int VAR__19328[10000])
{
   int VAR__53647 = 0;

   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      VAR__819283[VAR__1238129 + VAR__53647] = VAR__19328[VAR__53647];
   }
}


void Turn_Out(int VAR__819283[10000])
{
   int VAR__53647 = 0;

   for ( VAR__53647 = 0; VAR__53647 < ( VAR__1238129 + VAR_1238123 ); VAR__53647++ )
   {
      if ( VAR__53647 < (( VAR__1238129 + VAR_1238123 ) - 1 ))
      {
         ( cout << VAR__819283[VAR__53647] ) << " ";
      }
      else
      if ( VAR__53647 == (( VAR__1238129 + VAR_1238123 ) - 1 ))
      {
         ( cout << VAR__819283[VAR__53647] ) << endl;
      }
   }
}


int main()
{
   int VAR__819283[10000];
   int VAR__19328[10000];

   ( cin >> VAR__1238129 ) >> VAR_1238123;
   Get_In(VAR__819283, VAR__19328);
   Ranking(VAR__819283, VAR__1238129);
   Ranking(VAR__19328, VAR_1238123);
   Combine(VAR__819283, VAR__19328);
   Turn_Out(VAR__819283);
   return 0;
}
