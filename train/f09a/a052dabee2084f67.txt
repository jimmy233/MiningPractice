void mysort(int *pn, int VAR_1238123)
{
   int VAR__53647;
   int VAR__21230;
   int VAR__TEMP;

   for ( VAR__21230 = 0; VAR__21230 < VAR_1238123; VAR__21230++ )
   {
      for ( VAR__53647 = VAR__21230 + 1; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         if ( pn[VAR__21230] > pn[VAR__53647] )
         {
            VAR__TEMP      = pn[VAR__21230];
            pn[VAR__21230] = pn[VAR__53647];
            pn[VAR__53647] = VAR__TEMP;
         }
      }
   }
}


void merge(int *pn, int VAR_1238123, int *pm, int VAR__1238129)
{
   int VAR__53647;

   printf("%d", pn[0]);
   for ( VAR__53647 = 1; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      printf(" %d", pn[VAR__53647]);
   }

   for ( VAR__53647 = 0; VAR__53647 < VAR__1238129; VAR__53647++ )
   {
      printf(" %d", pm[VAR__53647]);
   }
}


int main(int argc, char *argv[])
{
   int VAR__1238129;
   int VAR_1238123;
   int VAR__53647;
   int *pm;
   int *pn;

   scanf("%d%d", &VAR__1238129, &VAR_1238123);
   pm = (int *)calloc(VAR__1238129, sizeof( int ));
   pn = (int *)calloc(VAR_1238123, sizeof( int ));
   for ( VAR__53647 = 0; VAR__53647 < VAR__1238129; VAR__53647++ )
   {
      scanf("%d", &pm[VAR__53647]);
   }

   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      scanf("%d", &pn[VAR__53647]);
   }

   mysort(pm, VAR__1238129);
   mysort(pn, VAR_1238123);
   merge(pm, VAR__1238129, pn, VAR_1238123);
   free(pm);
   free(pn);
   return 0;
}
