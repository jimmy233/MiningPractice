void in(int VAR_1238123, int VAR__819283[]);
void arrange(int VAR_1238123, int VAR__819283[]);
void connect(int n1, int n2, int VAR__819283[], int VAR__19328[], int VAR__4857423[]);
void out(int VAR_1238123, int VAR__4857423[]);

int main()
{
   int n1;
   int n2;
   int VAR__819283[1000];
   int VAR__19328[1000];
   int VAR__4857423[2000];

   ( cin >> n1 ) >> n2;
   in(n1, VAR__819283);
   in(n2, VAR__19328);
   arrange(n1, VAR__819283);
   arrange(n2, VAR__19328);
   connect(n1, n2, VAR__819283, VAR__19328, VAR__4857423);
   out(n1 + n2, VAR__4857423);
   return 0;
}


void in(int VAR_1238123, int VAR__819283[])
{
   for ( int VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      cin >> VAR__819283[VAR__53647];
   }
}


void arrange(int VAR_1238123, int VAR__819283[])
{
   int VAR__TEMP;

   for ( int VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      for ( int VAR__21230 = 0; VAR__21230 < (( VAR_1238123 - VAR__53647 ) - 1 ); VAR__21230++ )
      {
         if ( VAR__819283[VAR__21230] > VAR__819283[VAR__21230 + 1] )
         {
            VAR__TEMP = VAR__819283[VAR__21230];
            VAR__819283[VAR__21230]     = VAR__819283[VAR__21230 + 1];
            VAR__819283[VAR__21230 + 1] = VAR__TEMP;
         }
      }
   }
}


void connect(int n1, int n2, int VAR__819283[], int VAR__19328[], int VAR__4857423[])
{
   int VAR__1111 = 0;

   for ( int VAR__53647 = 0; VAR__53647 < n1; VAR__53647++, VAR__1111++ )
   {
      VAR__4857423[VAR__1111] = VAR__819283[VAR__53647];
   }

   for ( int VAR__21230 = 0; VAR__21230 < n2; VAR__21230++, VAR__1111++ )
   {
      VAR__4857423[VAR__1111] = VAR__19328[VAR__21230];
   }
}


void out(int VAR_1238123, int VAR__4857423[])
{
   for ( int VAR__53647 = 0; VAR__53647 < ( VAR_1238123 - 1 ); VAR__53647++ )
   {
      ( cout << VAR__4857423[VAR__53647] ) << " ";
   }

   ( cout << VAR__4857423[VAR_1238123 - 1] ) << endl;
}
