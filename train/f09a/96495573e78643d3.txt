int VAR__819283[100];
int VAR__19328[100];
int VAR__1238129;
int VAR_1238123;
void insert(void)
{
   int VAR__53647;

   scanf("%d %d", &VAR__1238129, &VAR_1238123);
   for ( VAR__53647 = 0; VAR__53647 < VAR__1238129; VAR__53647++ )
   {
      scanf("%d", &VAR__819283[VAR__53647]);
   }

   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      scanf("%d", &VAR__19328[VAR__53647]);
   }
}


void paixu(int *ANOTHER_POINTER, int *YET_ANOTHER_POINTER)
{
   int VAR__53647;
   int VAR__21230;
   int VAR__TEMP;

   for ( VAR__21230 = 1; VAR__21230 < VAR__1238129; VAR__21230++ )
   {
      for ( VAR__53647 = 0; VAR__53647 < ( VAR__1238129 - 1 ); VAR__53647++ )
      {
         if (( *( ANOTHER_POINTER + VAR__53647 )) > ( *(( ANOTHER_POINTER + VAR__53647 ) + 1 )))
         {
            VAR__TEMP = *( ANOTHER_POINTER + VAR__53647 );
            *( ANOTHER_POINTER + VAR__53647 )        = *(( ANOTHER_POINTER + VAR__53647 ) + 1 );
            *(( ANOTHER_POINTER + VAR__53647 ) + 1 ) = VAR__TEMP;
         }
      }
   }



   for ( VAR__21230 = 1; VAR__21230 < VAR_1238123; VAR__21230++ )
   {
      for ( VAR__53647 = 0; VAR__53647 < ( VAR_1238123 - 1 ); VAR__53647++ )
      {
         if (( *( YET_ANOTHER_POINTER + VAR__53647 )) > ( *(( YET_ANOTHER_POINTER + VAR__53647 ) + 1 )))
         {
            VAR__TEMP = *( YET_ANOTHER_POINTER + VAR__53647 );
            *( YET_ANOTHER_POINTER + VAR__53647 )        = *(( YET_ANOTHER_POINTER + 1 ) + VAR__53647 );
            *(( YET_ANOTHER_POINTER + VAR__53647 ) + 1 ) = VAR__TEMP;
         }
      }
   }
}


void hebing()
{
   int VAR__53647;

   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      VAR__819283[VAR__1238129 + VAR__53647] = VAR__19328[VAR__53647];
   }
}


void output()
{
   int VAR__53647;

   printf("%d", VAR__819283[0]);
   for ( VAR__53647 = 1; VAR__53647 < ( VAR__1238129 + VAR_1238123 ); VAR__53647++ )
   {
      printf(" %d", VAR__819283[VAR__53647]);
   }
}


void main()
{
   insert();
   paixu(VAR__819283, VAR__19328);
   hebing();
   output();
}
