int VAR__1238129;
int VAR_1238123;
int VAR__819283[1000]  = { 0 };
int VAR__19328[1000]   = { 0 };
int VAR__4857423[1000] = { 0 };
void du()
{
   int VAR__53647;

   for ( VAR__53647 = 0; VAR__53647 < VAR__1238129; VAR__53647++ )
   {
      scanf("%d", &VAR__819283[VAR__53647]);
   }

   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      scanf("%d", &VAR__19328[VAR__53647]);
   }
}


void pai()
{
   int VAR__21230;
   int VAR__8444594;
   int VAR__1111;

   for ( VAR__21230 = 0; VAR__21230 <= VAR__1238129; VAR__21230++ )
   {
      for ( VAR__8444594 = 0; VAR__8444594 < ( VAR__1238129 - 1 ); VAR__8444594++ )
      {
         if ( VAR__819283[VAR__8444594] > VAR__819283[VAR__8444594 + 1] )
         {
            VAR__1111 = VAR__819283[VAR__8444594];
            VAR__819283[VAR__8444594]     = VAR__819283[VAR__8444594 + 1];
            VAR__819283[VAR__8444594 + 1] = VAR__1111;
         }
      }
   }

   for ( VAR__21230 = 0; VAR__21230 <= VAR_1238123; VAR__21230++ )
   {
      for ( VAR__8444594 = 0; VAR__8444594 < ( VAR_1238123 - 1 ); VAR__8444594++ )
      {
         if ( VAR__19328[VAR__8444594] > VAR__19328[VAR__8444594 + 1] )
         {
            VAR__1111 = VAR__19328[VAR__8444594];
            VAR__19328[VAR__8444594]     = VAR__19328[VAR__8444594 + 1];
            VAR__19328[VAR__8444594 + 1] = VAR__1111;
         }
      }
   }
}


void he()
{
   int o;
   int VAR_233;

   for ( o = 0; o < VAR__1238129; o++ )
   {
      VAR__4857423[o] = VAR__819283[o];
   }

   for ( VAR_233 = 0; VAR_233 < VAR_1238123; VAR_233++ )
   {
      VAR__4857423[o] = VAR__19328[VAR_233];
      o++;
   }
}


void shu()
{
   int VAR_666;

   for ( VAR_666 = 0; VAR_666 < ( VAR__1238129 + VAR_1238123 ); VAR_666++ )
   {
      printf("%d", VAR__4857423[VAR_666]);

      if ( VAR_666 != (( VAR__1238129 + VAR_1238123 ) - 1 ))
      {
         printf(" ");
      }
      else
      {
         printf("\n");
      }
   }
}


int main()
{
   scanf("%d %d", &VAR__1238129, &VAR_1238123);
   du();
   pai();
   he();
   shu();
   return 0;
}
