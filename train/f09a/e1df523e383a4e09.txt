int VAR_1238123;
int VAR__1238129;
int num1[100];
int num2[100];
int num3[1000];
void read()
{
   ( cin >> VAR_1238123 ) >> VAR__1238129;
   for ( int VAR__53647 = 1; VAR__53647 <= VAR_1238123; VAR__53647++ )
   {
      cin >> num1[VAR__53647];
   }

   for ( int VAR__53647 = 1; VAR__53647 <= VAR__1238129; VAR__53647++ )
   {
      cin >> num2[VAR__53647];
   }
}


void sort(int num1[], int num2[])
{
   for ( int VAR__53647 = 1; VAR__53647 <= ( VAR_1238123 - 1 ); VAR__53647++ )
   {
      for ( int VAR__21230 = 1; VAR__21230 <= ( VAR_1238123 - VAR__53647 ); VAR__21230++ )
      {
         if ( num1[VAR__21230] > num1[VAR__21230 + 1] )
         {
            swap(num1[VAR__21230], num1[VAR__21230 + 1]);
         }
      }
   }

   for ( int VAR__53647 = 1; VAR__53647 <= ( VAR__1238129 - 1 ); VAR__53647++ )
   {
      for ( int VAR__21230 = 1; VAR__21230 <= ( VAR__1238129 - VAR__53647 ); VAR__21230++ )
      {
         if ( num2[VAR__21230] > num2[VAR__21230 + 1] )
         {
            swap(num2[VAR__21230], num2[VAR__21230 + 1]);
         }
      }
   }
}


void hebing(int num1[], int num2[], int num3[])
{
   for ( int VAR__53647 = 1; VAR__53647 <= ( VAR_1238123 + VAR__1238129 ); VAR__53647++ )
   {
      if ( VAR__53647 <= VAR_1238123 )
      {
         num3[VAR__53647] = num1[VAR__53647];
      }
      else
      {
         num3[VAR__53647] = num2[VAR__53647 - VAR_1238123];
      }
   }
}


void display(int num3[])
{
   for ( int VAR__53647 = 1; VAR__53647 <= ( VAR_1238123 + VAR__1238129 ); VAR__53647++ )
   {
      if ( VAR__53647 == 1 )
      {
         cout << num3[VAR__53647];
      }
      else
      {
         ( cout << " " ) << num3[VAR__53647];
      }
   }
}


int main()
{
   read();
   sort(num1, num2);
   hebing(num1, num2, num3);
   display(num3);
   return 0;
}
