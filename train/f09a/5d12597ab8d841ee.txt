int VAR__819283[MAX];
int VAR__19328[MAX];
int al;
int bl;
void input()
{
   int VAR__53647;

   scanf("%d %d\n", &al, &bl);
   for ( VAR__53647 = 0; VAR__53647 < al; VAR__53647++ )
   {
      scanf("%d", &VAR__819283[VAR__53647]);
   }

   for ( VAR__53647 = 0; VAR__53647 < bl; VAR__53647++ )
   {
      scanf("%d", &VAR__19328[VAR__53647]);
   }
}


void Qsort(int start, int length, int VAR__819283[])
{
   int VAR__7685 = VAR__819283[start];
   int VAR__53647;
   int VAR__21230;

   VAR__53647 = start;
   VAR__21230 = length - 1;

   while ( VAR__53647 < VAR__21230 )
   {
      if ( VAR__7685 < VAR__819283[VAR__21230] )
      {
         VAR__21230--;
      }
      else
      if ( VAR__7685 > VAR__819283[VAR__21230] )
      {
         VAR__819283[VAR__53647] = VAR__819283[VAR__21230];
         VAR__819283[VAR__21230] = VAR__7685;
         VAR__53647++;
      }
      else
      if ( VAR__7685 < VAR__819283[VAR__53647] )
      {
         VAR__819283[VAR__21230] = VAR__819283[VAR__53647];
         VAR__819283[VAR__53647] = VAR__7685;
         VAR__21230--;
      }
      else
      {
         VAR__53647++;
      }
   }

   if ( start < ( length - 1 ))
   {
      Qsort(start, VAR__53647, VAR__819283);
      Qsort(VAR__53647 + 1, length, VAR__819283);
   }
}


void sort()
{
   Qsort(0, al, VAR__819283);
   Qsort(0, bl, VAR__19328);
}


void combine()
{
   int VAR__53647;

   for ( VAR__53647 = 0; VAR__53647 < bl; VAR__53647++ )
   {
      VAR__819283[VAR__53647 + al] = VAR__19328[VAR__53647];
   }
}


void output()
{
   int VAR__53647;

   for ( VAR__53647 = 0; VAR__53647 < (( bl + al ) - 1 ); VAR__53647++ )
   {
      printf("%d ", VAR__819283[VAR__53647]);
   }

   printf("%d", VAR__819283[VAR__53647]);
}


void main()
{
   input();
   sort();
   combine();
   output();
}
