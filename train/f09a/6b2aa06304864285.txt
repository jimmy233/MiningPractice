int VAR__1238129;
int VAR_1238123;
int cmp(const void *VAR__819283, const void *VAR__19328)
{
   return ( *((int *)VAR__819283 )) - ( *((int *)VAR__19328 ));
}


void input(int *VAR__819283, int *VAR__19328)
{
   int VAR__53647;

   scanf("%d %d", &VAR_1238123, &VAR__1238129);
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      scanf("%d", &VAR__819283[VAR__53647]);
   }

   for ( VAR__53647 = 0; VAR__53647 < VAR__1238129; VAR__53647++ )
   {
      scanf("%d", &VAR__19328[VAR__53647]);
   }
}


void sort(int *VAR__819283, int *VAR__19328)
{
   qsort(VAR__819283, VAR_1238123, sizeof( int ), cmp);
   qsort(VAR__19328, VAR__1238129, sizeof( int ), cmp);
}


void merge(int *VAR__819283, int *VAR__19328, int *VAR__4857423)
{
   int VAR__53647;

   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      VAR__4857423[VAR__53647] = VAR__819283[VAR__53647];
   }

   for ( VAR__53647 = 0; VAR__53647 < VAR__1238129; VAR__53647++ )
   {
      VAR__4857423[VAR__53647 + VAR_1238123] = VAR__19328[VAR__53647];
   }
}


void output(int *VAR__4857423)
{
   int VAR__53647;

   for ( VAR__53647 = 0; VAR__53647 < ( VAR__1238129 + VAR_1238123 ); VAR__53647++ )
   {
      printf("%d%s", VAR__4857423[VAR__53647], ( VAR__53647 < (( VAR__1238129 + VAR_1238123 ) - 1 )) ? ( " " ) : ( "\n" ));
   }
}


int main()
{
   int VAR__819283[10000]  = { 0 };
   int VAR__19328[10000]   = { 0 };
   int VAR__4857423[10000] = { 0 };

   input(VAR__819283, VAR__19328);
   sort(VAR__819283, VAR__19328);
   merge(VAR__819283, VAR__19328, VAR__4857423);
   output(VAR__4857423);
   return 0;
}
