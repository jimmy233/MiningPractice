char *getmemory(int VAR__NUM)
{
   char *VAR_233 = (char *)malloc(VAR__NUM * ( sizeof( char )));

   return VAR_233;
}


void main()
{
   char *A_STRING;
   char *ANOTHER_POINTER;
   char *VAR__819283;
   int  VAR_1238123;
   int  VAR__1238129;
   int  VAR__8444594;

   A_STRING = getmemory(31);
   gets(A_STRING);
   VAR_1238123     = strlen(A_STRING);
   ANOTHER_POINTER = ( VAR__819283 = A_STRING );
   VAR__8444594    = 0;
   for ( ; ( *A_STRING ) != '\0'; )
   {
      if ((( *A_STRING ) < '0' ) || (( *A_STRING ) > '9' ))
      {
         VAR__8444594 += 1;

         if ((( *( A_STRING + 1 )) >= '0' ) && (( *( A_STRING + 1 )) <= '9' ))
         {
            VAR__1238129 = ( A_STRING - VAR__8444594 ) - ANOTHER_POINTER;

            if ( ANOTHER_POINTER == VAR__819283 )
            {
               for ( ; ANOTHER_POINTER <= ( A_STRING - VAR__8444594 ); ANOTHER_POINTER++ )
               {
                  printf("%c", *ANOTHER_POINTER);
               }

               printf("\n");
            }
            else
            {
               for ( ANOTHER_POINTER = ANOTHER_POINTER + 1; ANOTHER_POINTER <= ( A_STRING - VAR__8444594 ); ANOTHER_POINTER++ )
               {
                  printf("%c", *ANOTHER_POINTER);
               }

               printf("\n");
            }

            ANOTHER_POINTER = A_STRING;
            VAR__8444594    = 0;
         }
      }

      A_STRING++;
   }

   if ( ANOTHER_POINTER == VAR__819283 )
   {
      for ( ; ANOTHER_POINTER < ( A_STRING - VAR__8444594 ); ANOTHER_POINTER++ )
      {
         printf("%c", *ANOTHER_POINTER);
      }
   }

   else
   {
      for ( ANOTHER_POINTER = ANOTHER_POINTER + 1; ANOTHER_POINTER < ( A_STRING - VAR__8444594 ); ANOTHER_POINTER++ )
      {
         printf("%c", *ANOTHER_POINTER);
      }
   }
}
