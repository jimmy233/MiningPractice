void main()
{
   char intonumber(char VAR__7685);
   char intochar(int VAR__3918907);

   char A_STRING[N];
   gets(A_STRING);
   int VAR__53647 = 0;
   int c1         = 0;

   while ( A_STRING[VAR__53647] != ' ' )
   {
      c1 = ( c1 * 10 ) + intonumber(A_STRING[VAR__53647++]);
   }

   while ( A_STRING[VAR__53647] == ' ' )
   {
      VAR__53647++;
   }

   unsigned long n1 = 0;

   while ( A_STRING[VAR__53647] != ' ' )
   {
      n1 = ( n1 * c1 ) + intonumber(A_STRING[VAR__53647++]);
   }

   while ( A_STRING[VAR__53647] == ' ' )
   {
      VAR__53647++;
   }

   int l1 = 0;

   while ( A_STRING[VAR__53647] != '\0' )
   {
      l1 = ( l1 * 10 ) + intonumber(A_STRING[VAR__53647++]);
   }

   int  VAR__127322;
   char yu[M];
   for ( VAR__127322 = 0; n1 > 0; VAR__127322++ )
   {
      yu[VAR__127322] = intochar(n1 % l1);
      n1 = n1 / l1;
   }

   if ( VAR__127322 == 0 )
   {
      printf("%d", 0);
   }

   for ( VAR__127322--; VAR__127322 >= 0; VAR__127322-- )
   {
      printf("%c", yu[VAR__127322]);
   }
}


char intonumber(char VAR__7685)
{
   if (( VAR__7685 >= 'a' ) && ( VAR__7685 <= 'z' ))
   {
      VAR__7685 = VAR__7685 - 87;
   }
   else
   if (( VAR__7685 >= 'A' ) && ( VAR__7685 <= 'Z' ))
   {
      VAR__7685 = VAR__7685 - 55;
   }
   else
   if (( VAR__7685 >= 48 ) && ( VAR__7685 <= 57 ))
   {
      VAR__7685 = VAR__7685 - 48;
   }



   return VAR__7685;
}


char intochar(int VAR__3918907)
{
   if (( VAR__3918907 >= 0 ) && ( VAR__3918907 <= 9 ))
   {
      VAR__3918907 = VAR__3918907 + 48;
   }
   else
   if (( VAR__3918907 > 9 ) && ( VAR__3918907 <= 35 ))
   {
      VAR__3918907 = VAR__3918907 + 55;
   }


   return VAR__3918907;
}
