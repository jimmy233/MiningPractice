int main()
{
   int  VAR__819283;
   int  VAR__19328;
   int  VAR__NUM;
   int  VAR__53647   = 1;
   int  VAR__21230   = 1;
   int  VAR__8444594 = 1;
   int  VAR__COUNT   = 0;
   long VAR__SUM     = 0;
   long sum1;
   char VAR_1238123[100];

   for ( VAR__8444594 = 0; VAR__8444594 < 100; VAR__8444594++ )
   {
      VAR_1238123[VAR__8444594] = '\0';
   }

   (( cin >> VAR__819283 ) >> VAR_1238123 ) >> VAR__19328;
   for ( VAR__COUNT = 0; VAR__COUNT < 100; VAR__COUNT++ )
   {
      if ( VAR_1238123[VAR__COUNT] == '\0' )
      {
         VAR__NUM = VAR__COUNT;
         break;
      }
   }

   int shu[VAR__NUM];
   for ( VAR__53647 = 0; VAR__53647 < VAR__NUM; VAR__53647++ )
   {
      shu[VAR__53647] = VAR_1238123[VAR__53647];

      if ( shu[VAR__53647] < 58 )
      {
         shu[VAR__53647] = shu[VAR__53647] - 48;
      }
      else
      if ( shu[VAR__53647] < 91 )
      {
         shu[VAR__53647] = shu[VAR__53647] - 55;
      }
      else
      {
         shu[VAR__53647] = shu[VAR__53647] - 87;
      }
   }

   for ( VAR__53647 = 0; VAR__53647 < VAR__NUM; VAR__53647++ )
   {
      VAR__SUM = VAR__SUM + ( shu[VAR__53647] * ((long)pow((double)VAR__819283, (double)(( VAR__NUM - VAR__53647 ) - 1 ))));
   }

   sum1 = VAR__SUM;
   for ( VAR__53647 = 1; VAR__53647 < 100; VAR__53647++ )
   {
      sum1 = sum1 / VAR__19328;

      if ( sum1 == 0 )
      {
         break;
      }
   }

   long shu1[VAR__53647];
   for ( VAR__21230 = 0; VAR__21230 < VAR__53647; VAR__21230++ )
   {
      shu1[VAR__21230] = VAR__SUM % VAR__19328;
      VAR__SUM         = VAR__SUM / VAR__19328;
   }

   char VAR__1238129[VAR__53647];
   for ( VAR__21230 = 0; VAR__21230 < VAR__53647; VAR__21230++ )
   {
      if ( shu1[( VAR__53647 - VAR__21230 ) - 1] < 10 )
      {
         VAR__1238129[VAR__21230] = shu1[( VAR__53647 - VAR__21230 ) - 1] + 48;
      }
      else
      {
         VAR__1238129[VAR__21230] = shu1[( VAR__53647 - VAR__21230 ) - 1] + 55;
      }

      cout << VAR__1238129[VAR__21230];
   }

   return 0;
}
