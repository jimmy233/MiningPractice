int  length;
int  VAR__53647;
char VAR_1238123[1000];
unsigned turn(int n1, char VAR__819283[]);
void VAR__127322(int n2, unsigned VAR_9494, int VAR__21230);

int main()
{
   int      VAR__819283;
   int      VAR__19328;
   unsigned number;
   char     A_STRING[1000];

   while ( cin >> VAR__819283 )
   {
      ( cin >> A_STRING ) >> VAR__19328;
      length = strlen(A_STRING);
      number = turn(VAR__819283, A_STRING);
      VAR__127322(VAR__19328, number, 0);
      memset(A_STRING, 0, sizeof( A_STRING ));
   }

   return 0;
}


unsigned turn(int n1, char VAR__819283[])
{
   int VAR__SUM = 0;

   for ( VAR__53647 = 0; VAR__53647 <= ( length - 1 ); VAR__53647++ )
   {
      if (( VAR__819283[VAR__53647] >= '0' ) && ( VAR__819283[VAR__53647] <= '9' ))
      {
         VAR__SUM = ( VAR__SUM * n1 ) + ( VAR__819283[VAR__53647] - '0' );
      }
      else
      if (( VAR__819283[VAR__53647] >= 'A' ) && ( VAR__819283[VAR__53647] <= 'Z' ))
      {
         VAR__SUM = ( VAR__SUM * n1 ) + (( VAR__819283[VAR__53647] - 'A' ) + 10 );
      }
      else
      if (( VAR__819283[VAR__53647] >= 'a' ) && ( VAR__819283[VAR__53647] <= 'z' ))
      {
         VAR__SUM = ( VAR__SUM * n1 ) + (( VAR__819283[VAR__53647] - 'a' ) + 10 );
      }
   }

   return VAR__SUM;
}


void VAR__127322(int n2, unsigned VAR_9494, int VAR__21230)
{
   int VAR__8444594;

   if ( VAR_9494 == 0 )
   {
      if ( VAR__21230 == 0 )
      {
         cout << 0;
      }

      for ( VAR__53647 = VAR__21230 - 1; VAR__53647 >= 0; VAR__53647-- )
      {
         printf("%c", VAR_1238123[VAR__53647]);
      }
   }
   else
   {
      VAR__8444594 = VAR_9494 % n2;
      VAR_9494     = VAR_9494 / n2;

      if (( VAR__8444594 <= 9 ) && ( VAR__8444594 >= 0 ))
      {
         VAR_1238123[VAR__21230] = VAR__8444594 + '0';
      }
      else
      {
         VAR_1238123[VAR__21230] = ( VAR__8444594 - 10 ) + 'A';
      }

      VAR__127322(n2, VAR_9494, VAR__21230 + 1);
   }
}
