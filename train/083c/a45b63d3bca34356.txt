int main()
{
   int    VAR__53647;
   int    VAR__19328;
   int    VAR__4857423 = 0;
   int    VAR__12302;
   int    VAR__21230;
   int    VAR__COUNT = 0;
   double VAR__819283;
   double VAR__112390;
   char   char_a[32];
   char   char_b[32];

   cin >> VAR__819283;
   cin >> char_a;
   cin >> VAR__19328;
   for ( VAR__53647 = 0; VAR__53647 < strlen(char_a); VAR__53647++ )
   {
      if (( char_a[VAR__53647] >= 48 ) && ( char_a[VAR__53647] <= 57 ))
      {
         char_a[VAR__53647] = char_a[VAR__53647] - 48;
      }
      else
      if (( char_a[VAR__53647] >= 97 ) && ( char_a[VAR__53647] <= 122 ))
      {
         char_a[VAR__53647] = char_a[VAR__53647] - 87;
      }
      else
      if (( char_a[VAR__53647] >= 65 ) && ( char_a[VAR__53647] <= 90 ))
      {
         char_a[VAR__53647] = char_a[VAR__53647] - 55;
      }
      else
      {
         break;
      }
   }

   for ( VAR__53647 = 0; VAR__53647 < strlen(char_a); VAR__53647++ )
   {
      VAR__112390  = ( strlen(char_a) - VAR__53647 ) - 1;
      VAR__4857423 = VAR__4857423 + ( char_a[VAR__53647] * pow(VAR__819283, VAR__112390));
   }

   VAR__21230 = 0;

   if ( VAR__4857423 < VAR__19328 )
   {
      ( cout << VAR__4857423 ) << endl;
      return 0;
   }

   while ( VAR__4857423 >= VAR__19328 )
   {
      VAR__12302   = VAR__4857423 % VAR__19328;
      VAR__4857423 = VAR__4857423 / VAR__19328;

      if ( VAR__12302 < 10 )
      {
         char_b[VAR__21230] = VAR__12302 + 48;
      }
      else
      if (( VAR__12302 >= 10 ) && ( VAR__19328 <= 35 ))
      {
         char_b[VAR__21230] = VAR__12302 + 55;
      }


      VAR__COUNT = VAR__COUNT++;
      ++VAR__21230;

      if (( VAR__4857423 < VAR__19328 ) && ( VAR__4857423 < 10 ))
      {
         char_b[VAR__21230] = VAR__4857423 + 48;
      }

      if (( VAR__4857423 < VAR__19328 ) && ( VAR__4857423 > 10 ))
      {
         char_b[VAR__21230] = VAR__4857423 + 55;
      }
   }

   for ( VAR__21230 = VAR__COUNT; VAR__21230 >= 0; VAR__21230-- )
   {
      cout << char_b[VAR__21230];
   }

   cout << endl;
   return 0;
}
