char VAR__19328[101];
void reorder(char VAR__819283[])
{
   int  VAR__53647;
   int  VAR__1111;
   char temp0;

   VAR__1111 = strlen(VAR__819283);
   for ( VAR__53647 = 0; VAR__53647 < VAR__1111; VAR__53647++ )
   {
      VAR__19328[VAR__53647] = VAR__819283[( VAR__1111 - VAR__53647 ) - 1];
   }
}


int main()
{
   char bjs[101][101];
   char js[101][101];
   char VAR__TEMP;
   int  VAR__53647;
   int  VAR__21230;
   int  VAR__8444594;
   int  VAR_233;
   int  VAR_1238123;
   int  l1;
   int  l2;
   int  VAR__4857423[101];

   cin >> VAR_1238123;
   for ( VAR__53647 = 1; VAR__53647 <= VAR_1238123; VAR__53647++ )
   {
      ( cin >> bjs[VAR__53647] ) >> js[VAR__53647];
   }

   for ( VAR__53647 = 1; VAR__53647 <= VAR_1238123; VAR__53647++ )
   {
      l1 = strlen(bjs[VAR__53647]);
      l2 = strlen(js[VAR__53647]);
      reorder(bjs[VAR__53647]);
      for ( VAR__21230 = 0; VAR__21230 < l1; VAR__21230++ )
      {
         bjs[VAR__53647][VAR__21230] = VAR__19328[VAR__21230];
      }

      reorder(js[VAR__53647]);
      for ( VAR__21230 = 0; VAR__21230 < l2; VAR__21230++ )
      {
         js[VAR__53647][VAR__21230] = VAR__19328[VAR__21230];
      }

      for ( VAR__21230 = l2; VAR__21230 < l1; VAR__21230++ )
      {
         js[VAR__53647][VAR__21230] = '0';
      }

      for ( VAR__21230 = 0; VAR__21230 < l1; VAR__21230++ )
      {
         if ( bjs[VAR__53647][VAR__21230] < js[VAR__53647][VAR__21230] )
         {
            bjs[VAR__53647][VAR__21230]     += 10;
            bjs[VAR__53647][VAR__21230 + 1] -= 1;
         }

         VAR__4857423[VAR__21230] = bjs[VAR__53647][VAR__21230] - js[VAR__53647][VAR__21230];
      }

      for ( VAR__8444594 = l1 - 1; VAR__8444594 >= 0; VAR__8444594-- )
      {
         if ( VAR__4857423[VAR__8444594] != 0 )
         {
            break;
         }
      }


      if ( VAR__8444594 == ( -1 ))
      {
         cout << 0;
      }
      else
      {
         for ( VAR_233 = VAR__8444594; VAR_233 >= 0; VAR_233-- )
         {
            cout << VAR__4857423[VAR_233];
         }
      }


      cout << endl;
   }

   return 0;
}
