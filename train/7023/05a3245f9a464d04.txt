int main()
{
   int  VAR_1238123;
   int  VAR__53647;
   int  VAR__21230;
   int  VAR__8444594;
   int  len1;
   int  len2;
   int  num1[101]     = { 0 };
   int  num2[101]     = { 0 };
   int  VAR__NUM[101] = { 0 };
   char ANOTHER_STRING[200];
   char YET_ANOTHER_STRING[200];

   cin >> VAR_1238123;
   cin.get();
   for ( VAR__53647 = 1; VAR__53647 <= VAR_1238123; VAR__53647++ )
   {
      memset(num1, 0, sizeof( num1 ));
      memset(num2, 0, sizeof( num2 ));
      memset(VAR__NUM, 0, sizeof( VAR__NUM ));
      cin.getline(ANOTHER_STRING, 101);
      cin.getline(YET_ANOTHER_STRING, 101);

      if ( VAR__53647 != VAR_1238123 )
      {
         cin.get();
      }

      len1 = strlen(ANOTHER_STRING);
      len2 = strlen(YET_ANOTHER_STRING);
      for ( VAR__21230 = 0, VAR__8444594 = len1 - 1; VAR__8444594 >= 0; VAR__21230++, VAR__8444594-- )
      {
         num1[VAR__21230] = ANOTHER_STRING[VAR__8444594] - '0';
      }

      for ( VAR__21230 = 0, VAR__8444594 = len2 - 1; VAR__8444594 >= 0; VAR__21230++, VAR__8444594-- )
      {
         num2[VAR__21230] = YET_ANOTHER_STRING[VAR__8444594] - '0';
      }

      for ( VAR__21230 = 0; VAR__21230 < len1; VAR__21230++ )
      {
         if ( num1[VAR__21230] >= num2[VAR__21230] )
         {
            VAR__NUM[VAR__21230] = num1[VAR__21230] - num2[VAR__21230];
         }
         else
         {
            VAR__NUM[VAR__21230] = ( num1[VAR__21230] + 10 ) - num2[VAR__21230];
            VAR__8444594         = VAR__21230 + 1;

            while ( num1[VAR__8444594] == 0 )
            {
               num1[VAR__8444594] = 9;
               VAR__8444594++;
            }

            num1[VAR__8444594]--;
         }
      }

      for ( VAR__21230 = len1 - 1; VAR__21230 >= 0; VAR__21230-- )
      {
         if ( VAR__NUM[VAR__21230] != 0 )
         {
            for ( VAR__8444594 = VAR__21230; VAR__8444594 >= 0; VAR__8444594-- )
            {
               cout << VAR__NUM[VAR__8444594];
            }

            break;
         }
      }

      cout << endl;
   }

   return 0;
}
