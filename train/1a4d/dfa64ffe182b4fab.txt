int main()
{
   int  VAR__819283  = 0;
   int  VAR__19328   = 0;
   int  VAR__4857423 = 0;
   int  A            = 1;
   int  B            = 1;
   int  C            = 1;
   int  VAR__temp    = 0;
   int  judge1;
   int  judge2;
   int  judge3;
   int  VAR_666[3];
   char name[3];
   char VAR_233;

   for ( A = 1; A <= 3; A++ )
   {
      for ( B = 1; B <= 3; B++ )
      {
         for ( C = 1; C <= 3; C++ )
         {
            VAR__819283  = ( B > A ) + ( C == A );
            VAR__19328   = ( A > B ) + ( A > C );
            VAR__4857423 = ( C > B ) + ( B > A );
            judge1       = ((( A > B ) && ( VAR__819283 < VAR__19328 )) || (( A < B ) && ( VAR__819283 > VAR__19328 ))) || (( A == B ) && ( VAR__819283 == VAR__19328 ));
            judge2       = ((( B > C ) && ( VAR__19328 < VAR__4857423 )) || (( B < C ) && ( VAR__19328 > VAR__4857423 ))) || (( B == C ) && ( VAR__19328 == VAR__4857423 ));
            judge3       = ((( A > C ) && ( VAR__819283 < VAR__4857423 )) || (( A < C ) && ( VAR__819283 > VAR__4857423 ))) || (( A == C ) && ( VAR__819283 == VAR__4857423 ));

            if ((( judge1 + judge2 ) + judge3 ) == 3 )
            {
               name[0]    = 'A';
               name[1]    = 'B';
               name[2]    = 'C';
               VAR_666[0] = 3;
               VAR_666[1] = 1;
               VAR_666[2] = 2;
               for ( int VAR__53647 = 0; VAR__53647 < 2; VAR__53647++ )
               {
                  for ( int VAR__21230 = 0; VAR__21230 < ( 2 - VAR__53647 ); VAR__21230++ )
                  {
                     if ( VAR_666[VAR__21230] > VAR_666[VAR__21230 + 1] )
                     {
                        VAR__temp               = VAR_666[VAR__21230];
                        VAR_666[VAR__21230]     = VAR_666[VAR__21230 + 1];
                        VAR_666[VAR__21230 + 1] = VAR__temp;
                        VAR_233              = name[VAR__21230];
                        name[VAR__21230]     = name[VAR__21230 + 1];
                        name[VAR__21230 + 1] = VAR_233;
                     }
                  }
               }

               (( cout << name[0] ) << name[1] ) << name[2];
            }
         }
      }
   }



   return 0;
}
