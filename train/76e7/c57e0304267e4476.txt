int matrix[5][5];
int row[5];
int column[5];
int main()
{
   int VAR__53647;
   int VAR__21230;
   int VAR__MAX;
   int VAR__MIN;
   int VAR_FLAG;

   VAR_FLAG = 0;
   for ( VAR__53647 = 0; VAR__53647 < 5; VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 < 5; VAR__21230++ )
      {
         cin >> matrix[VAR__53647][VAR__21230];
      }
   }

   for ( VAR__53647 = 0; VAR__53647 < 5; VAR__53647++ )
   {
      row[VAR__53647] = 0;
      VAR__MAX        = matrix[VAR__53647][0];
      for ( VAR__21230 = 0; VAR__21230 < 5; VAR__21230++ )
      {
         if ( matrix[VAR__53647][VAR__21230] > VAR__MAX )
         {
            VAR__MAX        = matrix[VAR__53647][VAR__21230];
            row[VAR__53647] = VAR__21230;
         }
      }
   }

   for ( VAR__21230 = 0; VAR__21230 < 5; VAR__21230++ )
   {
      column[VAR__21230] = 0;
      VAR__MIN           = matrix[0][VAR__21230];
      for ( VAR__53647 = 0; VAR__53647 < 5; VAR__53647++ )
      {
         if ( matrix[VAR__53647][VAR__21230] < VAR__MIN )
         {
            VAR__MIN           = matrix[VAR__53647][VAR__21230];
            column[VAR__21230] = VAR__53647;
         }
      }
   }

   for ( VAR__53647 = 0; VAR__53647 < 5; VAR__53647++ )
   {
      if ( column[row[VAR__53647]] == VAR__53647 )
      {
         ((((( cout << ( VAR__53647 + 1 )) << " " ) << ( row[VAR__53647] + 1 )) << " " ) << matrix[VAR__53647][row[VAR__53647]] ) << endl;
         VAR_FLAG = 1;
      }
   }

   if ( !VAR_FLAG )
   {
      ( cout << "not found" ) << endl;
   }

   return 0;
}
