int VAR__MAX(int A, int B, int C, int D, int E)
{
   if (((( A > B ) && ( A > C )) && ( A > D )) && ( A > E ))
   {
      return A;
   }
   else
   if (((( B > A ) && ( B > C )) && ( B > D )) && ( B > E ))
   {
      return B;
   }
   else
   if (((( C > A ) && ( C > B )) && ( C > D )) && ( C > E ))
   {
      return C;
   }
   else
   if (((( D > A ) && ( D > B )) && ( D > C )) && ( D > E ))
   {
      return D;
   }
   else
   {
      return E;
   }
}


int VAR__MIN(int L, int M, int N, int O, int P)
{
   if (((( L < M ) && ( L < N )) && ( L < O )) && ( L < P ))
   {
      return L;
   }
   else
   if (((( M < L ) && ( M < N )) && ( M < O )) && ( M < P ))
   {
      return M;
   }
   else
   if (((( N < L ) && ( N < M )) && ( N < O )) && ( N < P ))
   {
      return N;
   }
   else
   if (((( O < M ) && ( O < N )) && ( O < L )) && ( O < P ))
   {
      return O;
   }
   else
   {
      return P;
   }
}


int main()
{
   int VAR__819283[5][5];
   int VAR__53647;
   int VAR__21230;
   int VAR__8444594 = 0;

   for ( VAR__53647 = 0; VAR__53647 < 5; VAR__53647++ )
   {
      (((( cin >> VAR__819283[VAR__53647][0] ) >> VAR__819283[VAR__53647][1] ) >> VAR__819283[VAR__53647][2] ) >> VAR__819283[VAR__53647][3] ) >> VAR__819283[VAR__53647][4];
   }

   for ( VAR__53647 = 0; VAR__53647 < 5; VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 < 5; VAR__21230++ )
      {
         if (( VAR__819283[VAR__53647][VAR__21230] == VAR__MAX(VAR__819283[VAR__53647][0], VAR__819283[VAR__53647][1], VAR__819283[VAR__53647][2], VAR__819283[VAR__53647][3], VAR__819283[VAR__53647][4])) && ( VAR__819283[VAR__53647][VAR__21230] == VAR__MIN(VAR__819283[0][VAR__21230], VAR__819283[1][VAR__21230], VAR__819283[2][VAR__21230], VAR__819283[3][VAR__21230], VAR__819283[4][VAR__21230])))
         {
            ((((( cout << ( VAR__53647 + 1 )) << ' ' ) << ( VAR__21230 + 1 )) << ' ' ) << VAR__819283[VAR__53647][VAR__21230] ) << endl;
            VAR__8444594++;
         }
      }
   }


   if ( VAR__8444594 == 0 )
   {
      ( cout << "not found" ) << endl;
   }

   return 0;
}
