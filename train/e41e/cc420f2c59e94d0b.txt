int main()
{
   const int MAX_LEN = 100;
   int       VAR__NUM[MAX_LEN + 1];
   int       result[MAX_LEN];
   int       VAR__53647;
   int       VAR_129012 = 0;
   int       VAR_FLAG   = 0;
   int       VAR__8444594;
   char      A_STRING[MAX_LEN];

   cin.getline(A_STRING, MAX_LEN + 1);
   int nlen = strlen(A_STRING);
   memset(VAR__NUM, 0, sizeof( VAR__NUM ));
   memset(result, 0, sizeof( result ));

   if ( nlen == 1 )
   {
      (( cout << '0' ) << endl ) << A_STRING;
   }
   else
   if ((( nlen == 2 ) && ( A_STRING[0] == '1' )) && ( A_STRING[1] < '3' ))
   {
      (( cout << '0' ) << endl ) << A_STRING;
   }
   else
   {
      for ( VAR__53647 = 0; VAR__53647 < nlen; VAR__53647++ )
      {
         VAR__NUM[VAR__53647] = A_STRING[VAR__53647] - '0';
      }

      for ( VAR__53647 = 0; VAR__53647 < nlen; VAR__53647++ )
      {
         result[VAR__53647] = (( VAR_129012 * 10 ) + VAR__NUM[VAR__53647] ) / 13;
         VAR_129012         = (( VAR_129012 * 10 ) + VAR__NUM[VAR__53647] ) % 13;
         VAR__8444594       = VAR_129012;

         if ( VAR_129012 < 0 )
         {
            break;
         }
      }

      for ( VAR__53647 = 0; VAR__53647 < nlen; VAR__53647++ )
      {
         if (( result[VAR__53647] == 0 ) && ( VAR_FLAG == 0 ))
         {
            continue;
         }
         else
         {
            VAR_FLAG = 1;
            cout << result[VAR__53647];
         }
      }

      ( cout << endl ) << VAR__8444594;
   }


   return 0;
}
