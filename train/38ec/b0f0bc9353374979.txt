int main()
{
   int VAR__819283[13] = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
   int y1;
   int y2;
   int m1;
   int m2;
   int d1;
   int d2;
   int ysum = 0;
   int msum = 0;
   int dsum = 0;
   int VAR__53647;

   (( cin >> y1 ) >> m1 ) >> d1;
   (( cin >> y2 ) >> m2 ) >> d2;
   for ( VAR__53647 = y1 + 1; VAR__53647 < y2; VAR__53647++ )
   {
      if (((( VAR__53647 % 4 ) == 0 ) && (( VAR__53647 % 100 ) != 0 )) || (( VAR__53647 % 400 ) == 0 ))
      {
         ysum = ysum + 366;
      }
      else
      {
         ysum = ysum + 365;
      }
   }

   if (( y2 - y1 ) == 0 )
   {
      for ( VAR__53647 = m1 + 1; VAR__53647 < m2; VAR__53647++ )
      {
         if ((((( y1 % 4 ) == 0 ) && (( y1 % 100 ) != 0 )) || (( y1 % 400 ) == 0 )) && ( VAR__53647 == 2 ))
         {
            msum = msum + 29;
         }
         else
         {
            msum = msum + VAR__819283[VAR__53647];
         }
      }

      if ( m1 == m2 )
      {
         dsum = d2 - d1;
      }
      else
      {
         if ((((( y1 % 4 ) == 0 ) && (( y1 % 100 ) != 0 )) || (( y1 % 400 ) == 0 )) && ( m1 == 2 ))
         {
            dsum = ( dsum + 29 ) - d1;
         }
         else
         {
            dsum = ( dsum + VAR__819283[m1] ) - d1;
         }

         dsum = dsum + d2;
      }
   }
   else
   {
      for ( VAR__53647 = m1 + 1; VAR__53647 <= 12; VAR__53647++ )
      {
         if ((((( y1 % 4 ) == 0 ) && (( y1 % 100 ) != 0 )) || (( y1 % 400 ) == 0 )) && ( VAR__53647 == 2 ))
         {
            msum = msum + 29;
         }
         else
         {
            msum = msum + VAR__819283[VAR__53647];
         }
      }

      for ( VAR__53647 = 1; VAR__53647 < m2; VAR__53647++ )
      {
         if ((((( y2 % 4 ) == 0 ) && (( y2 % 100 ) != 0 )) || (( y2 % 400 ) == 0 )) && ( VAR__53647 == 2 ))
         {
            msum = msum + 29;
         }
         else
         {
            msum = msum + VAR__819283[VAR__53647];
         }
      }

      if ((((( y1 % 4 ) == 0 ) && (( y1 % 100 ) != 0 )) || (( y1 % 400 ) == 0 )) && ( m1 == 2 ))
      {
         dsum = ( dsum + 29 ) - d1;
      }
      else
      {
         dsum = ( dsum + VAR__819283[m1] ) - d1;
      }

      dsum = dsum + d2;
   }

   cout << (( dsum + msum ) + ysum );
   return 0;
}
