int main()
{
   int y1;
   int m1;
   int d1;
   int s1;
   int y2;
   int m2;
   int d2;
   int s2;
   int VAR__53647;
   int VAR_9494 = 0;
   int VAR__819283[5000];

   scanf("%d%d%d", &y1, &m1, &d1);
   scanf("%d%d%d", &y2, &m2, &d2);
   for ( VAR__53647 = y1; VAR__53647 <= y2; VAR__53647++ )
   {
      if (((( VAR__53647 % 4 ) == 0 ) && (( VAR__53647 % 100 ) != 0 )) || (( VAR__53647 % 400 ) == 0 ))
      {
         VAR__819283[VAR__53647] = 1;
      }
      else
      {
         VAR__819283[VAR__53647] = 0;
      }
   }

   switch ( m1 )
   {
   case 1:
      s1 = d1;
      break;

   case 2:
      s1 = 31 + d1;
      break;

   case 3:
      s1 = (( d1 + 31 ) + 28 ) + VAR__819283[y1];
      break;

   case 4:
      s1 = ((( d1 + 31 ) + 28 ) + 31 ) + VAR__819283[y1];
      break;

   case 5:
      s1 = (((( d1 + 31 ) + 28 ) + 31 ) + 30 ) + VAR__819283[y1];
      break;

   case 6:
      s1 = ((((( d1 + 31 ) + 28 ) + 31 ) + 30 ) + 31 ) + VAR__819283[y1];
      break;

   case 7:
      s1 = (((((( d1 + 31 ) + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + VAR__819283[y1];
      break;

   case 8:
      s1 = ((((((( d1 + 31 ) + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + VAR__819283[y1];
      break;

   case 9:
      s1 = (((((((( d1 + 31 ) + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) + VAR__819283[y1];
      break;

   case 10:
      s1 = ((((((((( d1 + 31 ) + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) + 30 ) + VAR__819283[y1];
      break;

   case 11:
      s1 = (((((((((( d1 + 31 ) + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) + 30 ) + 31 ) + VAR__819283[y1];
      break;

   case 12:
      s1 = ((((((((((( d1 + 31 ) + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) + 30 ) + 31 ) + 30 ) + VAR__819283[y1];
      break;
   }

   switch ( m2 )
   {
   case 1:
      s2 = d2;
      break;

   case 2:
      s2 = 31 + d2;
      break;

   case 3:
      s2 = (( d2 + 31 ) + 28 ) + VAR__819283[y2];
      break;

   case 4:
      s2 = ((( d2 + 31 ) + 28 ) + 31 ) + VAR__819283[y2];
      break;

   case 5:
      s2 = (((( d2 + 31 ) + 28 ) + 31 ) + 30 ) + VAR__819283[y2];
      break;

   case 6:
      s2 = ((((( d2 + 31 ) + 28 ) + 31 ) + 30 ) + 31 ) + VAR__819283[y2];
      break;

   case 7:
      s2 = (((((( d2 + 31 ) + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + VAR__819283[y2];
      break;

   case 8:
      s2 = ((((((( d2 + 31 ) + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + VAR__819283[y2];
      break;

   case 9:
      s2 = (((((((( d2 + 31 ) + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) + VAR__819283[y2];
      break;

   case 10:
      s2 = ((((((((( d2 + 31 ) + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) + 30 ) + VAR__819283[y2];
      break;

   case 11:
      s2 = (((((((((( d2 + 31 ) + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) + 30 ) + 31 ) + VAR__819283[y2];
      break;

   case 12:
      s2 = ((((((((((( d2 + 31 ) + 28 ) + 31 ) + 30 ) + 31 ) + 30 ) + 31 ) + 31 ) + 30 ) + 31 ) + 30 ) + VAR__819283[y2];
      break;
   }

   if ( y1 == y2 )
   {
      printf("%d", s2 - s1);
   }

   if (( y2 - y1 ) == 1 )
   {
      printf("%d", (( 365 + VAR__819283[y1] ) - s1 ) + s2);
   }

   if (( y2 - y1 ) > 1 )
   {
      for ( VAR__53647 = y1 + 1; VAR__53647 < y2; VAR__53647++ )
      {
         VAR_9494 = ( VAR_9494 + 365 ) + VAR__819283[VAR__53647];
      }

      printf("%d", ((( VAR_9494 + 365 ) + VAR__819283[y1] ) - s1 ) + s2);
   }

   return 0;
}
