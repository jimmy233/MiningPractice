int main()
{
   char name[1000][1000];
   char leader;
   char west;
   char tem[1000];
   int  VAR_1238123;
   int  VAR__53647;
   int  all = 0;
   int  VAR__21230;
   int  VAR__819283;
   int  VAR__19328;
   int  VAR__temp;
   int  money[5];
   int  VAR__SUM[1000];
   int  paper;

   scanf("%d", &VAR_1238123);
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      scanf("%s %d %d %c %c %d", name[VAR__53647], &VAR__819283, &VAR__19328, &leader, &west, &paper);

      if (( VAR__819283 > 80 ) && ( paper > 0 ))
      {
         money[0] = 8000;
      }
      else
      {
         money[0] = 0;
      }

      if (( VAR__819283 > 85 ) && ( VAR__19328 > 80 ))
      {
         money[1] = 4000;
      }
      else
      {
         money[1] = 0;
      }

      if ( VAR__819283 > 90 )
      {
         money[2] = 2000;
      }
      else
      {
         money[2] = 0;
      }

      if (( VAR__819283 > 85 ) && ( west == 'Y' ))
      {
         money[3] = 1000;
      }
      else
      {
         money[3] = 0;
      }

      if (( VAR__19328 > 80 ) && ( leader == 'Y' ))
      {
         money[4] = 850;
      }
      else
      {
         money[4] = 0;
      }

      VAR__SUM[VAR__53647] = ((( money[0] + money[1] ) + money[2] ) + money[3] ) + money[4];
   }

   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      all += VAR__SUM[VAR__53647];
   }

   for ( VAR__21230 = 0; VAR__21230 < ( VAR_1238123 - 1 ); VAR__21230++ )
   {
      for ( VAR__53647 = 0; VAR__53647 < (( VAR_1238123 - 1 ) - VAR__21230 ); VAR__53647++ )
      {
         if ( VAR__SUM[VAR__53647] < VAR__SUM[VAR__53647 + 1] )
         {
            VAR__temp                = VAR__SUM[VAR__53647];
            VAR__SUM[VAR__53647]     = VAR__SUM[VAR__53647 + 1];
            VAR__SUM[VAR__53647 + 1] = VAR__temp;
            strcpy(tem, name[VAR__53647]);
            strcpy(name[VAR__53647], name[VAR__53647 + 1]);
            strcpy(name[VAR__53647 + 1], tem);
         }
      }
   }



   printf("%s\n%d\n%d", name[0], VAR__SUM[0], all);
   return 0;
}
