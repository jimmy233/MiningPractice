struct stu
{
   char       name[25];
   int        s1;
   int        s2;
   char       y1;
   char       y2;
   int        VAR__temp;
   int        VAR__SUM;
   struct stu *VAR__NEXT;
};
struct stu *creat(int VAR_1238123)
{
   int        VAR__53647;
   struct stu *VAR__HEAD;
   struct stu *ANOTHER_POINTER;
   struct stu *YET_ANOTHER_POINTER;

   ANOTHER_POINTER = ( YET_ANOTHER_POINTER = (struct stu *)malloc(LEN));
   scanf("%s %d %d %c %c %d", ANOTHER_POINTER->name, &ANOTHER_POINTER->s1, &ANOTHER_POINTER->s2, &ANOTHER_POINTER->y1, &ANOTHER_POINTER->y2, &ANOTHER_POINTER->VAR__temp);
   VAR__HEAD = NULL;
   for ( VAR__53647 = 0; VAR__53647 < ( VAR_1238123 - 1 ); VAR__53647++ )
   {
      if ( VAR__53647 == 0 )
      {
         VAR__HEAD = ANOTHER_POINTER;
      }

      ANOTHER_POINTER = (struct stu *)malloc(sizeof( struct stu ));
      scanf("%s %d %d %c %c %d", ANOTHER_POINTER->name, &ANOTHER_POINTER->s1, &ANOTHER_POINTER->s2, &ANOTHER_POINTER->y1, &ANOTHER_POINTER->y2, &ANOTHER_POINTER->VAR__temp);
      YET_ANOTHER_POINTER->VAR__NEXT = ANOTHER_POINTER;
      YET_ANOTHER_POINTER            = ANOTHER_POINTER;
   }

   YET_ANOTHER_POINTER->VAR__NEXT = NULL;
   return VAR__HEAD;
}


void print(struct stu *VAR__HEAD)
{
   struct stu *VAR_233;

   VAR_233 = VAR__HEAD;

   if ( VAR__HEAD != NULL )
   {
      do
      {
         printf("%s %d %d %c %c %d\n", VAR_233->name, VAR_233->s1, VAR_233->s2, VAR_233->y1, VAR_233->y2, VAR_233->VAR__temp);
         VAR_233 = VAR_233->VAR__NEXT;
      } while ( VAR_233 != NULL );
   }
}


int main()
{
   int        VAR_1238123;
   int        VAR__53647;
   int        VAR_9494;
   int        VAR__MAX;
   struct stu *VAR__HEAD;
   struct stu *ANOTHER_POINTER;
   struct stu *YET_ANOTHER_POINTER;
   struct stu *p3;
   struct stu *VAR_233;

   scanf("%d", &VAR_1238123);
   VAR__HEAD = creat(VAR_1238123);
   p3        = ( YET_ANOTHER_POINTER = ( ANOTHER_POINTER = VAR__HEAD ));
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      ANOTHER_POINTER->VAR__SUM = 0;

      if (( ANOTHER_POINTER->VAR__temp > 0 ) && ( ANOTHER_POINTER->s1 > 80 ))
      {
         ANOTHER_POINTER->VAR__SUM = ANOTHER_POINTER->VAR__SUM + 8000;
      }

      if (( ANOTHER_POINTER->s2 > 80 ) && ( ANOTHER_POINTER->s1 > 85 ))
      {
         ANOTHER_POINTER->VAR__SUM = ANOTHER_POINTER->VAR__SUM + 4000;
      }

      if ( ANOTHER_POINTER->s1 > 90 )
      {
         ANOTHER_POINTER->VAR__SUM = ANOTHER_POINTER->VAR__SUM + 2000;
      }

      if (( ANOTHER_POINTER->y2 == 'Y' ) && ( ANOTHER_POINTER->s1 > 85 ))
      {
         ANOTHER_POINTER->VAR__SUM = ANOTHER_POINTER->VAR__SUM + 1000;
      }

      if (( ANOTHER_POINTER->y1 == 'Y' ) && ( ANOTHER_POINTER->s2 > 80 ))
      {
         ANOTHER_POINTER->VAR__SUM = ANOTHER_POINTER->VAR__SUM + 850;
      }

      ANOTHER_POINTER = ANOTHER_POINTER->VAR__NEXT;
   }

   VAR__MAX        = 0;
   ANOTHER_POINTER = VAR__HEAD;
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      if ( ANOTHER_POINTER->VAR__SUM > VAR__MAX )
      {
         VAR__MAX            = ANOTHER_POINTER->VAR__SUM;
         YET_ANOTHER_POINTER = ANOTHER_POINTER;
      }

      ANOTHER_POINTER = ANOTHER_POINTER->VAR__NEXT;
   }

   VAR_9494        = 0;
   ANOTHER_POINTER = VAR__HEAD;
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      VAR_9494        = VAR_9494 + ANOTHER_POINTER->VAR__SUM;
      ANOTHER_POINTER = ANOTHER_POINTER->VAR__NEXT;
   }

   printf("%s\n%d\n%d\n", YET_ANOTHER_POINTER->name, YET_ANOTHER_POINTER->VAR__SUM, VAR_9494);
}
