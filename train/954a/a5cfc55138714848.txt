struct Student
{
   char name[21];
   int  avg;
   int  cls;
   char off;
   char west;
   int  paper;
};
int main()
{
   int            VAR__53647;
   int            VAR__21230;
   int            N;
   int            high;
   long           sch[100] = { 0 };
   long           schtot   = 0;
   char           VAR__4857423;
   struct Student ptcpt[100];
   struct Student tmp;

   scanf("%d", &N);
   for ( VAR__53647 = 0; VAR__53647 < ( N - 1 ); VAR__53647++ )
   {
      VAR__21230 = 0;

      while (( VAR__21230 < 22 ) && (( VAR__4857423 = getchar()) != ' ' ))
      {
         ptcpt[VAR__53647].name[VAR__21230] = VAR__4857423;
         VAR__21230++;
      }

      ptcpt[VAR__53647].name[VAR__21230] = '\0';
      scanf(" %d %d %c %c %d\n", &ptcpt[VAR__53647].avg, &ptcpt[VAR__53647].cls, &ptcpt[VAR__53647].off, &ptcpt[VAR__53647].west, &ptcpt[VAR__53647].paper);

      if (( ptcpt[VAR__53647].avg > 80 ) && ( ptcpt[VAR__53647].paper >= 1 ))
      {
         sch[VAR__53647] = sch[VAR__53647] + 8000;
      }

      if (( ptcpt[VAR__53647].avg > 85 ) && ( ptcpt[VAR__53647].cls > 80 ))
      {
         sch[VAR__53647] = sch[VAR__53647] + 4000;
      }

      if ( ptcpt[VAR__53647].avg > 90 )
      {
         sch[VAR__53647] = sch[VAR__53647] + 2000;
      }

      if (( ptcpt[VAR__53647].avg > 85 ) && ( ptcpt[VAR__53647].west == 'Y' ))
      {
         sch[VAR__53647] = sch[VAR__53647] + 1000;
      }

      if (( ptcpt[VAR__53647].cls > 80 ) && ( ptcpt[VAR__53647].off == 'Y' ))
      {
         sch[VAR__53647] = sch[VAR__53647] + 850;
      }

      schtot = schtot + sch[VAR__53647];
   }

   VAR__21230 = 0;

   while (( VAR__21230 < 22 ) && (( VAR__4857423 = getchar()) != ' ' ))
   {
      ptcpt[N - 1].name[VAR__21230] = VAR__4857423;
      VAR__21230++;
   }

   ptcpt[N - 1].name[VAR__21230] = '\0';
   scanf(" %d %d %c %c %d", &ptcpt[N - 1].avg, &ptcpt[N - 1].cls, &ptcpt[N - 1].off, &ptcpt[N - 1].west, &ptcpt[N - 1].paper);

   if (( ptcpt[N - 1].avg > 80 ) && ( ptcpt[N - 1].paper >= 1 ))
   {
      sch[N - 1] = sch[N - 1] + 8000;
   }

   if (( ptcpt[N - 1].avg > 85 ) && ( ptcpt[N - 1].cls > 80 ))
   {
      sch[N - 1] = sch[N - 1] + 4000;
   }

   if ( ptcpt[N - 1].avg > 90 )
   {
      sch[N - 1] = sch[N - 1] + 2000;
   }

   if (( ptcpt[N - 1].avg > 85 ) && ( ptcpt[N - 1].west == 'Y' ))
   {
      sch[N - 1] = sch[N - 1] + 1000;
   }

   if (( ptcpt[N - 1].cls > 80 ) && ( ptcpt[N - 1].off == 'Y' ))
   {
      sch[N - 1] = sch[N - 1] + 850;
   }

   schtot = schtot + sch[N - 1];
   strcpy(tmp.name, ptcpt[N - 1].name);
   high = sch[N - 1];
   for ( VAR__53647 = N - 1; VAR__53647 > ( -1 ); VAR__53647-- )
   {
      if ( high <= sch[VAR__53647] )
      {
         strcpy(tmp.name, ptcpt[VAR__53647].name);
         high = sch[VAR__53647];
      }
      else
      {
         continue;
      }
   }

   printf("%s\n%d\n%ld", tmp.name, high, schtot);
   return 0;
}
