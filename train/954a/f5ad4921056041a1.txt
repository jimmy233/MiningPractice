int main()
{
   struct student
   {
      char           name[20];
      int            VAR__819283;
      int            VAR__19328;
      char           VAR__4857423;
      char           VAR__12302;
      int            VAR__112390;
      struct student *VAR__NEXT;
   }
       student[100];
   int N;
   int VAR__53647;
   int money[100];
   int VAR__MAX;
   int VAR__SUM;
   int VAR_FLAG;

   VAR__MAX = ( VAR__SUM = 0 );
   for ( VAR__53647 = 0; VAR__53647 < 100; VAR__53647++ )
   {
      money[VAR__53647] = 0;
   }

   struct student *VAR_233;
   scanf("%d", &N);
   for ( VAR__53647 = 0; VAR__53647 < N; VAR__53647++ )
   {
      student[VAR__53647].VAR__NEXT = &student[VAR__53647 + 1];
   }

   student[N - 1].VAR__NEXT = NULL;
   VAR_233    = &student[0];
   VAR__53647 = 0;

   while ( VAR_233 != NULL )
   {
      scanf("%s %d %d %c %c %d", VAR_233->name, &VAR_233->VAR__819283, &VAR_233->VAR__19328, &VAR_233->VAR__4857423, &VAR_233->VAR__12302, &VAR_233->VAR__112390);

      if (( VAR_233->VAR__819283 > 80 ) && ( VAR_233->VAR__112390 > 0 ))
      {
         money[VAR__53647] += 8000;
      }

      if (( VAR_233->VAR__819283 > 85 ) && ( VAR_233->VAR__19328 > 80 ))
      {
         money[VAR__53647] += 4000;
      }

      if ( VAR_233->VAR__819283 > 90 )
      {
         money[VAR__53647] += 2000;
      }

      if (( VAR_233->VAR__819283 > 85 ) && ( VAR_233->VAR__12302 == 'Y' ))
      {
         money[VAR__53647] += 1000;
      }

      if (( VAR_233->VAR__19328 > 80 ) && ( VAR_233->VAR__4857423 == 'Y' ))
      {
         money[VAR__53647] += 850;
      }

      VAR__53647++;
      VAR_233 = VAR_233->VAR__NEXT;
   }

   for ( VAR__53647 = 0; VAR__53647 < N; VAR__53647++ )
   {
      if ( money[VAR__53647] > VAR__MAX )
      {
         VAR__MAX = money[VAR__53647];
         VAR_FLAG = VAR__53647;
      }
   }

   printf("%s\n", student[VAR_FLAG].name);
   printf("%d\n", VAR__MAX);
   for ( VAR__53647 = 0; VAR__53647 < N; VAR__53647++ )
   {
      VAR__SUM += money[VAR__53647];
   }

   printf("%d", VAR__SUM);
   return 0;
}
