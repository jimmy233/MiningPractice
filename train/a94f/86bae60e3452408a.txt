inline void T(int N, int M, int row, int col, int array[][100])
{
   if (( N > row ) || ( M > col ))
   {
      return;
   }

   for ( int VAR__21230 = M; VAR__21230 <= col; VAR__21230++ )
   {
      if ( array[N][VAR__21230] != INT_MAX )
      {
         ( cout << array[N][VAR__21230] ) << endl;
         array[N][VAR__21230] = INT_MAX;
      }
   }

   for ( int VAR__53647 = N + 1; VAR__53647 <= row; VAR__53647++ )
   {
      if ( array[VAR__53647][col] != INT_MAX )
      {
         ( cout << array[VAR__53647][col] ) << endl;
         array[VAR__53647][col] = INT_MAX;
      }
   }

   for ( int VAR__21230 = col - 1; VAR__21230 >= M; VAR__21230-- )
   {
      if ( array[row][VAR__21230] != INT_MAX )
      {
         ( cout << array[row][VAR__21230] ) << endl;
         array[row][VAR__21230] = INT_MAX;
      }
   }

   for ( int VAR__53647 = row - 1; VAR__53647 >= ( N + 1 ); VAR__53647-- )
   {
      if ( array[VAR__53647][M] != INT_MAX )
      {
         ( cout << array[VAR__53647][M] ) << endl;
         array[VAR__53647][M] = INT_MAX;
      }
   }

   T(N + 1, M + 1, row - 1, col - 1, array);
}


int main()
{
   int array[100][100] = { 0 };
   int row;
   int col;

   ( cin >> row ) >> col;
   for ( int VAR__53647 = 0; VAR__53647 < row; VAR__53647++ )
   {
      for ( int VAR__21230 = 0; VAR__21230 < col; VAR__21230++ )
      {
         cin >> array[VAR__53647][VAR__21230];
      }
   }

   T(0, 0, row - 1, col - 1, array);
   return 0;
}
