int row;
int col;
int array[MAXN][MAXN];
int sign[MAXN][MAXN];
int main()
{
   memset(array, 0, sizeof( array ));
   memset(sign, 0, sizeof( sign ));
   ( cin >> row ) >> col;
   for ( int VAR__53647 = 0; VAR__53647 < row; VAR__53647++ )
   {
      for ( int VAR__21230 = 0; VAR__21230 < col; VAR__21230++ )
      {
         cin >> array[VAR__53647][VAR__21230];
      }
   }

   int VAR__NUM = 0;
   int sxy      = 0;
   int cxy      = 0;
   int mrow     = 0;
   int mcol     = 0;

   while ( VAR__NUM < ( row * col ))
   {
      if ( sxy == 0 )
      {
         while (( mcol < col ) && ( mcol >= 0 ))
         {
            if ( sign[mrow][mcol] == 0 )
            {
               ( cout << array[mrow][mcol] ) << endl;
               VAR__NUM++;
            }

            sign[mrow][mcol] = 1;

            if ( cxy == 0 )
            {
               if ((( mcol + 1 ) < col ) && ( sign[mrow][mcol + 1] == 0 ))
               {
                  mcol++;
               }
               else
               {
                  break;
               }
            }
            else
            {
               if ((( mcol - 1 ) >= 0 ) && ( sign[mrow][mcol - 1] == 0 ))
               {
                  mcol--;
               }
               else
               {
                  break;
               }
            }
         }

         sxy = 1;
      }
      else
      {
         while (( mrow < row ) && ( mrow >= 0 ))
         {
            if ( sign[mrow][mcol] == 0 )
            {
               ( cout << array[mrow][mcol] ) << endl;
               VAR__NUM++;
            }

            sign[mrow][mcol] = 1;

            if ( cxy == 0 )
            {
               if ((( mrow + 1 ) < row ) && ( sign[mrow + 1][mcol] == 0 ))
               {
                  mrow++;
               }
               else
               {
                  break;
               }
            }
            else
            {
               if ((( mrow - 1 ) >= 0 ) && ( sign[mrow - 1][mcol] == 0 ))
               {
                  mrow--;
               }
               else
               {
                  break;
               }
            }
         }

         sxy = 0;
         cxy = ( cxy ) ? ( 0 ) : ( 1 );
      }
   }
}
