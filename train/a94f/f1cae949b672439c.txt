int main()
{
   int row;
   int col;
   int VAR__53647;
   int VAR__21230;
   int matrix[100][100];

   ( cin >> row ) >> col;
   for ( VAR__53647 = 1; VAR__53647 <= row; VAR__53647++ )
   {
      for ( VAR__21230 = 1; VAR__21230 <= col; VAR__21230++ )
      {
         cin >> matrix[VAR__53647][VAR__21230];
      }
   }

   int VAR__8444594;
   cout << matrix[1][1];
   for ( VAR__8444594 = 2; VAR__8444594 <= col; VAR__8444594++ )
   {
      ( cout << endl ) << matrix[1][VAR__8444594];
   }

   int  xlength = col - 1;
   int  ylength = row - 1;
   int  VAR__temp;
   char VAR_FLAG = 'd';
   VAR__53647 = 1;
   VAR__21230 = col;

   while (((( VAR_FLAG == 'u' ) || ( VAR_FLAG == 'd' )) && ( ylength != 0 )) || ((( VAR_FLAG == 'l' ) || ( VAR_FLAG == 'r' )) && ( xlength != 0 )))
   {
      switch ( VAR_FLAG )
      {
      case 'd':
         for ( VAR__temp = 1; VAR__temp <= ylength; VAR__temp++ )
         {
            VAR__53647++;
            ( cout << endl ) << matrix[VAR__53647][VAR__21230];
         }

         VAR_FLAG = 'l';
         ylength--;
         break;

      case 'l':
         for ( VAR__temp = 1; VAR__temp <= xlength; VAR__temp++ )
         {
            VAR__21230--;
            ( cout << endl ) << matrix[VAR__53647][VAR__21230];
         }

         VAR_FLAG = 'u';
         xlength--;
         break;

      case 'u':
         for ( VAR__temp = 1; VAR__temp <= ylength; VAR__temp++ )
         {
            VAR__53647--;
            ( cout << endl ) << matrix[VAR__53647][VAR__21230];
         }

         VAR_FLAG = 'r';
         ylength--;
         break;

      case 'r':
         for ( VAR__temp = 1; VAR__temp <= xlength; VAR__temp++ )
         {
            VAR__21230++;
            ( cout << endl ) << matrix[VAR__53647][VAR__21230];
         }

         VAR_FLAG = 'd';
         xlength--;
         break;
      }
   }

   return 0;
}
