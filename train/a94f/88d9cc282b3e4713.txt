int main()
{
   int ROW;
   int COL;
   int VAR__819283[100][100];

   scanf("%d%d", &ROW, &COL);
   for ( int row = 0; row < ROW; row++ )
   {
      for ( int col = 0; col < COL; col++ )
      {
         scanf("%d", &VAR__819283[row][col]);
      }
   }

   for ( int VAR__8444594 = 0; VAR__8444594 < (( ROW < COL ) ? (( ROW + 1 ) / 2 ) : (( COL + 1 ) / 2 )); VAR__8444594++ )
   {
      for ( int col = VAR__8444594; col < (( COL - VAR__8444594 ) - 1 ); col++ )
      {
         printf("%d\n", VAR__819283[VAR__8444594][col]);
      }

      for ( int row = VAR__8444594; row < (( ROW - VAR__8444594 ) - 1 ); row++ )
      {
         printf("%d\n", VAR__819283[row][( COL - VAR__8444594 ) - 1]);
      }

      for ( int col = ( COL - VAR__8444594 ) - 1; ( col > VAR__8444594 ) && ( VAR__8444594 != ((( 1.0 * ( ROW + 1 )) / 2 ) - 1 )); col-- )
      {
         printf("%d\n", VAR__819283[( ROW - VAR__8444594 ) - 1][col]);
      }

      for ( int row = ( ROW - VAR__8444594 ) - 1; ( row > VAR__8444594 ) && ( VAR__8444594 != ((( 1.0 * ( COL + 1 )) / 2 ) - 1 )); row-- )
      {
         printf("%d\n", VAR__819283[row][VAR__8444594]);
      }
   }

   if (((( ROW % 2 ) != 0 ) && ( ROW <= COL )) || ((( COL % 2 ) != 0 ) && ( COL <= ROW )))
   {
      printf("%d", VAR__819283[ROW - (( ROW < COL ) ? (( ROW + 1 ) / 2 ) : (( COL + 1 ) / 2 ))][COL - (( ROW < COL ) ? (( ROW + 1 ) / 2 ) : (( COL + 1 ) / 2 ))]);
   }

   return 0;
}
