int main()
{
   int row;
   int col;
   int matrix[ROW][COL];
   int VAR__53647;
   int VAR__21230;
   int xxrow;
   int sxrow;
   int xxcol;
   int sxcol;

   scanf("%d %d", &row, &col);
   for ( VAR__53647 = 0; VAR__53647 < row; VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 < col; VAR__21230++ )
      {
         scanf("%d", &matrix[VAR__53647][VAR__21230]);
      }
   }

   xxrow = 0;
   sxrow = row - 1;
   xxcol = 0;
   sxcol = col - 1;

   while (( xxrow < sxrow ) && ( xxcol < sxcol ))
   {
      for ( VAR__21230 = xxcol; VAR__21230 < sxcol; VAR__21230++ )
      {
         printf("%d\n", matrix[xxrow][VAR__21230]);
      }

      for ( VAR__53647 = xxrow; VAR__53647 < sxrow; VAR__53647++ )
      {
         printf("%d\n", matrix[VAR__53647][sxcol]);
      }

      for ( VAR__21230 = sxcol; VAR__21230 > xxcol; VAR__21230-- )
      {
         printf("%d\n", matrix[sxrow][VAR__21230]);
      }

      for ( VAR__53647 = sxrow; VAR__53647 > xxrow; VAR__53647-- )
      {
         printf("%d\n", matrix[VAR__53647][xxcol]);
      }

      xxrow++;
      sxrow--;
      xxcol++;
      sxcol--;
   }

   if (( xxrow == sxrow ) && ( xxcol < sxcol ))
   {
      for ( VAR__21230 = xxcol; VAR__21230 < ( sxcol + 1 ); VAR__21230++ )
      {
         printf("%d\n", matrix[xxrow][VAR__21230]);
      }
   }
   else
   if (( xxrow < sxrow ) && ( xxcol == sxcol ))
   {
      for ( VAR__53647 = xxrow; VAR__53647 < ( sxrow + 1 ); VAR__53647++ )
      {
         printf("%d\n", matrix[VAR__53647][xxcol]);
      }
   }
   else
   if (( xxrow == sxrow ) && ( xxcol == sxcol ))
   {
      printf("%d\n", matrix[xxrow][xxcol]);
   }



   return 0;
}
