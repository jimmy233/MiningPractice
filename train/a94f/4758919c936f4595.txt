int main()
{
   int row;
   int col;
   int VAR_SIZE[100][100];
   int VAR__53647;
   int VAR__21230;

   scanf("%d%d", &row, &col);
   for ( VAR__21230 = 0; VAR__21230 < row; VAR__21230++ )
   {
      for ( VAR__53647 = 0; VAR__53647 < col; VAR__53647++ )
      {
         scanf("%d", &VAR_SIZE[VAR__21230][VAR__53647]);
      }
   }

   int VAR_1238123;
   int VAR__8444594;
   int I;
   int J;
   int M;
   int N;

   if ((( col % 2 ) == 0 ) && (( row % 2 ) == 0 ))
   {
      if ( col <= row )
      {
         VAR_1238123 = col / 2;
      }
      else
      {
         VAR_1238123 = row / 2;
      }

      for ( VAR__8444594 = 0; VAR__8444594 < VAR_1238123; VAR__8444594++ )
      {
         for ( I = VAR__8444594; I < (( col - VAR__8444594 ) - 1 ); I++ )
         {
            printf("%d\n", VAR_SIZE[VAR__8444594][I]);
         }

         for ( J = VAR__8444594; J < (( row - VAR__8444594 ) - 1 ); J++ )
         {
            printf("%d\n", VAR_SIZE[J][( col - VAR__8444594 ) - 1]);
         }

         for ( M = ( col - VAR__8444594 ) - 1; M > VAR__8444594; M-- )
         {
            printf("%d\n", VAR_SIZE[( row - VAR__8444594 ) - 1][M]);
         }

         for ( N = ( row - VAR__8444594 ) - 1; N > VAR__8444594; N-- )
         {
            printf("%d\n", VAR_SIZE[N][VAR__8444594]);
         }
      }
   }
   else
   {
      if ( row <= col )
      {
         VAR_1238123 = ( row / 2 ) + 1;
         for ( VAR__8444594 = 0; VAR__8444594 < VAR_1238123; VAR__8444594++ )
         {
            for ( I = VAR__8444594; I < (( col - VAR__8444594 ) - 1 ); I++ )
            {
               printf("%d\n", VAR_SIZE[VAR__8444594][I]);
            }

            if (( 2 * VAR__8444594 ) < ( row - 1 ))
            {
               for ( J = VAR__8444594; J < (( row - VAR__8444594 ) - 1 ); J++ )
               {
                  printf("%d\n", VAR_SIZE[J][( col - VAR__8444594 ) - 1]);
               }
            }
            else
            {
               for ( J = VAR__8444594; J <= (( row - VAR__8444594 ) - 1 ); J++ )
               {
                  printf("%d\n", VAR_SIZE[J][( col - VAR__8444594 ) - 1]);
               }

               break;
            }

            for ( M = ( col - VAR__8444594 ) - 1; M > VAR__8444594; M-- )
            {
               printf("%d\n", VAR_SIZE[( row - VAR__8444594 ) - 1][M]);
            }

            for ( N = ( row - VAR__8444594 ) - 1; N > VAR__8444594; N-- )
            {
               printf("%d\n", VAR_SIZE[N][VAR__8444594]);
            }
         }
      }
      else
      {
         VAR_1238123 = ( col / 2 ) + 1;
         for ( VAR__8444594 = 0; VAR__8444594 < VAR_1238123; VAR__8444594++ )
         {
            for ( I = VAR__8444594; I < (( col - VAR__8444594 ) - 1 ); I++ )
            {
               printf("%d\n", VAR_SIZE[VAR__8444594][I]);
            }

            if ( VAR__8444594 != ( VAR_1238123 - 1 ))
            {
               for ( J = VAR__8444594; J < (( row - VAR__8444594 ) - 1 ); J++ )
               {
                  printf("%d\n", VAR_SIZE[J][( col - VAR__8444594 ) - 1]);
               }
            }
            else
            {
               for ( J = VAR__8444594; J <= (( row - VAR__8444594 ) - 1 ); J++ )
               {
                  printf("%d\n", VAR_SIZE[J][( col - VAR__8444594 ) - 1]);
               }

               break;
            }

            for ( M = ( col - VAR__8444594 ) - 1; M > VAR__8444594; M-- )
            {
               printf("%d\n", VAR_SIZE[( row - VAR__8444594 ) - 1][M]);
            }

            for ( N = ( row - VAR__8444594 ) - 1; N > VAR__8444594; N-- )
            {
               printf("%d\n", VAR_SIZE[N][VAR__8444594]);
            }
         }
      }
   }

   return 0;
}
