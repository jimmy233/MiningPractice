void main()
{
   struct student
   {
      int            xh;
      int            yw;
      int            sx;
      int            zf;
      struct student *VAR__NEXT;
   };
   int            VAR__53647;
   int            VAR__21230;
   int            VAR__8444594;
   int            VAR_1238123;
   int            VAR__1238129;
   int            VAR__MAX;
   struct student *ANOTHER_POINTER;
   struct student *YET_ANOTHER_POINTER;
   struct student *VAR__HEAD;

   scanf("%d", &VAR_1238123);
   VAR__HEAD = ( ANOTHER_POINTER = ( YET_ANOTHER_POINTER = (struct student *)malloc(sizeof( struct student ))));
   scanf("%d %d %d", &ANOTHER_POINTER->xh, &ANOTHER_POINTER->yw, &ANOTHER_POINTER->sx);
   ANOTHER_POINTER->zf = ANOTHER_POINTER->yw + ANOTHER_POINTER->sx;
   for ( VAR__53647 = 2; VAR__53647 <= VAR_1238123; VAR__53647++ )
   {
      ANOTHER_POINTER = (struct student *)malloc(sizeof( struct student ));
      scanf("%d %d %d", &ANOTHER_POINTER->xh, &ANOTHER_POINTER->yw, &ANOTHER_POINTER->sx);
      ANOTHER_POINTER->zf            = ANOTHER_POINTER->yw + ANOTHER_POINTER->sx;
      YET_ANOTHER_POINTER->VAR__NEXT = ANOTHER_POINTER;
      YET_ANOTHER_POINTER            = ANOTHER_POINTER;

      if ( VAR__53647 == VAR_1238123 )
      {
         ANOTHER_POINTER->VAR__NEXT = 0;
      }
   }

   ANOTHER_POINTER = VAR__HEAD;
   for ( VAR__53647 = 1; VAR__53647 <= 3; VAR__53647++ )
   {
      ANOTHER_POINTER = VAR__HEAD;
      VAR__MAX        = 0;
      for ( VAR__21230 = 1; VAR__21230 <= VAR_1238123; VAR__21230++ )
      {
         VAR__MAX        = ( VAR__MAX > ANOTHER_POINTER->zf ) ? ( VAR__MAX ) : ( ANOTHER_POINTER->zf );
         ANOTHER_POINTER = ANOTHER_POINTER->VAR__NEXT;
      }

      ANOTHER_POINTER = VAR__HEAD;
      for ( VAR__21230 = 1; VAR__21230 <= VAR_1238123; VAR__21230++ )
      {
         if ( ANOTHER_POINTER->zf == VAR__MAX )
         {
            printf("%d %d\n", ANOTHER_POINTER->xh, ANOTHER_POINTER->zf);
            ANOTHER_POINTER->zf = 0;
            break;
         }

         ANOTHER_POINTER = ANOTHER_POINTER->VAR__NEXT;
      }
   }
}
