struct stu
{
   int        VAR__819283;
   int        VAR__19328;
   int        VAR__4857423;
   struct stu *VAR__NEXT;
};
void main()
{
   int        VAR_1238123;
   int        VAR__53647;
   int        VAR__21230;
   int        VAR__MAX;
   struct stu *VAR__HEAD;
   struct stu *ANOTHER_POINTER;
   struct stu *YET_ANOTHER_POINTER;

   scanf("%d", &VAR_1238123);
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      if ( VAR__53647 == 0 )
      {
         VAR__HEAD = ( ANOTHER_POINTER = ( YET_ANOTHER_POINTER = (struct stu *)malloc(sizeof( struct stu ))));
         scanf("%d %d %d", &ANOTHER_POINTER->VAR__819283, &ANOTHER_POINTER->VAR__19328, &ANOTHER_POINTER->VAR__4857423);
         VAR__HEAD           = ANOTHER_POINTER;
         YET_ANOTHER_POINTER = ANOTHER_POINTER;
      }
      else
      {
         ANOTHER_POINTER = (struct stu *)malloc(sizeof( struct stu ));
         scanf("%d %d %d", &ANOTHER_POINTER->VAR__819283, &ANOTHER_POINTER->VAR__19328, &ANOTHER_POINTER->VAR__4857423);
         YET_ANOTHER_POINTER->VAR__NEXT = ANOTHER_POINTER;
         YET_ANOTHER_POINTER            = ANOTHER_POINTER;
      }
   }

   YET_ANOTHER_POINTER->VAR__NEXT = NULL;
   for ( VAR__21230 = 0; VAR__21230 < 3; VAR__21230++ )
   {
      VAR__MAX        = 0;
      ANOTHER_POINTER = VAR__HEAD;
      for ( VAR__53647 = 0; ANOTHER_POINTER->VAR__NEXT != NULL; VAR__53647++ )
      {
         if (( ANOTHER_POINTER->VAR__19328 + ANOTHER_POINTER->VAR__4857423 ) > VAR__MAX )
         {
            VAR__MAX = ANOTHER_POINTER->VAR__19328 + ANOTHER_POINTER->VAR__4857423;
         }

         ANOTHER_POINTER = ANOTHER_POINTER->VAR__NEXT;
      }

      ANOTHER_POINTER = VAR__HEAD;
      for ( VAR__53647 = 0; ANOTHER_POINTER->VAR__NEXT != NULL; VAR__53647++ )
      {
         if (( ANOTHER_POINTER->VAR__19328 + ANOTHER_POINTER->VAR__4857423 ) == VAR__MAX )
         {
            printf("%d %d\n", ANOTHER_POINTER->VAR__819283, VAR__MAX);
            ANOTHER_POINTER->VAR__19328   = 0;
            ANOTHER_POINTER->VAR__4857423 = 0;
            ANOTHER_POINTER = ANOTHER_POINTER->VAR__NEXT;
            break;
         }
         else
         {
            ANOTHER_POINTER = ANOTHER_POINTER->VAR__NEXT;
         }
      }
   }
}
