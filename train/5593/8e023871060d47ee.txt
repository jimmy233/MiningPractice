int sieve[100010] = { 1, 1, 0 };
int VAR_666[1000];
int VAR__1111 = 0;
int VAR__1238129;
int VAR_1238123;
void init()
{
   int VAR__53647;
   int VAR__21230;

   scanf("%d%d", &VAR_1238123, &VAR__1238129);
   for ( VAR__53647 = 2; VAR__53647 < 330; VAR__53647++ )
   {
      if ( !sieve[VAR__53647] )
      {
         VAR__21230 = VAR__53647;

         while (( VAR__53647 * VAR__21230 ) < 100010 )
         {
            sieve[VAR__53647 * VAR__21230] = 1;
            VAR__21230++;
         }
      }
   }
}


int jud(int VAR__7685)
{
   int VAR__temp = VAR__7685;
   int u         = 0;

   while ( VAR__temp )
   {
      u          = ( u * 10 ) + ( VAR__temp % 10 );
      VAR__temp /= 10;
   }

   return u == VAR__7685;
}


void solve()
{
   int VAR__53647;

   for ( VAR__53647 = VAR_1238123; VAR__53647 <= VAR__1238129; VAR__53647++ )
   {
      if (( !sieve[VAR__53647] ) && jud(VAR__53647))
      {
         VAR_666[VAR__1111++] = VAR__53647;
      }
   }
}


void print()
{
   int VAR__53647;

   for ( VAR__53647 = 0; VAR__53647 < VAR__1111; VAR__53647++ )
   {
      printf("%d", VAR_666[VAR__53647]);

      if ( VAR__53647 < ( VAR__1111 - 1 ))
      {
         putchar(',');
      }
   }

   if ( !VAR__1111 )
   {
      printf("no");
   }

   putchar('\n');
}


int main()
{
   init();
   solve();
   print();
   return 0;
}
