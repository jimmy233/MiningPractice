int Reverse(int VAR__NUM, int renum)
{
   if ( VAR__NUM == 0 )
   {
      return renum;
   }
   else
   {
      return Reverse(VAR__NUM / 10, ( renum * 10 ) + ( VAR__NUM % 10 ));
   }
}


int isReverse(int VAR_1238123)
{
   if ( Reverse(VAR_1238123, 0) == VAR_1238123 )
   {
      return 1;
   }
   else
   {
      return 0;
   }
}


int isPrime(int VAR_1238123, int limit, int VAR__NUM)
{
   if ( VAR__NUM > limit )
   {
      return 1;
   }
   else
   if (( VAR_1238123 % VAR__NUM ) == 0 )
   {
      return 0;
   }
   else
   {
      return isPrime(VAR_1238123, limit, VAR__NUM + 1);
   }
}


int main()
{
   int  VAR_1238123;
   int  VAR__1238129;
   int  VAR__53647;
   int  VAR__21230 = 0;
   int  limit;
   int  VAR__819283[300];
   char A_STRING[300];

   scanf("%d %d", &VAR__1238129, &VAR_1238123);
   for ( VAR__53647 = VAR__1238129; VAR__53647 <= VAR_1238123; VAR__53647++ )
   {
      limit = sqrt(VAR__53647);

      if ( isPrime(VAR__53647, limit, 2) && isReverse(VAR__53647))
      {
         VAR__819283[VAR__21230++] = VAR__53647;
      }
   }

   for ( VAR__53647 = 0; VAR__53647 < ( VAR__21230 - 1 ); VAR__53647++ )
   {
      A_STRING[VAR__53647] = ',';
   }

   A_STRING[VAR__21230 - 1] = '\n';
   for ( VAR__53647 = 0; VAR__53647 < VAR__21230; VAR__53647++ )
   {
      printf("%d%c", VAR__819283[VAR__53647], A_STRING[VAR__53647]);
   }

   if ( VAR__21230 == 0 )
   {
      printf("no\n");
   }

   return 0;
}
