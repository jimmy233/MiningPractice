int reverse(int VAR__NUM)
{
   int VAR__819283[10];
   int VAR__53647;
   int VAR__21230;
   int VAR__1238129;
   int VAR__COUNT = 0;
   int newnum     = 0;

   if ( VAR__NUM >= 0 )
   {
      for ( VAR__53647 = 0; ; VAR__53647++ )
      {
         VAR__1238129            = pow(10.0, VAR__53647);
         VAR__819283[VAR__53647] = ( VAR__NUM / VAR__1238129 ) % 10;

         if ( VAR__1238129 > VAR__NUM )
         {
            VAR__COUNT = VAR__53647;
            break;
         }
      }

      for ( VAR__21230 = 0; VAR__819283[VAR__21230] != 0; VAR__21230++ )
      {
         VAR__1238129 = pow(10.0, ( VAR__COUNT - VAR__21230 ) - 1);
         newnum       = VAR__819283[VAR__21230] * VAR__1238129;
         break;
      }

      for ( VAR__53647 = VAR__21230 + 1; VAR__53647 < VAR__COUNT; VAR__53647++ )
      {
         VAR__1238129 = pow(10.0, ( VAR__COUNT - 1 ) - VAR__53647);
         newnum       = newnum + ( VAR__819283[VAR__53647] * VAR__1238129 );
      }

      return newnum;
   }

   if ( VAR__NUM < 0 )
   {
      VAR__NUM = -VAR__NUM;
      for ( VAR__53647 = 0; ; VAR__53647++ )
      {
         VAR__1238129            = pow(10.0, VAR__53647);
         VAR__819283[VAR__53647] = ( VAR__NUM / VAR__1238129 ) % 10;

         if ( VAR__1238129 > VAR__NUM )
         {
            VAR__COUNT = VAR__53647;
            break;
         }
      }

      for ( VAR__21230 = 0; VAR__819283[VAR__21230] != 0; VAR__21230++ )
      {
         VAR__1238129 = pow(10.0, ( VAR__COUNT - VAR__21230 ) - 1);
         newnum       = VAR__819283[VAR__21230] * VAR__1238129;
         break;
      }

      for ( VAR__53647 = VAR__21230 + 1; VAR__53647 < VAR__COUNT; VAR__53647++ )
      {
         VAR__1238129 = pow(10.0, ( VAR__COUNT - 1 ) - VAR__53647);
         newnum       = newnum + ( VAR__819283[VAR__53647] * VAR__1238129 );
      }

      return -newnum;
   }
}


int main()
{
   int VAR__NUM;
   int VAR__53647;

   for ( VAR__53647 = 0; VAR__53647 < 6; VAR__53647++ )
   {
      cin >> VAR__NUM;
      ( cout << reverse(VAR__NUM)) << endl;
   }

   return 0;
}
