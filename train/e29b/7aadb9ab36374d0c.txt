int VAR__NUM[301] = { 0 };
int cmp(int VAR__819283, int VAR__19328)
{
   if ( VAR__NUM[VAR__819283] < VAR__NUM[VAR__19328] )
   {
      return 1;
   }

   return 0;
}


int main()
{
   int    VAR__SUM = 0;
   int    VAR_1238123;
   int    VAR__53647;
   int    VAR__21230;
   int    VAR__MAX[50] = { 0 };
   int    max_sum      = 0;
   double ava          = 0;
   double distance     = 0;
   double VAR__temp;

   cin >> VAR_1238123;
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      cin >> VAR__NUM[VAR__53647];
      VAR__SUM += VAR__NUM[VAR__53647];
   }

   ava = ( VAR__SUM * 1.0 ) / VAR_1238123;
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      VAR__temp = fabs(ava - VAR__NUM[VAR__53647]);

      if (( VAR__temp - distance ) > 1e-4 )
      {
         max_sum             = 0;
         VAR__MAX[max_sum++] = VAR__53647;
         distance            = VAR__temp;
         continue;
      }

      if (( VAR__temp - distance ) < ( -1e-4 ))
      {
         continue;
      }

      if ( fabs(VAR__temp - distance) < 1e-4 )
      {
         VAR__MAX[max_sum++] = VAR__53647;
      }
   }

   sort(VAR__MAX, ( VAR__MAX + max_sum ) - 1, cmp);
   cout << VAR__NUM[VAR__MAX[0]];
   for ( VAR__53647 = 1; VAR__53647 < max_sum; VAR__53647++ )
   {
      ( cout << "," ) << VAR__NUM[VAR__MAX[VAR__53647]];
   }

   return 0;
}
