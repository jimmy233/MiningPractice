double absss(double shu)
{
   if ( shu < 0 )
   {
      shu = -shu;
   }

   return shu;
}


int main()
{
   double absss(double shu);

   int    VAR_1238123;
   int    VAR__819283[500];
   int    VAR__53647;
   int    m1         = 0;
   int    m2         = 0;
   int    VAR__21230 = 0;
   int    VAR_233;
   int    VAR_666;
   double VAR_9494 = 0.0;
   double VAR__MAX;
   double shu;
   scanf("%d", &VAR_1238123);
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      scanf("%d", &VAR__819283[VAR__53647]);
      VAR_9494 = VAR_9494 + VAR__819283[VAR__53647];
   }

   VAR_9494 = ((double)VAR_9494 ) / VAR_1238123;
   VAR__MAX = absss(VAR_9494 - VAR__819283[0]);
   for ( VAR__53647 = 1; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      if ( absss(VAR__819283[VAR__53647] - VAR_9494) > VAR__MAX )
      {
         VAR__MAX = absss(VAR__819283[VAR__53647] - VAR_9494);
      }
   }

   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      if ( abs(VAR__819283[VAR__53647] - VAR_9494) == VAR__MAX )
      {
         VAR__MAX = absss(VAR__819283[VAR__53647] - VAR_9494);
      }
   }

   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      if ( absss(VAR__819283[VAR__53647] - VAR_9494) == VAR__MAX )
      {
         if ( VAR__819283[VAR__53647] < VAR_9494 )
         {
            m1++;
            VAR_233 = VAR__53647;
         }

         if ( VAR__819283[VAR__53647] > VAR_9494 )
         {
            m2++;
            VAR_666 = VAR__53647;
         }
      }
   }


   if ( m1 > 0 )
   {
      printf("%d", VAR__819283[VAR_233]);
      for ( VAR__53647 = 1; VAR__53647 < m1; VAR__53647++ )
      {
         printf(",%d", VAR__819283[VAR_233]);
      }

      for ( VAR__53647 = 0; VAR__53647 < m2; VAR__53647++ )
      {
         printf(",%d", VAR__819283[VAR_666]);
      }
   }
   else
   {
      printf("%d", VAR__819283[VAR_666]);
      for ( VAR__53647 = 1; VAR__53647 < m2; VAR__53647++ )
      {
         printf(",d%", VAR__819283[VAR_666]);
      }
   }

   return 0;
}
