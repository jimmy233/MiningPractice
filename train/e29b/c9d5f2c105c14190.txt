int main()
{
   int    VAR_1238123;
   int    VAR__SUM;
   int    VAR__NUM = 0;
   int    VAR__53647;
   int    VAR__21230;
   int    VAR__8444594;
   int    VAR__819283[300];
   int    VAR__temp[300];
   double ave;
   double VAR__MAX = 0;
   double D_value;

   cin >> VAR_1238123;
   VAR__SUM = 0;
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      cin >> VAR__819283[VAR__53647];
      VAR__SUM += VAR__819283[VAR__53647];
   }

   ave = ((double)VAR__SUM ) / ((double)VAR_1238123 );
   for ( VAR__53647 = 0; VAR__53647 < ( VAR_1238123 - 1 ); VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 < (( VAR_1238123 - VAR__53647 ) - 1 ); VAR__21230++ )
      {
         if ( VAR__819283[VAR__53647] > VAR__819283[VAR__53647 + 1] )
         {
            VAR__8444594                = VAR__819283[VAR__53647];
            VAR__819283[VAR__53647]     = VAR__819283[VAR__53647 + 1];
            VAR__819283[VAR__53647 + 1] = VAR__8444594;
         }
      }
   }



   for ( VAR__53647 = 0; VAR__53647 <= ( VAR_1238123 / 2 ); VAR__53647++ )
   {
      for ( VAR__21230 = 1; VAR__21230 <= 2; VAR__21230++ )
      {
         if ( VAR__21230 == 1 )
         {
            D_value = fabs(((double)VAR__819283[VAR__53647] ) - ave);
         }
         else
         {
            D_value = ((double)VAR__819283[( VAR_1238123 - VAR__53647 ) - 1] ) - ave;
         }

         if ( D_value >= VAR__MAX )
         {
            if ( D_value > VAR__MAX )
            {
               VAR__NUM = 0;
               VAR__MAX = D_value;
            }

            VAR__NUM += 1;

            if ( VAR__21230 == 1 )
            {
               VAR__temp[VAR__NUM] = VAR__819283[VAR__53647];
            }
            else
            {
               VAR__temp[VAR__NUM] = VAR__819283[( VAR_1238123 - VAR__53647 ) - 1];
            }
         }
      }
   }

   cout << VAR__temp[1];
   for ( VAR__53647 = 2; VAR__53647 <= VAR__NUM; VAR__53647++ )
   {
      ( cout << ',' ) << VAR__temp[VAR__53647];
   }

   cout << endl;
   return 0;
}
