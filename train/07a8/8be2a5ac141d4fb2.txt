int main()
{
   for ( int VAR__9290 = 1; VAR__9290 <= 5; VAR__9290++ )
   {
      for ( int VAR_666 = 1; VAR_666 <= 5; VAR_666++ )
      {
         if ( VAR_666 != VAR__9290 )
         {
            for ( int VAR_9494 = 1; VAR_9494 <= 5; VAR_9494++ )
            {
               if (( VAR_9494 != VAR__9290 ) && ( VAR_9494 != VAR_666 ))
               {
                  for ( int VAR__1111 = 1; VAR__1111 <= 5; VAR__1111++ )
                  {
                     if (((((( VAR__1111 != VAR__9290 ) && ( VAR__1111 != VAR_666 )) && ( VAR__1111 != VAR_9494 )) && (( VAR__9290 + VAR_666 ) == ( VAR_9494 + VAR__1111 ))) && (( VAR__9290 + VAR__1111 ) > ( VAR_9494 + VAR_666 ))) && (( VAR__9290 + VAR_9494 ) < VAR_666 ))
                     {
                        int  N[4] = { VAR__9290, VAR_666, VAR_9494, VAR__1111 };
                        int  VAR__temp;
                        char M[5] = { 'z', 'q', 's', 'l', ' ' };
                        for ( int VAR__53647 = 0; VAR__53647 <= 3; VAR__53647++ )
                        {
                           for ( int VAR__21230 = VAR__53647 + 1; VAR__21230 <= 3; VAR__21230++ )
                           {
                              if ( N[VAR__21230] > N[VAR__53647] )
                              {
                                 VAR__temp     = N[VAR__53647];
                                 N[VAR__53647] = N[VAR__21230];
                                 N[VAR__21230] = VAR__temp;
                                 M[4]          = M[VAR__53647];
                                 M[VAR__53647] = M[VAR__21230];
                                 M[VAR__21230] = M[4];
                              }
                           }
                        }


                        ((( cout << M[0] ) << " " ) << ( 10 * N[0] )) << endl;
                        ((( cout << M[1] ) << " " ) << ( 10 * N[1] )) << endl;
                        ((( cout << M[2] ) << " " ) << ( 10 * N[2] )) << endl;
                        ((( cout << M[3] ) << " " ) << ( 10 * N[3] )) << endl;
                     }
                  }
               }
            }
         }
      }
   }



   return 0;
}
