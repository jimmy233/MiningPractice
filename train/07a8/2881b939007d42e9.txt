int main()
{
   void xu(int VAR__819283[], char VAR__19328[]);

   int  VAR__9290;
   int  VAR_666;
   int  VAR_9494;
   int  VAR__1111;
   int  number[4];
   char ming[4] = { 'z', 'q', 's', 'l' };
   for ( VAR__9290 = 10; VAR__9290 <= 50; VAR__9290 = VAR__9290 + 10 )
   {
      for ( VAR_666 = 10; VAR_666 <= 50; VAR_666 = VAR_666 + 10 )
      {
         for ( VAR_9494 = 10; VAR_9494 <= 50; VAR_9494 = VAR_9494 + 10 )
         {
            for ( VAR__1111 = 10; VAR__1111 <= 50; VAR__1111 = VAR__1111 + 10 )
            {
               if ((((((((( VAR__9290 != VAR_666 ) && ( VAR__9290 != VAR_9494 )) && ( VAR__9290 != VAR__1111 )) && ( VAR_666 != VAR_9494 )) && ( VAR_666 != VAR__1111 )) && ( VAR_9494 != VAR__1111 )) && (( VAR__9290 + VAR_666 ) == ( VAR_9494 + VAR__1111 ))) && (( VAR__9290 + VAR__1111 ) > ( VAR_9494 + VAR_666 ))) && (( VAR__9290 + VAR_9494 ) < VAR_666 ))
               {
                  number[0] = VAR__9290;
                  number[1] = VAR_666;
                  number[2] = VAR_9494;
                  number[3] = VAR__1111;
               }
            }
         }
      }
   }

   xu(number, ming);
   int VAR__53647;
   for ( VAR__53647 = 1; VAR__53647 <= 4; VAR__53647++ )
   {
      ((( cout << ming[VAR__53647 - 1] ) << ' ' ) << number[VAR__53647 - 1] ) << endl;
   }

   return 0;
}


void xu(int VAR__819283[], char VAR__19328[])
{
   int  VAR__53647;
   int  VAR__21230;
   int  VAR__temp;
   char VAR__4857423;

   for ( VAR__53647 = 1; VAR__53647 <= 4; VAR__53647++ )
   {
      for ( VAR__21230 = 1; VAR__21230 <= ( 4 - VAR__53647 ); VAR__21230++ )
      {
         if ( VAR__819283[VAR__21230 - 1] < VAR__819283[VAR__21230] )
         {
            VAR__temp = VAR__819283[VAR__21230];
            VAR__819283[VAR__21230]     = VAR__819283[VAR__21230 - 1];
            VAR__819283[VAR__21230 - 1] = VAR__temp;
            VAR__4857423               = VAR__19328[VAR__21230];
            VAR__19328[VAR__21230]     = VAR__19328[VAR__21230 - 1];
            VAR__19328[VAR__21230 - 1] = VAR__4857423;
         }
      }
   }
}
