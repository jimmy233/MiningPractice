int main()
{
   double VAR__819283;
   double VAR__19328;
   double VAR__4857423;
   double x1;
   double x2;
   double VAR__53647;
   int    cases;

   cin >> cases;
   for ( int VAR__21230 = 0; VAR__21230 < cases; VAR__21230++ )
   {
      (( cin >> VAR__819283 ) >> VAR__19328 ) >> VAR__4857423;

      if ((( VAR__19328 * VAR__19328 ) - (( 4 * VAR__819283 ) * VAR__4857423 )) > 0 )
      {
         if ( VAR__19328 == 0 )
         {
            x1 = sqrt(0 - (( 4 * VAR__819283 ) * VAR__4857423 )) / ( 2 * VAR__819283 );
            x2 = ( 0 - sqrt(0 - (( 4 * VAR__819283 ) * VAR__4857423 ))) / ( 2 * VAR__819283 );
         }
         else
         {
            x1 = (( -VAR__19328 ) + sqrt(( VAR__19328 * VAR__19328 ) - (( 4 * VAR__819283 ) * VAR__4857423 ))) / ( 2 * VAR__819283 );
            x2 = (( -VAR__19328 ) - sqrt(( VAR__19328 * VAR__19328 ) - (( 4 * VAR__819283 ) * VAR__4857423 ))) / ( 2 * VAR__819283 );
         }

         (((((( cout << fixed ) << setprecision(5)) << "x1=" ) << x1 ) << ";x2=" ) << x2 ) << endl;
      }

      if ((( VAR__19328 * VAR__19328 ) - (( 4 * VAR__819283 ) * VAR__4857423 )) == 0 )
      {
         if ( VAR__19328 == 0 )
         {
            x1 = 0.0;
         }
         else
         {
            x1 = ( -VAR__19328 ) / ( 2 * VAR__819283 );
         }

         (((( cout << fixed ) << setprecision(5)) << "x1=x2=" ) << x1 ) << endl;
      }

      if ((( VAR__19328 * VAR__19328 ) - (( 4 * VAR__819283 ) * VAR__4857423 )) < 0 )
      {
         if ( VAR__19328 == 0 )
         {
            x1         = 0.0;
            VAR__53647 = sqrt(( 4 * VAR__819283 ) * VAR__4857423) / ( 2 * VAR__819283 );
         }
         else
         {
            x1         = ( -VAR__19328 ) / ( 2 * VAR__819283 );
            VAR__53647 = sqrt((( 4 * VAR__819283 ) * VAR__4857423 ) - ( VAR__19328 * VAR__19328 )) / ( 2 * VAR__819283 );
         }

         ((((((((((( cout << fixed ) << setprecision(5)) << "x1=" ) << x1 ) << "+" ) << VAR__53647 ) << "i;x2=" ) << x1 ) << "-" ) << VAR__53647 ) << "i" ) << endl;
      }
   }

   return 0;
}
