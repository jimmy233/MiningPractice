void find(char target[])
{
   int  VAR__COUNT = 0;
   int  VAR__53647;
   int  VAR__21230;
   int  VAR__8444594;
   int  VAR_FLAG;
   char change[500];

   for ( VAR__53647 = 0; VAR__53647 <= 500; VAR__53647++ )
   {
      if ( target[VAR__53647] != '\0' )
      {
         VAR__COUNT++;
      }
      else
      {
         break;
      }
   }

   for ( VAR__53647 = 2; VAR__53647 <= VAR__COUNT; VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 <= ( VAR__COUNT - VAR__53647 ); VAR__21230++ )
      {
         VAR_FLAG = 1;
         for ( VAR__8444594 = VAR__21230; VAR__8444594 <= (( VAR__21230 + VAR__53647 ) - 1 ); VAR__8444594++ )
         {
            change[VAR__8444594] = target[VAR__8444594];
         }

         for ( VAR__8444594 = 0; VAR__8444594 <= (( VAR__53647 / 2 ) - 1 ); VAR__8444594++ )
         {
            change[VAR__21230 + VAR__8444594] = target[(( VAR__21230 + VAR__53647 ) - 1 ) - VAR__8444594];
            change[(( VAR__21230 + VAR__53647 ) - 1 ) - VAR__8444594] = target[VAR__21230 + VAR__8444594];
         }

         for ( VAR__8444594 = 0; VAR__8444594 < ( VAR__53647 - 1 ); VAR__8444594++ )
         {
            if ( change[VAR__21230 + VAR__8444594] != target[VAR__21230 + VAR__8444594] )
            {
               VAR_FLAG = 0;
            }
         }

         if ( VAR_FLAG == 1 )
         {
            for ( VAR__8444594 = VAR__21230; VAR__8444594 <= (( VAR__21230 + VAR__53647 ) - 1 ); VAR__8444594++ )
            {
               cout << target[VAR__8444594];
            }

            cout << endl;
         }
      }
   }
}


int main()
{
   char target[500];

   cin.getline(target, 500);
   find(target);
   return 0;
}
