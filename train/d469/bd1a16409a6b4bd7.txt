void pause()
{
   int VAR_1238123;

   scanf("%d", &VAR_1238123);
}


void find_huiwen(char *A_STRING, int LEN_OF_STH, int VAR_1238123)
{
   void reverse(char *huiwen, char *rev, int geshu);

   char *huiwen;
   huiwen = (char *)malloc(( LEN_OF_STH + 1 ) * ( sizeof( char )));
   char *rev;
   rev = (char *)malloc(( LEN_OF_STH + 1 ) * ( sizeof( char )));
   int VAR__53647;
   int VAR__21230;
   for ( VAR__53647 = 0; VAR__53647 <= ( VAR_1238123 - LEN_OF_STH ); VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 <= ( LEN_OF_STH - 1 ); VAR__21230++ )
      {
         huiwen[VAR__21230] = *(( A_STRING + VAR__53647 ) + VAR__21230 );
      }

      huiwen[LEN_OF_STH] = '\0';
      reverse(huiwen, rev, LEN_OF_STH);

      if ( strcmp(rev, huiwen) == 0 )
      {
         printf("%s\n", huiwen);
      }
   }
}


void reverse(char *huiwen, char *rev, int geshu)
{
   int VAR__21230;

   for ( VAR__21230 = 0; VAR__21230 <= geshu; VAR__21230++ )
   {
      rev[VAR__21230] = huiwen[( geshu - 1 ) - VAR__21230];
   }

   rev[geshu] = '\0';
}


int main()
{
   char A_STRING[500];
   int  VAR_1238123;

   scanf("%s", A_STRING);
   VAR_1238123 = strlen(A_STRING);
   int VAR__53647;
   for ( VAR__53647 = 2; VAR__53647 <= VAR_1238123; VAR__53647++ )
   {
      find_huiwen(A_STRING, VAR__53647, VAR_1238123);
   }

   pause();
   return 0;
}
