struct hospital
{
   char ID[11];
   int  age;
}
old[100];
struct hospital
{
   char ID[11];
   int  age;
}
young[100];
struct hospital
{
   char ID[11];
   int  age;
}
all[100];
struct hospital
{
   char ID[11];
   int  age;
}
VAR__TEMP;
void sequence(struct hospital matrix[], int VAR_1238123)
{
   int VAR__53647;
   int VAR__21230;

   for ( VAR__53647 = 0; VAR__53647 < ( VAR_1238123 - 1 ); VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 < (( VAR_1238123 - 1 ) - VAR__53647 ); VAR__21230++ )
      {
         if ( matrix[VAR__21230].age < matrix[VAR__21230 + 1].age )
         {
            VAR__TEMP              = matrix[VAR__21230];
            matrix[VAR__21230]     = matrix[VAR__21230 + 1];
            matrix[VAR__21230 + 1] = VAR__TEMP;
         }
      }
   }
}


int main()
{
   int VAR_1238123;

   scanf("%d", &VAR_1238123);
   int VAR__53647;
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      scanf("%s %d", all[VAR__53647].ID, &all[VAR__53647].age);
   }

   int oi = 0;
   int yi = 0;
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      if ( all[VAR__53647].age >= 60 )
      {
         old[oi] = all[VAR__53647];
         oi++;
      }
      else
      {
         young[yi] = all[VAR__53647];
         yi++;
      }
   }

   sequence(old, oi);
   for ( VAR__53647 = 0; VAR__53647 < oi; VAR__53647++ )
   {
      printf("%s\n", old[VAR__53647].ID);
   }

   for ( VAR__53647 = 0; VAR__53647 < yi; VAR__53647++ )
   {
      printf("%s\n", young[VAR__53647].ID);
   }

   return 0;
}
