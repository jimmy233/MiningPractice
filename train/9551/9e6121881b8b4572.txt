struct patient
{
   char           id[20];
   int            age;
   struct patient *VAR__NEXT;
};
void main()
{
   struct patient *VAR__HEAD;
   struct patient *ANOTHER_POINTER;
   struct patient *YET_ANOTHER_POINTER;
   struct patient *p0;
   int            VAR__53647;
   int            VAR_1238123;

   scanf("%d", &VAR_1238123);
   ANOTHER_POINTER = ( YET_ANOTHER_POINTER = (struct patient *)malloc(LEN));
   VAR__HEAD       = NULL;
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      scanf("%s %d", &ANOTHER_POINTER->id, &ANOTHER_POINTER->age);
      ANOTHER_POINTER->VAR__NEXT = NULL;

      if ( VAR__53647 == 0 )
      {
         VAR__HEAD = ANOTHER_POINTER;
      }
      else
      {
         if (( ANOTHER_POINTER->age > 60 ) && ( ANOTHER_POINTER->age > VAR__HEAD->age ))
         {
            p0 = VAR__HEAD;
            ANOTHER_POINTER->VAR__NEXT = p0;
            VAR__HEAD = ANOTHER_POINTER;
         }
         else
         {
            p0 = VAR__HEAD;
            YET_ANOTHER_POINTER = VAR__HEAD->VAR__NEXT;

            if ( ANOTHER_POINTER->age < 60 )
            {
               while ( YET_ANOTHER_POINTER != NULL )
               {
                  p0 = YET_ANOTHER_POINTER;
                  YET_ANOTHER_POINTER = YET_ANOTHER_POINTER->VAR__NEXT;
               }

               p0->VAR__NEXT = ANOTHER_POINTER;
            }
            else
            {
               while (( YET_ANOTHER_POINTER != NULL ) && ( ANOTHER_POINTER->age <= YET_ANOTHER_POINTER->age ))
               {
                  p0 = YET_ANOTHER_POINTER;
                  YET_ANOTHER_POINTER = YET_ANOTHER_POINTER->VAR__NEXT;
               }

               p0->VAR__NEXT = ANOTHER_POINTER;
               ANOTHER_POINTER->VAR__NEXT = YET_ANOTHER_POINTER;
            }
         }
      }

      ANOTHER_POINTER = (struct patient *)malloc(LEN);
   }

   ANOTHER_POINTER = VAR__HEAD;
   for ( VAR__53647 = 0; VAR__53647 < ( VAR_1238123 - 1 ); VAR__53647++ )
   {
      printf("%s\n", ANOTHER_POINTER->id);
      ANOTHER_POINTER = ANOTHER_POINTER->VAR__NEXT;
   }

   printf("%s", ANOTHER_POINTER->id);
}
