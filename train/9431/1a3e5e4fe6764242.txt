struct student
{
   char           name[32];
   char           sex;
   char           address[32];
   char           id[10];
   char           score[10];
   int            age;
   struct student *VAR__NEXT;
};
struct student *create()
{
   struct student *VAR__HEAD = NULL;
   struct student *ANOTHER_POINTER;
   struct student *YET_ANOTHER_POINTER;
   char           ch[10];

   ANOTHER_POINTER = ( YET_ANOTHER_POINTER = (struct student *)malloc(Len));
   scanf("%s %s %c %d %s %s", ANOTHER_POINTER->id, ANOTHER_POINTER->name, &ANOTHER_POINTER->sex, &ANOTHER_POINTER->age, ANOTHER_POINTER->score, ANOTHER_POINTER->address);
   ANOTHER_POINTER->VAR__NEXT = NULL;
   VAR__HEAD           = ANOTHER_POINTER;
   YET_ANOTHER_POINTER = ANOTHER_POINTER;
   do
   {
      scanf("%s", ch);

      if ( strcmp(ch, "end") == 0 )
      {
         break;
      }
      else
      {
         ANOTHER_POINTER = (struct student *)malloc(Len);
         strcpy(ANOTHER_POINTER->id, ch);
         scanf("%s %c %d %s %s", ANOTHER_POINTER->name, &ANOTHER_POINTER->sex, &ANOTHER_POINTER->age, ANOTHER_POINTER->score, ANOTHER_POINTER->address);
         ANOTHER_POINTER->VAR__NEXT     = NULL;
         YET_ANOTHER_POINTER->VAR__NEXT = ANOTHER_POINTER;
         YET_ANOTHER_POINTER            = ANOTHER_POINTER;
      }
   } while ( 1 );
   return VAR__HEAD;
}


void print(struct student *VAR__HEAD)
{
   struct student *ANOTHER_POINTER;
   struct student *YET_ANOTHER_POINTER;

   while ( ANOTHER_POINTER )
   {
      ANOTHER_POINTER = VAR__HEAD;

      if ( ANOTHER_POINTER->VAR__NEXT == NULL )
      {
         printf("%s %s %c %d %s %s", ANOTHER_POINTER->id, ANOTHER_POINTER->name, ANOTHER_POINTER->sex, ANOTHER_POINTER->age, ANOTHER_POINTER->score, ANOTHER_POINTER->address);
         break;
      }
      else
      {
         while ( ANOTHER_POINTER->VAR__NEXT != NULL )
         {
            YET_ANOTHER_POINTER = ANOTHER_POINTER;
            ANOTHER_POINTER     = ANOTHER_POINTER->VAR__NEXT;
         }

         printf("%s %s %c %d %s %s\n", ANOTHER_POINTER->id, ANOTHER_POINTER->name, ANOTHER_POINTER->sex, ANOTHER_POINTER->age, ANOTHER_POINTER->score, ANOTHER_POINTER->address);
         YET_ANOTHER_POINTER->VAR__NEXT = NULL;
         free(ANOTHER_POINTER);
      }
   }
}


int main()
{
   struct student *VAR__HEAD;

   VAR__HEAD = create();
   print(VAR__HEAD);
}
