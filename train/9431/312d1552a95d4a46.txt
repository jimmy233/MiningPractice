struct stu
{
   char       xinxi[100];
   struct stu *VAR__NEXT;
};
void main()
{
   int        LEN_OF_STH = 1;
   int        VAR__53647;
   struct stu *ANOTHER_POINTER;
   struct stu *YET_ANOTHER_POINTER;
   struct stu *VAR__HEAD;
   struct stu *new1;
   struct stu *newhead;

   ANOTHER_POINTER = ( YET_ANOTHER_POINTER = ( VAR__HEAD = (struct stu *)malloc(sizeof( struct stu ))));
   gets(ANOTHER_POINTER->xinxi);

   while ( strcmp(ANOTHER_POINTER->xinxi, "end") != 0 )
   {
      ANOTHER_POINTER = (struct stu *)malloc(sizeof( struct stu ));
      gets(ANOTHER_POINTER->xinxi);

      if ( strcmp(ANOTHER_POINTER->xinxi, "end") == 0 )
      {
         YET_ANOTHER_POINTER->VAR__NEXT = NULL;
      }
      else
      {
         YET_ANOTHER_POINTER->VAR__NEXT = ANOTHER_POINTER;
         YET_ANOTHER_POINTER            = ANOTHER_POINTER;
         LEN_OF_STH++;
      }
   }

   ANOTHER_POINTER = VAR__HEAD;
   for ( VAR__53647 = 0; VAR__53647 < LEN_OF_STH; VAR__53647++ )
   {
      YET_ANOTHER_POINTER = ( ANOTHER_POINTER = VAR__HEAD );

      while ( ANOTHER_POINTER->VAR__NEXT != '\0' )
      {
         YET_ANOTHER_POINTER = ANOTHER_POINTER;
         ANOTHER_POINTER     = ANOTHER_POINTER->VAR__NEXT;
      }

      if ( VAR__53647 == 0 )
      {
         newhead = ( new1 = ANOTHER_POINTER );
      }
      else
      {
         new1 = ( new1->VAR__NEXT = ANOTHER_POINTER );
      }

      YET_ANOTHER_POINTER->VAR__NEXT = NULL;
   }

   ANOTHER_POINTER = newhead;
   for ( VAR__53647 = 0; VAR__53647 < LEN_OF_STH; VAR__53647++ )
   {
      printf("%s\n", ANOTHER_POINTER->xinxi);
      ANOTHER_POINTER = ANOTHER_POINTER->VAR__NEXT;
   }
}
