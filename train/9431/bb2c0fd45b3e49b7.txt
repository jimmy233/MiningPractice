typedef struct linknode
{
   char            inf[500];
   struct linknode *VAR__NEXT;
   struct linknode *prev;
} snode;
typedef struct linknode
{
   char            inf[500];
   struct linknode *VAR__NEXT;
   struct linknode *prev;
} *A_POINTER;
int main()
{
   int VAR__53647;
   int a1;
   int a2;
   int VAR__21230;
   int VAR__MIN;
   int VAR__8444594;
   ptr VAR__HEAD;
   ptr ANOTHER_POINTER;
   ptr YET_ANOTHER_POINTER;
   ptr p3;

   VAR__8444594 = 0;
   for ( VAR__53647 = 1; VAR__53647 <= 5; VAR__53647 )
   {
      ANOTHER_POINTER = (ptr)malloc(sizeof( snode ));

      if ( VAR__8444594 == 0 )
      {
         VAR__HEAD           = ANOTHER_POINTER;
         YET_ANOTHER_POINTER = ANOTHER_POINTER;
      }
      else
      {
         ( *YET_ANOTHER_POINTER ).VAR__NEXT = ANOTHER_POINTER;
         ( *ANOTHER_POINTER ).prev          = YET_ANOTHER_POINTER;
      }

      gets(( *ANOTHER_POINTER ).inf);

      if (( *ANOTHER_POINTER ).inf[0] != 'e' )
      {
         YET_ANOTHER_POINTER = ANOTHER_POINTER;
         VAR__8444594++;
      }
      else
      {
         ANOTHER_POINTER = YET_ANOTHER_POINTER;
         VAR__53647      = 6;
      }
   }

   for ( VAR__53647 = 1; VAR__53647 <= VAR__8444594; VAR__53647++ )
   {
      printf("%s\n", ( *ANOTHER_POINTER ).inf);

      if ( VAR__53647 != VAR__8444594 )
      {
         ANOTHER_POINTER = ( *ANOTHER_POINTER ).prev;
      }
   }
}
