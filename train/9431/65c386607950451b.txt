struct student
{
   struct student *VAR__NEXT;
   char           VAR__819283[100];
};
int VAR_1238123;
struct student *creat()
{
   struct student *ANOTHER_POINTER;
   struct student *YET_ANOTHER_POINTER;
   struct student *VAR__HEAD;

   VAR_1238123     = 0;
   ANOTHER_POINTER = (struct student *)malloc(sizeof( struct student ));
   gets(ANOTHER_POINTER->VAR__819283);
   YET_ANOTHER_POINTER = ANOTHER_POINTER;
   VAR__HEAD           = NULL;

   while ( strcmp(ANOTHER_POINTER->VAR__819283, "end") != 0 )
   {
      VAR_1238123 = VAR_1238123 + 1;

      if ( VAR_1238123 == 1 )
      {
         VAR__HEAD = ANOTHER_POINTER;
      }
      else
      {
         YET_ANOTHER_POINTER->VAR__NEXT = ANOTHER_POINTER;
      }

      YET_ANOTHER_POINTER = ANOTHER_POINTER;
      ANOTHER_POINTER     = (struct student *)malloc(sizeof( struct student ));
      gets(ANOTHER_POINTER->VAR__819283);
   }

   YET_ANOTHER_POINTER->VAR__NEXT = NULL;
   return VAR__HEAD;
}


void main()
{
   struct student *ANOTHER_POINTER;
   struct student *VAR__HEAD;
   struct student *YET_ANOTHER_POINTER;

   VAR__HEAD       = creat();
   ANOTHER_POINTER = VAR__HEAD;

   while ( 1 )
   {
      if ( ANOTHER_POINTER->VAR__NEXT != NULL )
      {
         YET_ANOTHER_POINTER = ANOTHER_POINTER;
         ANOTHER_POINTER     = ANOTHER_POINTER->VAR__NEXT;
      }

      if (( ANOTHER_POINTER->VAR__NEXT == NULL ) && ( YET_ANOTHER_POINTER != VAR__HEAD ))
      {
         printf("%s\n", ANOTHER_POINTER->VAR__819283);
         YET_ANOTHER_POINTER->VAR__NEXT = NULL;
         ANOTHER_POINTER = VAR__HEAD;
      }

      if (( ANOTHER_POINTER->VAR__NEXT == NULL ) && ( YET_ANOTHER_POINTER == VAR__HEAD ))
      {
         break;
      }
   }

   printf("%s\n%s", ANOTHER_POINTER->VAR__819283, VAR__HEAD->VAR__819283);
}
