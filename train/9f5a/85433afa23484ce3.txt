int main()
{
   int row;
   int col;
   int matrix[120][120];

   ( cin >> row ) >> col;
   int *VAR_233[100];
   for ( int VAR__53647 = 0; VAR__53647 < row; VAR__53647++ )
   {
      VAR_233[VAR__53647] = &matrix[VAR__53647][0];
      for ( int VAR__21230 = 0; VAR__21230 < col; VAR__21230++ )
      {
         cin >> matrix[VAR__53647][VAR__21230];
      }
   }

   if ( col >= row )
   {
      for ( int VAR__53647 = 0; VAR__53647 < col; VAR__53647++ )
      {
         for ( int VAR__21230 = 0; ((( VAR__53647 - VAR__21230 ) < col ) && (( VAR__53647 - VAR__21230 ) >= 0 )) && ( VAR__21230 < row ); VAR__21230++ )
         {
            ( cout << ( *(( VAR_233[VAR__21230] + VAR__53647 ) - VAR__21230 ))) << endl;
         }
      }

      for ( int VAR__53647 = col; VAR__53647 < (( col + row ) - 1 ); VAR__53647++ )
      {
         for ( int VAR__21230 = col - 1; ( VAR__53647 - VAR__21230 ) < row; VAR__21230-- )
         {
            ( cout << ( *( VAR_233[VAR__53647 - VAR__21230] + VAR__21230 ))) << endl;
         }
      }
   }
   else
   {
      for ( int VAR__53647 = 0; VAR__53647 < col; VAR__53647++ )
      {
         for ( int VAR__21230 = 0; ((( VAR__53647 - VAR__21230 ) < col ) && (( VAR__53647 - VAR__21230 ) >= 0 )) && ( VAR__21230 < row ); VAR__21230++ )
         {
            ( cout << ( *(( VAR_233[VAR__21230] + VAR__53647 ) - VAR__21230 ))) << endl;
         }
      }

      for ( int VAR__53647 = col; VAR__53647 < (( col + row ) - 1 ); VAR__53647++ )
      {
         for ( int VAR__21230 = col - 1; (( VAR__53647 - VAR__21230 ) < row ) && ( VAR__21230 >= 0 ); VAR__21230-- )
         {
            ( cout << ( *( VAR_233[VAR__53647 - VAR__21230] + VAR__21230 ))) << endl;
         }
      }
   }
}
