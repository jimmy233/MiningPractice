int matrix[100][100];
int row;
int col;
void display(int step)
{
   int VAR__7685;
   int VAR__3918907;
   int VAR__53647;

   if ( step > (( row + col ) - 1 ))
   {
      return;
   }

   if ( step < col )
   {
      VAR__3918907 = step - 1;
      for ( VAR__53647 = VAR__3918907; ( VAR__53647 >= 0 ) && (( VAR__3918907 - VAR__53647 ) < row ); VAR__53647-- )
      {
         ( cout << matrix[VAR__3918907 - VAR__53647][VAR__53647] ) << endl;
      }
   }
   else
   {
      VAR__7685 = step - col;
      for ( VAR__53647 = VAR__7685; ( VAR__53647 < row ) && (((( col - 1 ) + VAR__7685 ) - VAR__53647 ) >= 0 ); VAR__53647++ )
      {
         ( cout << matrix[VAR__53647][(( col - 1 ) + VAR__7685 ) - VAR__53647] ) << endl;
      }
   }

   display(step + 1);
}


int main()
{
   int VAR__53647;
   int VAR__21230;

   ( cin >> row ) >> col;
   for ( VAR__53647 = 0; VAR__53647 < row; VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 < col; VAR__21230++ )
      {
         cin >> ( *(( *( matrix + VAR__53647 )) + VAR__21230 ));
      }
   }


   display(1);
}
