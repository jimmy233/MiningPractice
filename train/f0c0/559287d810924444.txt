int main()
{
   int  A;
   int  B;
   int  C;
   int  D;
   int  E;
   int  VAR__53647;
   int  VAR__21230;
   int  VAR__8444594;
   int  VAR__1238129;
   int  VAR__1111;
   int  VAR_233;
   char ci[6];
   char T[6];

   for ( VAR__53647 = 1; VAR__53647 <= 5; VAR__53647++ )
   {
      A = VAR__53647;
      ci[VAR__53647] = 'A';
      for ( VAR__21230 = 1; VAR__21230 <= 5; VAR__21230++ )
      {
         if ( A != VAR__21230 )
         {
            B = VAR__21230;
            ci[VAR__21230] = 'B';
            for ( VAR__8444594 = 1; VAR__8444594 <= 5; VAR__8444594++ )
            {
               if (( A != VAR__8444594 ) && ( B != VAR__8444594 ))
               {
                  C = VAR__8444594;
                  ci[VAR__8444594] = 'C';
                  for ( VAR__1238129 = 1; VAR__1238129 <= 5; VAR__1238129++ )
                  {
                     if ((( VAR__1238129 != A ) && ( VAR__1238129 != B )) && ( VAR__1238129 != C ))
                     {
                        D = VAR__1238129;
                        ci[VAR__1238129] = 'D';
                        for ( VAR__1111 = 1; VAR__1111 <= 5; VAR__1111++ )
                        {
                           if (((((( VAR__1111 != A ) && ( VAR__1111 != B )) && ( VAR__1111 != C )) && ( VAR__1111 != D )) && ( VAR__1111 != 2 )) && ( VAR__1111 != 3 ))
                           {
                              E             = VAR__1111;
                              ci[VAR__1111] = 'E';
                              T[1]          = E == 1;
                              T[2]          = B == 2;
                              T[3]          = A == 5;
                              T[4]          = C != 1;
                              T[5]          = D == 1;

                              if ((((( T[( ci[1] - 'A' ) + 1] == 1 ) && ( T[( ci[2] - 'A' ) + 1] == 1 )) && ( T[( ci[3] - 'A' ) + 1] == 0 )) && ( T[( ci[4] - 'A' ) + 1] == 0 )) && ( T[( ci[5] - 'A' ) + 1] == 0 ))
                              {
                                 ((((((((( cout << A ) << ' ' ) << B ) << ' ' ) << C ) << ' ' ) << D ) << ' ' ) << E ) << endl;
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      }
   }

   return 0;
}
