struct info
{
   short int VAR__NUM;
   char      author[27];
};
int main()
{
   char findoutmax(struct info VAR__819283[], int VAR_1238123, int *pt);
   void detect(struct info VAR__19328[], char writter, int nn);

   char        figure;
   int         VAR__53647;
   int         n_book;
   int         VAR__MAX;
   int         *VAR_233;
   struct info book[999];
   scanf("%d", &n_book);
   for ( VAR__53647 = 0; VAR__53647 < n_book; VAR__53647++ )
   {
      scanf("%d %s", &book[VAR__53647].VAR__NUM, &book[VAR__53647].author);
   }

   VAR_233 = &VAR__MAX;
   figure  = findoutmax(book, n_book, VAR_233);
   printf("%c\n%d\n", figure, VAR__MAX);
   detect(book, figure, n_book);
   return 0;
}


char findoutmax(struct info VAR__819283[], int VAR_1238123, int *pt)
{
   int VAR__53647;
   int VAR__21230;
   int VAR__SUM[26] = { 0 };

   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__819283[VAR__53647].author[VAR__21230] != '\0'; VAR__21230++ )
      {
         switch ( VAR__819283[VAR__53647].author[VAR__21230] )
         {
         case 'A':
            VAR__SUM[0] = VAR__SUM[0] + 1;
            break;

         case 'B':
            VAR__SUM[1] = VAR__SUM[1] + 1;
            break;

         case 'C':
            VAR__SUM[2] = VAR__SUM[2] + 1;
            break;

         case 'D':
            VAR__SUM[3] = VAR__SUM[3] + 1;
            break;

         case 'E':
            VAR__SUM[4] = VAR__SUM[4] + 1;
            break;

         case 'F':
            VAR__SUM[5] = VAR__SUM[5] + 1;
            break;

         case 'G':
            VAR__SUM[6] = VAR__SUM[6] + 1;
            break;

         case 'H':
            VAR__SUM[7] = VAR__SUM[7] + 1;
            break;

         case 'I':
            VAR__SUM[8] = VAR__SUM[8] + 1;
            break;

         case 'J':
            VAR__SUM[9] = VAR__SUM[9] + 1;
            break;

         case 'K':
            VAR__SUM[10] = VAR__SUM[10] + 1;
            break;

         case 'L':
            VAR__SUM[11] = VAR__SUM[11] + 1;
            break;

         case 'M':
            VAR__SUM[12] = VAR__SUM[12] + 1;
            break;

         case 'N':
            VAR__SUM[13] = VAR__SUM[13] + 1;
            break;

         case 'O':
            VAR__SUM[14] = VAR__SUM[14] + 1;
            break;

         case 'P':
            VAR__SUM[15] = VAR__SUM[15] + 1;
            break;

         case 'Q':
            VAR__SUM[16] = VAR__SUM[16] + 1;
            break;

         case 'R':
            VAR__SUM[17] = VAR__SUM[17] + 1;
            break;

         case 'S':
            VAR__SUM[18] = VAR__SUM[18] + 1;
            break;

         case 'T':
            VAR__SUM[19] = VAR__SUM[19] + 1;
            break;

         case 'U':
            VAR__SUM[20] = VAR__SUM[20] + 1;
            break;

         case 'V':
            VAR__SUM[21] = VAR__SUM[21] + 1;
            break;

         case 'W':
            VAR__SUM[22] = VAR__SUM[22] + 1;
            break;

         case 'X':
            VAR__SUM[23] = VAR__SUM[23] + 1;
            break;

         case 'Y':
            VAR__SUM[24] = VAR__SUM[24] + 1;
            break;

         case 'Z':
            VAR__SUM[25] = VAR__SUM[25] + 1;
            break;
         }
      }
   }

   VAR__21230 = 0;
   for ( VAR__53647 = 1; VAR__53647 < 26; VAR__53647++ )
   {
      if ( VAR__SUM[VAR__21230] < VAR__SUM[VAR__53647] )
      {
         VAR__21230 = VAR__53647;
      }
   }

   *pt = VAR__SUM[VAR__21230];
   return 65 + VAR__21230;
}


void detect(struct info VAR__19328[], char writter, int nn)
{
   int VAR__53647;
   int VAR__21230;

   for ( VAR__53647 = 0; VAR__53647 < nn; VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__19328[VAR__53647].author[VAR__21230] != '\0'; VAR__21230++ )
      {
         if ( VAR__19328[VAR__53647].author[VAR__21230] == writter )
         {
            printf("%d\n", VAR__19328[VAR__53647].VAR__NUM);
         }
      }
   }
}
