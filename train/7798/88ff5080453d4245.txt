struct chs
{
   char zz[27];
   int  VAR__NUM;
}
cs[];
struct chs
{
   char zz[27];
   int  VAR__NUM;
}
*VAR_233;
int main()
{
   int VAR_1238123;

   scanf("%d", &VAR_1238123);
   struct chs *cs = (struct chs *)malloc(( sizeof( struct chs )) * VAR_1238123);
   for ( VAR_233 = cs; VAR_233 < ( cs + VAR_1238123 ); VAR_233++ )
   {
      scanf("%d%s", &VAR_233->VAR__NUM, VAR_233->zz);
   }

   int VAR__1111;
   int VAR__819283;
   int zm[26];
   int *VAR__9290;
   for ( VAR__9290 = zm; VAR__9290 < ( zm + 26 ); VAR__9290++ )
   {
      *VAR__9290 = 0;
   }

   char *VAR_666;
   for ( VAR_233 = cs; VAR_233 < ( cs + VAR_1238123 ); VAR_233++ )
   {
      VAR__1111 = strlen(VAR_233->zz);
      for ( VAR_666 = VAR_233->zz; ( *VAR_666 ) != '\0'; VAR_666++ )
      {
         VAR__819283 = (int)( *VAR_666 );
         ( *(( zm + VAR__819283 ) - 65 ))++;
      }
   }

   int VAR__MAX = 0;
   for ( VAR__9290 = zm; VAR__9290 < ( zm + 26 ); VAR__9290++ )
   {
      if (( *VAR__9290 ) > ( *( zm + VAR__MAX )))
      {
         VAR__MAX = VAR__9290 - zm;
      }
   }

   printf("%c\n%d\n", (char)( VAR__MAX + 65 ), *( zm + VAR__MAX ));
   for ( VAR_233 = cs; VAR_233 < ( cs + VAR_1238123 ); VAR_233++ )
   {
      VAR__1111 = strlen(VAR_233->zz);
      for ( VAR_666 = VAR_233->zz; ( *VAR_666 ) != '\0'; VAR_666++ )
      {
         VAR__819283 = (int)( *VAR_666 );

         if (( VAR__819283 - 65 ) == VAR__MAX )
         {
            printf("%d\n", VAR_233->VAR__NUM);
         }
      }
   }

   free(cs);
   return 0;
}
