struct book
{
   char        writer[32];
   int         id;
   struct book *VAR__NEXT;
};
struct book *create(int VAR__1238129)
{
   struct book *VAR__HEAD = NULL;
   struct book *ANOTHER_POINTER;
   struct book *YET_ANOTHER_POINTER;
   int         VAR__53647;

   ANOTHER_POINTER = ( YET_ANOTHER_POINTER = (struct book *)malloc(Len));
   scanf("%d %s", &ANOTHER_POINTER->id, ANOTHER_POINTER->writer);
   ANOTHER_POINTER->VAR__NEXT = NULL;
   VAR__HEAD           = ANOTHER_POINTER;
   YET_ANOTHER_POINTER = ANOTHER_POINTER;
   for ( VAR__53647 = 1; VAR__53647 < VAR__1238129; VAR__53647++ )
   {
      ANOTHER_POINTER = (struct book *)malloc(Len);
      scanf("%d %s", &ANOTHER_POINTER->id, ANOTHER_POINTER->writer);
      ANOTHER_POINTER->VAR__NEXT     = NULL;
      YET_ANOTHER_POINTER->VAR__NEXT = ANOTHER_POINTER;
      YET_ANOTHER_POINTER            = ANOTHER_POINTER;
   }

   return VAR__HEAD;
}


int main()
{
   struct book *VAR__HEAD;
   struct book *VAR_233;
   int         VAR__1238129;
   int         VAR__53647;
   int         *q1;
   int         *q2;
   int         VAR__21230;

   q1 = (int *)malloc(26 * ( sizeof( int * )));
   q2 = q1;
   for ( VAR__53647 = 0; VAR__53647 < 26; VAR__53647++ )
   {
      q1[VAR__53647] = 0;
   }

   q1 = q2;
   scanf("%d", &VAR__1238129);
   VAR__HEAD = create(VAR__1238129);
   VAR_233   = VAR__HEAD;
   for ( VAR__53647 = 0; VAR__53647 < VAR__1238129; VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR_233->writer[VAR__21230] != '\0'; VAR__21230++ )
      {
         q1[VAR_233->writer[VAR__21230] - 'A']++;
      }

      VAR_233 = VAR_233->VAR__NEXT;
   }

   q1 = q2;
   int  VAR__MAX = 0;
   char maxm     = 'A';
   for ( VAR__53647 = 0; VAR__53647 < 26; VAR__53647++ )
   {
      if ( VAR__MAX < q1[VAR__53647] )
      {
         VAR__MAX = q1[VAR__53647];
         maxm     = VAR__53647 + 'A';
      }
   }


   printf("%c\n%d", maxm, VAR__MAX);
   for ( VAR__53647 = 0, VAR_233 = VAR__HEAD; VAR__53647 < VAR__1238129; VAR__53647++, VAR_233 = VAR_233->VAR__NEXT )
   {
      for ( VAR__21230 = 0; VAR_233->writer[VAR__21230] != '\0'; VAR__21230++ )
      {
         if ( VAR_233->writer[VAR__21230] == maxm )
         {
            printf("\n%d", VAR_233->id);
         }
      }
   }
}
