struct shu
{
   int        VAR__NUM;
   char       VAR__819283[26];
   struct shu *VAR__NEXT;
};
int main()
{
   char       ma = 'A';
   struct shu *ANOTHER_POINTER;
   struct shu *YET_ANOTHER_POINTER;
   struct shu *VAR__HEAD;
   struct shu *VAR_233;
   int        cnt[128] = { 0 };
   int        VAR__53647;
   int        VAR__21230;
   int        VAR_1238123;
   int        VAR__1238129;

   scanf("%d", &VAR_1238123);
   ANOTHER_POINTER = ( YET_ANOTHER_POINTER = (struct shu *)malloc(VAR__1111));
   scanf("%d%s", &ANOTHER_POINTER->VAR__NUM, ANOTHER_POINTER->VAR__819283);
   VAR__1238129 = strlen(ANOTHER_POINTER->VAR__819283);
   for ( VAR__21230 = 0; VAR__21230 < VAR__1238129; VAR__21230++ )
   {
      if (( ++cnt[ANOTHER_POINTER->VAR__819283[VAR__21230]] ) > cnt[ma] )
      {
         ma = ANOTHER_POINTER->VAR__819283[VAR__21230];
      }
   }

   VAR__HEAD = NULL;
   for ( VAR__53647 = 1; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      if ( VAR__53647 == 1 )
      {
         VAR__HEAD = ANOTHER_POINTER;
      }
      else
      {
         YET_ANOTHER_POINTER->VAR__NEXT = ANOTHER_POINTER;
      }

      YET_ANOTHER_POINTER = ANOTHER_POINTER;
      ANOTHER_POINTER     = (struct shu *)malloc(VAR__1111);
      scanf("%d%s", &ANOTHER_POINTER->VAR__NUM, ANOTHER_POINTER->VAR__819283);
      VAR__1238129 = strlen(ANOTHER_POINTER->VAR__819283);
      for ( VAR__21230 = 0; VAR__21230 < VAR__1238129; VAR__21230++ )
      {
         if (( ++cnt[ANOTHER_POINTER->VAR__819283[VAR__21230]] ) > cnt[ma] )
         {
            ma = ANOTHER_POINTER->VAR__819283[VAR__21230];
         }
      }
   }

   YET_ANOTHER_POINTER->VAR__NEXT = ANOTHER_POINTER;
   YET_ANOTHER_POINTER            = ANOTHER_POINTER;
   YET_ANOTHER_POINTER->VAR__NEXT = NULL;
   VAR_233 = VAR__HEAD;
   printf("%c\n%d\n", ma, cnt[ma]);

   while ( VAR_233 != NULL )
   {
      VAR__1238129 = strlen(VAR_233->VAR__819283);
      for ( VAR__53647 = 0; VAR__53647 < VAR__1238129; VAR__53647++ )
      {
         if ( VAR_233->VAR__819283[VAR__53647] == ma )
         {
            printf("%d\n", VAR_233->VAR__NUM);
            break;
         }
      }

      VAR_233 = VAR_233->VAR__NEXT;
   }

   return 0;
}
