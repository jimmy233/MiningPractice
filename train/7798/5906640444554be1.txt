struct book
{
   int  VAR__NUM;
   char writer[27];
};
void main()
{
   struct book *VAR_233;
   struct book *VAR__HEAD;
   int         VAR_1238123;
   int         VAR__53647;
   int         VAR__21230;
   int         VAR__MAX;
   int         maxi;
   int         VAR__1111[26] = { 0 };
   int         lnum[999];

   void VAR__COUNT(int *VAR__1111, struct book *VAR_233, int lnum);
   int read(struct book *VAR_233);

   scanf("%d", &VAR_1238123);
   VAR__HEAD = ( VAR_233 = (struct book *)calloc(VAR_1238123, sizeof( struct book )));
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++, VAR_233++ )
   {
      lnum[VAR__53647] = read(VAR_233);
   }

   VAR_233 = VAR__HEAD;
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      VAR__COUNT(VAR__1111, VAR_233, lnum[VAR__53647]);
      VAR_233++;
   }

   VAR__MAX = VAR__1111[0];
   maxi     = 0;
   for ( VAR__53647 = 1; VAR__53647 < 26; VAR__53647++ )
   {
      if ( VAR__MAX < VAR__1111[VAR__53647] )
      {
         VAR__MAX = VAR__1111[VAR__53647];
         maxi     = VAR__53647;
      }
   }

   printf("%c\n", 65 + maxi);
   printf("%d\n", VAR__MAX);
   VAR_233 = VAR__HEAD;
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 < lnum[VAR__53647]; VAR__21230++ )
      {
         if ( VAR_233->writer[VAR__21230] == ( 65 + maxi ))
         {
            printf("%d\n", VAR_233->VAR__NUM);
            break;
         }
      }

      VAR_233++;
   }
}


int read(struct book *VAR_233)
{
   int  VAR__53647 = 0;
   char VAR__12302;

   scanf("%d", &VAR_233->VAR__NUM);
   VAR__12302 = getchar();
   VAR__12302 = getchar();
   do
   {
      VAR_233->writer[VAR__53647] = VAR__12302;
      VAR__53647++;
   } while (( VAR__12302 = getchar()) != '\n' );
   return VAR__53647;
}


void VAR__COUNT(int *VAR__1111, struct book *VAR_233, int lnum)
{
   int VAR__53647;

   for ( VAR__53647 = 0; VAR__53647 < lnum; VAR__53647++ )
   {
      switch ( VAR_233->writer[VAR__53647] )
      {
      case 'A':
         VAR__1111[0]++;
         break;

      case 'B':
         VAR__1111[1]++;
         break;

      case 'C':
         VAR__1111[2]++;
         break;

      case 'D':
         VAR__1111[3]++;
         break;

      case 'E':
         VAR__1111[4]++;
         break;

      case 'F':
         VAR__1111[5]++;
         break;

      case 'G':
         VAR__1111[6]++;
         break;

      case 'H':
         VAR__1111[7]++;
         break;

      case 'I':
         VAR__1111[8]++;
         break;

      case 'J':
         VAR__1111[9]++;
         break;

      case 'K':
         VAR__1111[10]++;
         break;

      case 'L':
         VAR__1111[11]++;
         break;

      case 'M':
         VAR__1111[12]++;
         break;

      case 'N':
         VAR__1111[13]++;
         break;

      case 'O':
         VAR__1111[14]++;
         break;

      case 'P':
         VAR__1111[15]++;
         break;

      case 'Q':
         VAR__1111[16]++;
         break;

      case 'R':
         VAR__1111[17]++;
         break;

      case 'S':
         VAR__1111[18]++;
         break;

      case 'T':
         VAR__1111[19]++;
         break;

      case 'U':
         VAR__1111[20]++;
         break;

      case 'V':
         VAR__1111[21]++;
         break;

      case 'W':
         VAR__1111[22]++;
         break;

      case 'X':
         VAR__1111[23]++;
         break;

      case 'Y':
         VAR__1111[24]++;
         break;

      case 'Z':
         VAR__1111[25]++;
         break;
      }
   }
}
