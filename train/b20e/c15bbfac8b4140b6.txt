int Max(int VAR__7685, int VAR__3918907)
{
   return ( VAR__7685 > VAR__3918907 ) ? ( VAR__7685 ) : ( VAR__3918907 );
}


int cmp(const void *VAR__819283, const void *VAR__19328)
{
   return ( *((int *)VAR__19328 )) - ( *((int *)VAR__819283 ));
}


int main()
{
   int VAR__53647;
   int VAR__21230;
   int VAR_1238123;

   for ( ; ; )
   {
      scanf("%d", &VAR_1238123);

      if ( VAR_1238123 == 0 )
      {
         break;
      }

      int VAR__temp[VAR_1238123];
      int VAR_666[VAR_1238123];
      int VAR__12302[VAR_1238123 + 1][VAR_1238123 + 1];
      memset(VAR__12302, 0, sizeof( VAR__12302 ));
      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         scanf("%d", &VAR__temp[VAR__53647]);
      }

      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         scanf("%d", &VAR_666[VAR__53647]);
      }

      qsort(VAR__temp, VAR_1238123, sizeof( VAR__temp[0] ), cmp);
      qsort(VAR_666, VAR_1238123, sizeof( VAR_666[0] ), cmp);
      for ( VAR__53647 = 1; VAR__53647 <= VAR_1238123; VAR__53647++ )
      {
         for ( VAR__21230 = VAR__53647; VAR__21230 <= VAR_1238123; VAR__21230++ )
         {
            if ( VAR__temp[VAR__53647 - 1] == VAR_666[VAR__21230 - 1] )
            {
               VAR__12302[VAR__53647][VAR__21230] = VAR__12302[VAR__53647 - 1][VAR__21230 - 1];
            }
            else
            if ( VAR__temp[VAR__53647 - 1] > VAR_666[VAR__21230 - 1] )
            {
               VAR__12302[VAR__53647][VAR__21230] = VAR__12302[VAR__53647 - 1][VAR__21230 - 1] + 1;
            }
            else
            {
               VAR__12302[VAR__53647][VAR__21230] = VAR__12302[VAR__53647 - 1][VAR__21230 - 1] - 1;
            }


            VAR__12302[VAR__53647][VAR__21230] = Max(VAR__12302[VAR__53647][VAR__21230], VAR__12302[VAR__53647 - 1][VAR__21230] - 1);
         }
      }


      printf("%d\n", VAR__12302[VAR_1238123][VAR_1238123] * 200);
   }
}
