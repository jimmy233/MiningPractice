int compare(const void *elem1, const void *elem2)
{
   return ( *((int *)elem2 )) - ( *((int *)elem1 ));
}


int main()
{
   int VAR__21230;

   for ( VAR__21230 = 1; ; VAR__21230++ )
   {
      int VAR_1238123;
      int VAR__COUNT = 0;
      int tout;
      int weit;
      int touq;
      int weiq;
      int VAR__temp[1010];
      int VAR_666[1010];
      scanf("%d", &VAR_1238123);

      if ( VAR_1238123 == 0 )
      {
         break;
      }
      else
      {
         tout = 0, weit = VAR_1238123 - 1, touq = 0, weiq = VAR_1238123 - 1;
      }

      for ( int VAR__53647 = 0; VAR__53647 <= ( VAR_1238123 - 1 ); VAR__53647++ )
      {
         scanf("%d", &VAR__temp[VAR__53647]);
      }

      for ( int VAR__53647 = 0; VAR__53647 <= ( VAR_1238123 - 1 ); VAR__53647++ )
      {
         scanf("%d", &VAR_666[VAR__53647]);
      }

      qsort(VAR__temp, VAR_1238123, sizeof( int ), compare);
      qsort(VAR_666, VAR_1238123, sizeof( int ), compare);
      for ( int VAR__53647 = 1; VAR__53647 <= VAR_1238123; VAR__53647++ )
      {
         if ( VAR__temp[tout] > VAR_666[touq] )
         {
            VAR__COUNT = VAR__COUNT + 1;
            tout       = tout + 1;
            touq       = touq + 1;
         }
         else
         if ( VAR__temp[tout] < VAR_666[touq] )
         {
            weit       = weit - 1;
            touq       = touq + 1;
            VAR__COUNT = VAR__COUNT - 1;
         }
         else
         if ( VAR__temp[tout] == VAR_666[touq] )
         {
            if ( VAR__temp[weit] > VAR_666[weiq] )
            {
               VAR__COUNT += 1;
               weit       -= 1;
               weiq       -= 1;
            }
            else
            if (( VAR__temp[weit] < VAR_666[weiq] ) || ( VAR__temp[weit] == VAR_666[weiq] ))
            {
               if ( VAR__temp[weit] < VAR_666[touq] )
               {
                  VAR__COUNT -= 1;
                  weit       -= 1;
                  touq       += 1;
               }
               else
               if ( VAR__temp[weit] == VAR_666[touq] )
               {
                  weit -= 1;
                  touq += 1;
               }
            }
         }
      }

      printf("%d\n", VAR__COUNT * 200);
   }
}
