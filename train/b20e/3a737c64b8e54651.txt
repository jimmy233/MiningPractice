int cmp(const void *VAR__819283, const void *VAR__19328)
{
   return ( *((int *)VAR__19328 )) - ( *((int *)VAR__819283 ));
}


int main()
{
   int VAR_1238123;
   int VAR_FLAG;
   int VAR__53647;
   int VAR__21230;
   int bonus;
   int mmax;
   int draw;
   int VAR__19328[1001];
   int VAR__819283[1001];

   while ( cin >> VAR_1238123 )
   {
      if ( VAR_1238123 == 0 )
      {
         break;
      }

      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         cin >> VAR__19328[VAR__53647];
      }

      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         cin >> VAR__819283[VAR__53647];
      }

      mmax = -VAR_1238123;
      qsort(VAR__819283, VAR_1238123, sizeof( int ), cmp);
      qsort(VAR__19328, VAR_1238123, sizeof( int ), cmp);
      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         VAR_FLAG = 0;
         draw     = 0;
         for ( VAR__21230 = 0; VAR__21230 <= VAR__53647; VAR__21230++ )
         {
            if ( VAR__19328[VAR__21230] < VAR__819283[(( VAR_1238123 - VAR__53647 ) - 1 ) + VAR__21230] )
            {
               VAR_FLAG = 1;
            }
            else
            if ( VAR__19328[VAR__21230] == VAR__819283[(( VAR_1238123 - VAR__53647 ) - 1 ) + VAR__21230] )
            {
               draw++;
            }
         }

         if ( VAR_FLAG == 1 )
         {
            continue;
         }

         bonus = (( VAR__53647 + 1 ) - draw ) - (( VAR_1238123 - VAR__53647 ) - 1 );

         if ( bonus > mmax )
         {
            mmax = bonus;
         }
      }

      ( cout << ( mmax * 200 )) << endl;
   }

   return 0;
}
