int speedK[1000];
int speedT[1000];
int horseNum;
int search();

int main()
{
   while ( true )
   {
      scanf("%d", &horseNum);

      if ( horseNum == 0 )
      {
         break;
      }

      for ( int VAR__53647 = 0; VAR__53647 < horseNum; VAR__53647++ )
      {
         scanf("%d", speedT + VAR__53647);
      }

      for ( int VAR__53647 = 0; VAR__53647 < horseNum; VAR__53647++ )
      {
         scanf("%d", speedK + VAR__53647);
      }

      sort(speedT, speedT + horseNum);
      sort(speedK, speedK + horseNum);
      int VAR__COUNT = search();
      printf("%d\n", VAR__COUNT * 200);
   }

   return 0;
}


int search()
{
   int leftIndexK  = 0;
   int rightIndexK = horseNum - 1;
   int leftIndexT  = 0;
   int rightIndexT = horseNum - 1;
   int resultCount = 0;

   while ( leftIndexT != rightIndexT )
   {
      if ( speedT[rightIndexT] > speedK[rightIndexK] )
      {
         resultCount++;
         rightIndexT--;
         rightIndexK--;
      }
      else
      if ( speedT[leftIndexT] > speedK[leftIndexK] )
      {
         resultCount++;
         leftIndexT++;
         leftIndexK++;
      }
      else
      {
         if (( speedK[rightIndexK] - speedT[leftIndexT] ) > 0 )
         {
            resultCount--;
         }

         rightIndexK--;
         leftIndexT++;
      }
   }

   if (( speedK[leftIndexK] - speedT[leftIndexT] ) > 0 )
   {
      resultCount--;
   }
   else
   if (( speedK[leftIndexK] - speedT[leftIndexT] ) < 0 )
   {
      resultCount++;
   }


   return resultCount;
}
