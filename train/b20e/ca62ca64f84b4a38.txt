int MyCmp(const void *VAR__7685, const void *VAR__3918907)
{
   return ( *((int *)VAR__3918907 )) - ( *((int *)VAR__7685 ));
}


int main()
{
   int HorseNum;
   int VAR__53647;
   int WinMatch;
   int LoseMatch;
   int TianLastHorse;
   int TianFirstHorse;
   int QiFirstHorse;
   int QiLastHorse;
   int TianHorse[1001];
   int QiHorse[1001];

   while ( cin >> HorseNum )
   {
      if ( 0 == HorseNum )
      {
         break;
      }

      for ( VAR__53647 = 1; VAR__53647 <= HorseNum; VAR__53647++ )
      {
         cin >> TianHorse[VAR__53647];
      }

      for ( VAR__53647 = 1; VAR__53647 <= HorseNum; VAR__53647++ )
      {
         cin >> QiHorse[VAR__53647];
      }

      qsort(TianHorse + 1, HorseNum, sizeof( int ), MyCmp);
      qsort(QiHorse + 1, HorseNum, sizeof( int ), MyCmp);
      TianLastHorse  = ( QiLastHorse = HorseNum );
      TianFirstHorse = ( QiFirstHorse = 1 );
      WinMatch       = ( LoseMatch = 0 );

      while ( TianFirstHorse <= TianLastHorse )
      {
         if ( TianHorse[TianFirstHorse] > QiHorse[QiFirstHorse] )
         {
            WinMatch++;
            TianFirstHorse++;
            QiFirstHorse++;
         }
         else
         if ( TianHorse[TianFirstHorse] < QiHorse[QiFirstHorse] )
         {
            LoseMatch++;
            TianLastHorse--;
            QiFirstHorse++;
         }
         else
         {
            if ( TianHorse[TianLastHorse] > QiHorse[QiLastHorse] )
            {
               WinMatch++;
               TianLastHorse--;
               QiLastHorse--;
            }
            else
            {
               if ( TianHorse[TianLastHorse] < QiHorse[QiFirstHorse] )
               {
                  LoseMatch++;
               }

               TianLastHorse--;
               QiFirstHorse++;
            }
         }
      }

      ( cout << (( WinMatch - LoseMatch ) * 200 )) << endl;
   }

   return 0;
}
