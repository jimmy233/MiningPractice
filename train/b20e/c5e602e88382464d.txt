int cmp(const void *VAR__819283, const void *VAR__19328)
{
   return ( *((int *)VAR__819283 )) - ( *((int *)VAR__19328 ));
}


int main(int argc, const char *argv[])
{
   int VAR_1238123;
   int tian[1001];
   int king[1001];

   scanf("%d", &VAR_1238123);
   int finish = 0;

   if ( VAR_1238123 == 0 )
   {
      finish = 1;
   }

   while ( finish == 0 )
   {
      if ( VAR_1238123 == 0 )
      {
         finish = 1;
         break;
      }

      int VAR__53647;
      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         scanf("%d", &tian[VAR__53647]);
      }

      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         scanf("%d", &king[VAR__53647]);
      }

      qsort(tian, VAR_1238123, sizeof( int ), cmp);
      qsort(king, VAR_1238123, sizeof( int ), cmp);
      int ltian;
      int rtian;
      int lking;
      int rking;
      ltian = 0;
      rtian = VAR_1238123 - 1;
      lking = 0;
      rking = VAR_1238123 - 1;
      int money = 0;
      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         if ( tian[rtian] > king[rking] )
         {
            money += 200;
            rtian--;
            rking--;
         }
         else
         if ( tian[ltian] > king[lking] )
         {
            money += 200;
            ltian++;
            lking++;
         }
         else
         {
            if ( tian[ltian] > king[rking] )
            {
               money += 200;
               ltian++;
               rking--;
            }
            else
            if ( tian[ltian] == king[rking] )
            {
               ltian++;
               rking--;
            }
            else
            if ( tian[ltian] < king[rking] )
            {
               money -= 200;
               ltian++;
               rking--;
            }
         }
      }

      printf("%d", money);
      scanf("%d", &VAR_1238123);

      if ( VAR_1238123 != 0 )
      {
         printf("\n");
      }
      else
      {
         finish = 1;
      }
   }

   return 0;
}
