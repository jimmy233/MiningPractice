int VAR_1238123;
int King[1005];
int Tian[1005];
int Ans[1005];
int mCmp(const void *v1, const void *v2)
{
   int *i1 = (int *)v1;
   int *i2 = (int *)v2;

   return ( *i1 ) - ( *i2 );
}


int main()
{
   int VAR__53647;
   int VAR__21230;
   int VAR__8444594;
   int VAR__MAX;

   while ( 1 )
   {
      cin >> VAR_1238123;

      if ( VAR_1238123 == 0 )
      {
         return 0;
      }

      memset(King, 0, sizeof( King ));
      memset(Tian, 0, sizeof( Tian ));
      memset(Ans, 0, sizeof( Ans ));
      VAR__MAX = -1000000;
      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         cin >> Tian[VAR__53647];
      }

      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         cin >> King[VAR__53647];
      }

      qsort(Tian, VAR_1238123, sizeof( int ), mCmp);
      qsort(King, VAR_1238123, sizeof( int ), mCmp);
      for ( VAR__53647 = 0; VAR__53647 <= VAR_1238123; VAR__53647++ )
      {
         Ans[VAR__53647] = 0;
         for ( VAR__21230 = 0; VAR__21230 < VAR__53647; VAR__21230++ )
         {
            if ( King[( VAR_1238123 - 1 ) - VAR__21230] > Tian[VAR__21230] )
            {
               Ans[VAR__53647] -= 200;
            }
            else
            if ( King[( VAR_1238123 - 1 ) - VAR__21230] < Tian[VAR__21230] )
            {
               Ans[VAR__53647] += 200;
            }
         }

         for ( VAR__21230 = VAR__53647; VAR__21230 < VAR_1238123; VAR__21230++ )
         {
            if ( King[VAR__21230 - VAR__53647] > Tian[VAR__21230] )
            {
               Ans[VAR__53647] -= 200;
            }
            else
            if ( King[VAR__21230 - VAR__53647] < Tian[VAR__21230] )
            {
               Ans[VAR__53647] += 200;
            }
         }

         if ( Ans[VAR__53647] >= VAR__MAX )
         {
            VAR__MAX = Ans[VAR__53647];
         }
      }

      ( cout << VAR__MAX ) << endl;
   }
}
