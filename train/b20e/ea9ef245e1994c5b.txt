int Mycompare(const void *ANOTHER_POINTER, const void *YET_ANOTHER_POINTER)
{
   return ( *((int *)YET_ANOTHER_POINTER )) - ( *((int *)ANOTHER_POINTER ));
}


int main()
{
   int horseNum;
   int Thorse[1000];
   int Qhorse[1000];
   int VAR__53647;
   int Th;
   int Tt;
   int Qh;
   int Qt;
   int VAR__SUM;

   while ( cin >> horseNum )
   {
      if ( horseNum == 0 )
      {
         break;
      }

      for ( VAR__53647 = 0; VAR__53647 < horseNum; VAR__53647++ )
      {
         cin >> Thorse[VAR__53647];
      }

      for ( VAR__53647 = 0; VAR__53647 < horseNum; VAR__53647++ )
      {
         cin >> Qhorse[VAR__53647];
      }

      qsort(Thorse, horseNum, sizeof( int ), Mycompare);
      qsort(Qhorse, horseNum, sizeof( int ), Mycompare);
      Th       = ( Qh = 0 );
      Tt       = ( Qt = horseNum - 1 );
      VAR__SUM = 0;

      while ( Th <= Tt )
      {
         if ( Thorse[Th] > Qhorse[Qh] )
         {
            VAR__SUM = VAR__SUM + 200;
            Th       = Th + 1;
            Qh       = Qh + 1;
         }
         else
         if ( Thorse[Th] < Qhorse[Qh] )
         {
            VAR__SUM = VAR__SUM - 200;
            Qh       = Qh + 1;
            Tt       = Tt - 1;
         }
         else
         {
            if ( Thorse[Tt] > Qhorse[Qt] )
            {
               VAR__SUM = VAR__SUM + 200;
               Tt       = Tt - 1;
               Qt       = Qt - 1;
            }
            else
            {
               if ( Thorse[Tt] < Qhorse[Qh] )
               {
                  VAR__SUM = VAR__SUM - 200;
                  Tt       = Tt - 1;
                  Qh       = Qh + 1;
               }
               else
               {
                  Tt = Tt - 1;
                  Qh = Qh + 1;
               }
            }
         }
      }

      ( cout << VAR__SUM ) << endl;
   }

   return 0;
}
