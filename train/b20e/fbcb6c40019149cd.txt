int main(void)
{
   int VAR__1238129;
   int VAR_1238123;
   int VAR__53647;
   int VAR__21230;
   int VAR__SUM;
   int mid;
   int tian[1001];
   int king[1001];

   while (( cin >> VAR_1238123 ) && VAR_1238123 )
   {
      VAR__SUM = 0;
      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         cin >> tian[VAR__53647];
      }

      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         cin >> king[VAR__53647];
      }

      for ( VAR__53647 = 0; VAR__53647 < ( VAR_1238123 - 1 ); VAR__53647++ )
      {
         for ( VAR__21230 = VAR_1238123 - 1; VAR__21230 > VAR__53647; VAR__21230-- )
         {
            if ( tian[VAR__21230] > tian[VAR__21230 - 1] )
            {
               mid = tian[VAR__21230], tian[VAR__21230] = tian[VAR__21230 - 1], tian[VAR__21230 - 1] = mid;
            }

            if ( king[VAR__21230] > king[VAR__21230 - 1] )
            {
               mid = king[VAR__21230], king[VAR__21230] = king[VAR__21230 - 1], king[VAR__21230 - 1] = mid;
            }
         }
      }


      for ( VAR__53647 = 0, VAR__21230 = 0, VAR_1238123--, VAR__1238129 = VAR_1238123; VAR__53647 <= VAR_1238123; VAR__53647++, VAR__21230++ )
      {
         if ( tian[VAR__53647] > king[VAR__21230] )
         {
            VAR__SUM += 200;
         }
         else
         if ( tian[VAR__53647] < king[VAR__21230] )
         {
            VAR__SUM -= 200, VAR__53647--, VAR_1238123--;
         }
         else
         {
            while ( tian[VAR_1238123] > king[VAR__1238129] )
            {
               VAR__SUM += 200, VAR_1238123--, VAR__1238129--;
            }

            if ( VAR_1238123 == VAR__53647 )
            {
               break;
            }
            else
            if ( tian[VAR_1238123] == tian[VAR__53647] )
            {
               VAR_1238123--, VAR__53647--;
            }
            else
            {
               VAR__SUM -= 200, VAR_1238123--, VAR__53647--;
            }
         }
      }

      ( cout << VAR__SUM ) << endl;
   }

   return 0;
}
