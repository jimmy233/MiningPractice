int Tian[MAXIN];
int Qi[MAXIN];
int N;
int MyCompare(const void *e1, const void *e2)
{
   return ( *((int *)e2 )) - ( *((int *)e1 ));
}


int main()
{
   while ( scanf("%d", &N) && N )
   {
      int VAR__53647;
      for ( VAR__53647 = 0; VAR__53647 < N; VAR__53647++ )
      {
         scanf("%d", &Tian[VAR__53647]);
      }

      for ( VAR__53647 = 0; VAR__53647 < N; VAR__53647++ )
      {
         scanf("%d", &Qi[VAR__53647]);
      }

      qsort(Tian, N, sizeof( int ), MyCompare);
      qsort(Qi, N, sizeof( int ), MyCompare);
      int Tp = 0;
      int Qp = 0;
      int ans;

      while (( Tian[0] < Qi[Qp] ) && ( Qp < N ))
      {
         Qp++;
      }

      for ( ans = ( -200 ) * N; Qp < N; Qp++ )
      {
         int VAR__TEMP = ( -200 ) * Qp;
         for ( int VAR__21230 = Qp, Tp = 0; VAR__21230 < N; VAR__21230++, Tp++ )
         {
            if ( Tian[Tp] > Qi[VAR__21230] )
            {
               VAR__TEMP += 200;
            }
            else
            if ( Tian[Tp] < Qi[VAR__21230] )
            {
               VAR__TEMP -= 200;
            }
         }

         if ( VAR__TEMP > ans )
         {
            ans = VAR__TEMP;
         }
      }

      printf("%d\n", ans);
   }

   return 0;
}
