int myCompare(const void *int_a, const void *int_b)
{
   return ( *((int *)int_b )) - ( *((int *)int_a ));
}


int main()
{
   int VAR_1238123;
   int VAR__53647;
   int *QiWang;
   int *TianJi;
   int *QFast;
   int *TFast;
   int *QSlow;
   int *TSlow;
   int countWin;

   while ( 1 )
   {
      scanf("%d", &VAR_1238123);

      if ( VAR_1238123 == 0 )
      {
         break;
      }

      if ((( QiWang = (int *)malloc(VAR_1238123 * ( sizeof( int )))) == NULL ) || (( TianJi = (int *)malloc(VAR_1238123 * ( sizeof( int )))) == NULL ))
      {
         printf("Error: memory out! (1)/n");
         exit(-1);
      }

      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         scanf("%d", &TianJi[VAR__53647]);
      }

      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         scanf("%d", &QiWang[VAR__53647]);
      }

      qsort(TianJi, VAR_1238123, sizeof( int ), myCompare);
      qsort(QiWang, VAR_1238123, sizeof( int ), myCompare);
      TFast    = TianJi;
      QFast    = QiWang;
      TSlow    = ( TianJi + VAR_1238123 ) - 1;
      QSlow    = ( QiWang + VAR_1238123 ) - 1;
      countWin = 0;

      while ( 1 )
      {
         if (( *TSlow ) < ( *QSlow ))
         {
            countWin--;
            TSlow--;
            QFast++;
         }
         else
         if (( *TSlow ) > ( *QSlow ))
         {
            countWin++;
            TSlow--;
            QSlow--;
         }
         else
         {
            if ( TFast != TSlow )
            {
               if (( *TFast ) < ( *QFast ))
               {
                  countWin--;
                  QFast++;
                  TSlow--;
               }
               else
               if (( *TFast ) == ( *QFast ))
               {
                  if (( *QFast ) > ( *TSlow ))
                  {
                     countWin--;
                  }

                  QFast++;
                  TSlow--;
               }
               else
               {
                  countWin++;
                  QFast++;
                  TFast++;
               }
            }
            else
            {
               break;
            }
         }


         if ( TFast > TSlow )
         {
            break;
         }
      }

      printf("%d\n", 200 * countWin);
      free(TianJi);
      free(QiWang);
   }

   return 0;
}
