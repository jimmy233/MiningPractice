int comp(const void *VAR__819283, const void *VAR__19328)
{
   return ( *((const int *)VAR__819283 )) - ( *((const int *)VAR__19328 ));
}


int main()
{
   int VAR_21983012[1500];
   int VAR__temp[1500];
   int wsymb[1500];
   int tsymb[1500];
   int VAR_1238123;
   int VAR__53647;
   int VAR__21230;
   int tot;

   while ( scanf("%d", &VAR_1238123), VAR_1238123 )
   {
      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         scanf("%d", &VAR__temp[VAR__53647]);
      }

      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         scanf("%d", &VAR_21983012[VAR__53647]);
      }

      qsort(VAR_21983012, VAR_1238123, sizeof( int ), comp);
      qsort(VAR__temp, VAR_1238123, sizeof( int ), comp);
      memset(wsymb, 0, VAR_1238123 * ( sizeof( int )));
      memset(tsymb, 0, VAR_1238123 * ( sizeof( int )));
      tot = 0;
      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         for ( VAR__21230 = VAR_1238123 - 1; ( VAR__21230 >= 0 ) && ( wsymb[VAR__21230] || ( VAR_21983012[VAR__21230] >= VAR__temp[VAR__53647] )); VAR__21230-- )
         {
         }

         if ( VAR__21230 < 0 )
         {
            continue;
         }

         wsymb[VAR__21230] = ( tsymb[VAR__53647] = 1 );
         tot++;
      }

      for ( VAR__53647 = ( VAR__21230 = 0 ); VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         if ( wsymb[VAR__53647] )
         {
            continue;
         }

         while (( VAR__21230 < VAR_1238123 ) && ( tsymb[VAR__21230] || ( VAR_21983012[VAR__53647] > VAR__temp[VAR__21230] )))
         {
            VAR__21230++;
         }

         if ( VAR__21230 == VAR_1238123 )
         {
            break;
         }

         if ( VAR_21983012[VAR__53647] == VAR__temp[VAR__21230] )
         {
            wsymb[VAR__53647] = ( tsymb[VAR__21230++] = 1 );
         }
      }

      for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         if ( !wsymb[VAR__53647] )
         {
            tot--;
         }
      }


      printf("%d\n", tot * 200);
   }

   return 0;
}
