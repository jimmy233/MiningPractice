int Comp(const void *ANOTHER_POINTER, const void *YET_ANOTHER_POINTER)
{
   return (( *((int *)ANOTHER_POINTER )) > ( *((int *)YET_ANOTHER_POINTER ))) ? ( -1 ) : ( 1 );
}


int main()
{
   int tian[2000];
   int qi[2000];
   int VAR_1238123;
   int VAR__COUNT;
   int a_first;
   int a_end;
   int b_first;
   int b_end;

   while ( cin >> VAR_1238123 )
   {
      if ( VAR_1238123 == 0 )
      {
         break;
      }

      for ( int VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         cin >> tian[VAR__53647];
      }

      for ( int VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         cin >> qi[VAR__53647];
      }

      qsort(tian, VAR_1238123, sizeof( int ), Comp);
      qsort(qi, VAR_1238123, sizeof( int ), Comp);
      VAR__COUNT = 0;
      a_first    = 0;
      a_end      = VAR_1238123 - 1;
      b_first    = 0;
      b_end      = VAR_1238123 - 1;

      while ( a_first <= a_end )
      {
         if ( tian[a_first] > qi[b_first] )
         {
            VAR__COUNT++;
            a_first++;
            b_first++;
         }
         else
         if ( tian[a_end] > qi[b_end] )
         {
            VAR__COUNT++;
            a_end--;
            b_end--;
         }
         else
         if ( tian[a_first] == qi[b_first] )
         {
            if ( tian[a_end] > qi[b_first] )
            {
               VAR__COUNT++;
               a_end--;
               b_first++;
            }
            else
            if ( tian[a_end] == qi[b_first] )
            {
               a_end--;
               b_first++;
            }
            else
            if ( tian[a_end] < qi[b_first] )
            {
               VAR__COUNT--;
               a_end--;
               b_first++;
            }
         }
         else
         {
            if ( tian[a_end] > qi[b_first] )
            {
               VAR__COUNT++;
               a_end--;
               b_first++;
            }
            else
            if ( tian[a_end] == qi[b_first] )
            {
               a_end--;
               b_first++;
            }
            else
            if ( tian[a_end] < qi[b_first] )
            {
               VAR__COUNT--;
               a_end--;
               b_first++;
            }
         }
      }

      ( cout << ( VAR__COUNT * 200 )) << endl;
   }

   return 0;
}
