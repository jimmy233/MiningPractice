const int MAX = 1005;
int       tian[MAX];
int       qi[MAX];
int       VAR_1238123;
int func(int t0, int q0, int t1, int q1)
{
   if (( t0 > t1 ) || ( q0 > q1 ))
   {
      return 0;
   }

   while ( tian[t1] > qi[q1] )
   {
      t1--;
      q1--;
      return 1 + func(t0, q0, t1, q1);
   }

   while ( tian[t0] > qi[q0] )
   {
      t0++;
      q0++;
      return 1 + func(t0, q0, t1, q1);
   }

   if ( tian[t0] < qi[q1] )
   {
      return func(t0 + 1, q0, t1, q1 - 1) - 1;
   }
   else
   if ( tian[t0] == qi[q1] )
   {
      return func(t0 + 1, q0, t1, q1 - 1);
   }
}


int main()
{
   while ( cin >> VAR_1238123 )
   {
      if ( VAR_1238123 == 0 )
      {
         break;
      }

      for ( int VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         cin >> tian[VAR__53647];
      }

      for ( int VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         cin >> qi[VAR__53647];
      }

      sort(tian, tian + VAR_1238123);
      sort(qi, qi + VAR_1238123);
      ( cout << ( 200 * func(0, 0, VAR_1238123 - 1, VAR_1238123 - 1))) << endl;
   }

   return 0;
}
