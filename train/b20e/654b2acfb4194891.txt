int sort(int VAR__7685[], int VAR__1238129)
{
   int VAR__53647;
   int VAR__21230;
   int VAR__8444594;

   for ( VAR__53647 = 0; VAR__53647 < VAR__1238129; VAR__53647++ )
   {
      for ( VAR__21230 = VAR__53647 + 1; VAR__21230 < VAR__1238129; VAR__21230++ )
      {
         if ( VAR__7685[VAR__53647] < VAR__7685[VAR__21230] )
         {
            VAR__8444594          = VAR__7685[VAR__53647];
            VAR__7685[VAR__53647] = VAR__7685[VAR__21230];
            VAR__7685[VAR__21230] = VAR__8444594;
         }
      }
   }
}


int main()
{
   while ( 1 )
   {
      int VAR__NUM;
      int VAR__819283[1000];
      int VAR__19328[1000];
      int VAR__53647;
      int VAR__21230;
      int shadow;
      int VAR__8444594;
      int temp_gain  = 0;
      int temp_tie   = 0;
      int temp_lose  = 0;
      int gain       = 0;
      int lose       = 0;
      int tie        = 0;
      int total_gain = 0;
      scanf("%d", &VAR__NUM);

      if ( VAR__NUM == 0 )
      {
         break;
      }

      for ( VAR__53647 = 0; VAR__53647 < VAR__NUM; VAR__53647++ )
      {
         scanf("%d", &VAR__819283[VAR__53647]);
      }

      for ( VAR__53647 = 0; VAR__53647 < VAR__NUM; VAR__53647++ )
      {
         scanf("%d", &VAR__19328[VAR__53647]);
      }

      sort(VAR__819283, VAR__NUM);
      sort(VAR__19328, VAR__NUM);
      for ( VAR__53647 = 0; VAR__53647 < VAR__NUM; VAR__53647++ )
      {
         shadow     = VAR__53647;
         VAR__53647 = 0;
         for ( VAR__21230 = shadow; VAR__21230 < VAR__NUM; VAR__21230++, VAR__53647++ )
         {
            if ( VAR__819283[VAR__53647] > VAR__19328[VAR__21230] )
            {
               temp_gain++;
            }
            else
            if ( VAR__819283[VAR__53647] < VAR__19328[VAR__21230] )
            {
               temp_lose++;
            }
            else
            {
               temp_tie++;
            }
         }

         temp_lose += shadow;

         if ((( temp_gain - temp_lose ) > ( gain - lose )) || ( shadow == 0 ))
         {
            gain = temp_gain;
            lose = temp_lose;
            tie  = temp_tie;
         }

         VAR__53647 = shadow;
         temp_gain  = 0;
         temp_lose  = 0;
         temp_tie   = 0;
      }

      total_gain = ( gain - lose ) * 200;
      printf("%d\n", total_gain);
   }

   getchar();
   getchar();
}
