int main()
{
   int  grids[100][100];
   int  VAR_1238123;
   int  VAR__53647;
   int  VAR__21230;
   int  VAR__8444594;
   int  day;
   int  illCount = -1;
   int  illCount0;
   int  lastIllCount = 0;
   int  illHistory[10000][2];
   char stat;

   cin >> VAR_1238123;
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 < VAR_1238123; VAR__21230++ )
      {
         cin >> stat;
         switch ( stat )
         {
         case '.':
            grids[VAR__53647][VAR__21230] = 1;
            break;

         case '#':
            grids[VAR__53647][VAR__21230] = 0;
            break;

         case '@':
            grids[VAR__53647][VAR__21230] = 2;
            illCount++;
            illHistory[illCount][0] = VAR__53647;
            illHistory[illCount][1] = VAR__21230;
            break;
         }
      }
   }


   cin >> day;

   if ( illCount != ( -1 ))
   {
      for ( VAR__8444594 = 1; VAR__8444594 < day; VAR__8444594++ )
      {
         illCount0 = illCount;
         for ( VAR__53647 = lastIllCount; VAR__53647 <= illCount0; VAR__53647++ )
         {
            if (( illHistory[VAR__53647][0] != 0 ) && ( grids[illHistory[VAR__53647][0] - 1][illHistory[VAR__53647][1]] == 1 ))
            {
               grids[illHistory[VAR__53647][0] - 1][illHistory[VAR__53647][1]] = 2;
               illCount++;
               illHistory[illCount][0] = illHistory[VAR__53647][0] - 1;
               illHistory[illCount][1] = illHistory[VAR__53647][1];
            }

            if (( illHistory[VAR__53647][1] != 0 ) && ( grids[illHistory[VAR__53647][0]][illHistory[VAR__53647][1] - 1] == 1 ))
            {
               grids[illHistory[VAR__53647][0]][illHistory[VAR__53647][1] - 1] = 2;
               illCount++;
               illHistory[illCount][0] = illHistory[VAR__53647][0];
               illHistory[illCount][1] = illHistory[VAR__53647][1] - 1;
            }

            if (( illHistory[VAR__53647][0] != ( VAR_1238123 - 1 )) && ( grids[illHistory[VAR__53647][0] + 1][illHistory[VAR__53647][1]] == 1 ))
            {
               grids[illHistory[VAR__53647][0] + 1][illHistory[VAR__53647][1]] = 2;
               illCount++;
               illHistory[illCount][0] = illHistory[VAR__53647][0] + 1;
               illHistory[illCount][1] = illHistory[VAR__53647][1];
            }

            if (( illHistory[VAR__53647][1] != ( VAR_1238123 - 1 )) && ( grids[illHistory[VAR__53647][0]][illHistory[VAR__53647][1] + 1] == 1 ))
            {
               grids[illHistory[VAR__53647][0]][illHistory[VAR__53647][1] + 1] = 2;
               illCount++;
               illHistory[illCount][0] = illHistory[VAR__53647][0];
               illHistory[illCount][1] = illHistory[VAR__53647][1] + 1;
            }
         }

         lastIllCount = illCount0;
      }
   }

   cout << ( illCount + 1 );
   return 0;
}
