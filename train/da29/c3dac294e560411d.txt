int main()
{
   int  VAR_1238123;
   int  VAR__1238129;
   int  VAR__NUM = 0;
   char VAR__819283[110][110];
   char myroom[110][110];

   cin >> VAR_1238123;
   for ( int VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      cin >> VAR__819283[VAR__53647];
   }

   cin >> VAR__1238129;
   for ( int VAR__53647 = 1; VAR__53647 < VAR__1238129; VAR__53647++ )
   {
      for ( int VAR__1111 = 0; VAR__1111 < VAR_1238123; VAR__1111++ )
      {
         for ( int VAR__8444594 = 0; VAR__8444594 < VAR_1238123; VAR__8444594++ )
         {
            myroom[VAR__1111][VAR__8444594] = VAR__819283[VAR__1111][VAR__8444594];
         }
      }


      for ( int VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         for ( int VAR__21230 = 0; VAR__21230 < VAR_1238123; VAR__21230++ )
         {
            if ( myroom[VAR__53647][VAR__21230] == '@' )
            {
               if ((( VAR__53647 - 1 ) >= 0 ) && ( VAR__819283[VAR__53647 - 1][VAR__21230] == '.' ))
               {
                  VAR__819283[VAR__53647 - 1][VAR__21230] = '@';
               }

               if ((( VAR__53647 + 1 ) < VAR_1238123 ) && ( VAR__819283[VAR__53647 + 1][VAR__21230] == '.' ))
               {
                  VAR__819283[VAR__53647 + 1][VAR__21230] = '@';
               }

               if ((( VAR__21230 - 1 ) >= 0 ) && ( VAR__819283[VAR__53647][VAR__21230 - 1] == '.' ))
               {
                  VAR__819283[VAR__53647][VAR__21230 - 1] = '@';
               }

               if ((( VAR__21230 + 1 ) < VAR_1238123 ) && ( VAR__819283[VAR__53647][VAR__21230 + 1] == '.' ))
               {
                  VAR__819283[VAR__53647][VAR__21230 + 1] = '@';
               }
            }
         }
      }
   }

   for ( int VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      for ( int VAR__21230 = 0; VAR__21230 < VAR_1238123; VAR__21230++ )
      {
         if ( VAR__819283[VAR__53647][VAR__21230] == '@' )
         {
            VAR__NUM++;
         }
      }
   }



   ( cout << VAR__NUM ) << endl;
   return 0;
}
