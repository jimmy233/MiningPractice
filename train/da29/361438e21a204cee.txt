char map[102][102];
int  queue[2][(( 128 * 100 ) + 100 ) + 1];
int  VAR__NUM[2];
int main()
{
   int VAR__53647;
   int VAR__21230;
   int N;
   int VAR__1238129;
   int VAR__SUM;

   memset(map, '#', sizeof( map ));
   scanf("%d", &N);
   for ( VAR__53647 = 1; VAR__53647 <= N; VAR__53647++ )
   {
      scanf("%s", &map[VAR__53647][1]);
      for ( VAR__21230 = 1; VAR__21230 <= N; VAR__21230++ )
      {
         if ( map[VAR__53647][VAR__21230] == '@' )
         {
            queue[0][VAR__NUM[0]++] = ( VAR__53647 << 7 ) + VAR__21230;
         }
      }


      map[VAR__53647][VAR__21230] = '#';
   }

   scanf("%d", &VAR__1238129);
   VAR__SUM = VAR__NUM[0];
   for ( VAR__21230 = 0; VAR__21230 < ( VAR__1238129 - 1 ); VAR__21230++ )
   {
      int tmp = VAR__21230 & 1;
      for ( VAR__53647 = 0; VAR__53647 < VAR__NUM[tmp]; VAR__53647++ )
      {
         int VAR__7685;
         int VAR__3918907;
         VAR__7685    = queue[tmp][VAR__53647] >> 7;
         VAR__3918907 = queue[tmp][VAR__53647] & 127;
         INFECT(VAR__7685 - 1, VAR__3918907, !tmp);
         INFECT(VAR__7685 + 1, VAR__3918907, !tmp);
         INFECT(VAR__7685, VAR__3918907 - 1, !tmp);
         INFECT(VAR__7685, VAR__3918907 + 1, !tmp);
      }

      VAR__NUM[tmp] = 0;
      VAR__SUM     += VAR__NUM[!tmp];
   }

   printf("%d\n", VAR__SUM);
   return 0;
}
