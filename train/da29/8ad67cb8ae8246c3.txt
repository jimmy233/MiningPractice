int main()
{
   int  VAR_1238123;
   int  VAR__1238129;
   int  data[100][100];
   int  counter = 0;
   char VAR__TEMP;

   cin >> VAR_1238123;
   for ( int VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      for ( int VAR__21230 = 0; VAR__21230 < VAR_1238123; VAR__21230++ )
      {
         cin >> VAR__TEMP;
         switch ( VAR__TEMP )
         {
         case '.':
            data[VAR__53647][VAR__21230] = 0;
            break;

         case '#':
            data[VAR__53647][VAR__21230] = -1;
            break;

         case '@':
            data[VAR__53647][VAR__21230] = 1;
            break;
         }
      }
   }


   cin >> VAR__1238129;
   for ( int VAR__8444594 = 2; VAR__8444594 <= VAR__1238129; VAR__8444594++ )
   {
      for ( int VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
      {
         for ( int VAR__21230 = 0; VAR__21230 < VAR_1238123; VAR__21230++ )
         {
            if ( data[VAR__53647][VAR__21230] == ( VAR__8444594 - 1 ))
            {
               if ((( VAR__53647 + 1 ) < VAR_1238123 ) && ( !data[VAR__53647 + 1][VAR__21230] ))
               {
                  data[VAR__53647 + 1][VAR__21230] = VAR__8444594;
               }

               if ((( VAR__53647 - 1 ) >= 0 ) && ( !data[VAR__53647 - 1][VAR__21230] ))
               {
                  data[VAR__53647 - 1][VAR__21230] = VAR__8444594;
               }

               if ((( VAR__21230 + 1 ) < VAR_1238123 ) && ( !data[VAR__53647][VAR__21230 + 1] ))
               {
                  data[VAR__53647][VAR__21230 + 1] = VAR__8444594;
               }

               if ((( VAR__21230 - 1 ) >= 0 ) && ( !data[VAR__53647][VAR__21230 - 1] ))
               {
                  data[VAR__53647][VAR__21230 - 1] = VAR__8444594;
               }
            }
         }
      }
   }



   for ( int VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      for ( int VAR__21230 = 0; VAR__21230 < VAR_1238123; VAR__21230++ )
      {
         if ( data[VAR__53647][VAR__21230] > 0 )
         {
            counter++;
         }
      }
   }



   cout << counter;
   return 0;
}
