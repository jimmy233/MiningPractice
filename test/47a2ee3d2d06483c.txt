int VAR__127322[11][11];
int PutApple(int VAR__1238129, int VAR_1238123)
{
   if ( VAR__127322[VAR__1238129][VAR_1238123] )
   {
      return VAR__127322[VAR__1238129][VAR_1238123];
   }
   else
   if (( VAR__1238129 == 1 ) || ( VAR_1238123 == 1 ))
   {
      VAR__127322[VAR__1238129][VAR_1238123] = 1;
      return VAR__127322[VAR__1238129][VAR_1238123];
   }
   else
   if ( VAR__1238129 < VAR_1238123 )
   {
      VAR__127322[VAR__1238129][VAR_1238123] = PutApple(VAR__1238129, VAR__1238129);
      return VAR__127322[VAR__1238129][VAR_1238123];
   }
   else
   if ( VAR__1238129 == VAR_1238123 )
   {
      VAR__127322[VAR__1238129][VAR_1238123] = 1 + PutApple(VAR__1238129, VAR__1238129 - 1);
      return VAR__127322[VAR__1238129][VAR_1238123];
   }
   else
   {
      VAR__127322[VAR__1238129][VAR_1238123] = PutApple(VAR__1238129 - VAR_1238123, VAR_1238123) + PutApple(VAR__1238129, VAR_1238123 - 1);
      return VAR__127322[VAR__1238129][VAR_1238123];
   }
}


int main()
{
   int VAR_1238123;

   cin >> VAR_1238123;
   int VAR__1111;
   int VAR__1238129;
   int A[100];
   for ( int VAR__53647 = 0; VAR__53647 < VAR_1238123; ++VAR__53647 )
   {
      memset(VAR__127322, 0, sizeof( VAR__127322 ));
      ( cin >> VAR__1111 ) >> VAR__1238129;
      A[VAR__53647] = PutApple(VAR__1111, VAR__1238129);
   }

   for ( int VAR__53647 = 0; VAR__53647 < VAR_1238123; ++VAR__53647 )
   {
      ( cout << A[VAR__53647] ) << endl;
   }

   return 0;
}
