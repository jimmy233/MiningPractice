int main()
{
   int VAR__21230;
   int VAR__53647;
   int LEN_OF_STH;
   int VAR_1238123;
   int involution[5000];

   memset(involution, 0, sizeof( involution ));
   cin >> VAR_1238123;
   involution[0] = 1;
   LEN_OF_STH    = 1;
   for ( VAR__21230 = 1; VAR__21230 <= VAR_1238123; VAR__21230++ )
   {
      for ( VAR__53647 = 0; VAR__53647 < LEN_OF_STH; VAR__53647++ )
      {
         involution[VAR__53647] *= 2;
      }

      for ( VAR__53647 = 0; VAR__53647 < LEN_OF_STH; VAR__53647++ )
      {
         if ( involution[VAR__53647] >= 10 )
         {
            involution[VAR__53647 + 1] += involution[VAR__53647] / 10;
            involution[VAR__53647]     %= 10;
         }
      }

      if ( involution[LEN_OF_STH] != 0 )
      {
         LEN_OF_STH++;
      }
   }

   for ( VAR__21230 = LEN_OF_STH - 1; VAR__21230 >= 0; VAR__21230-- )
   {
      cout << involution[VAR__21230];
   }

   cout << endl;
   return 0;
}
