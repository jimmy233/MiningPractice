void main()
{
   int alphabetic(char);
   int longest(char []);
   int shortest(char []);

   int  VAR__53647;
   int  VAR__21230;
   char line[1000];
   gets(line);
   for ( VAR__53647 = longest(line); alphabetic(line[VAR__53647]); VAR__53647++ )
   {
      printf("%c", line[VAR__53647]);
   }

   printf("\n");
   for ( VAR__21230 = shortest(line); alphabetic(line[VAR__21230]); VAR__21230++ )
   {
      printf("%c", line[VAR__21230]);
   }

   printf("\n");
}


int alphabetic(char VAR__4857423)
{
   if ((( VAR__4857423 >= 'a' ) && ( VAR__4857423 <= 'z' )) || (( VAR__4857423 >= 'A' ) && ( VAR__4857423 <= 'Z' )))
   {
      return 1;
   }
   else
   {
      return 0;
   }
}


int longest(char string[])
{
   int LEN_OF_STH = 0;
   int length     = 0;
   int VAR_FLAG   = 1;
   int place      = 0;
   int VAR__53647;
   int point;

   for ( VAR__53647 = 0; VAR__53647 <= strlen(string); VAR__53647++ )
   {
      if ( alphabetic(string[VAR__53647]))
      {
         if ( VAR_FLAG )
         {
            point    = VAR__53647;
            VAR_FLAG = 0;
         }
         else
         {
            LEN_OF_STH++;
         }
      }

      else
      {
         VAR_FLAG = 1;

         if ( LEN_OF_STH > length )
         {
            length = LEN_OF_STH;
            place  = point;
         }

         LEN_OF_STH = 0;
      }
   }


   return place;
}


int shortest(char string[])
{
   int LEN_OF_STH = 0;
   int length     = 10;
   int VAR_FLAG   = 1;
   int place      = 0;
   int VAR__53647;
   int point;

   for ( VAR__53647 = 0; VAR__53647 <= strlen(string); VAR__53647++ )
   {
      if ( alphabetic(string[VAR__53647]))
      {
         if ( VAR_FLAG )
         {
            point    = VAR__53647;
            VAR_FLAG = 0;
         }
         else
         {
            LEN_OF_STH++;
         }
      }

      else
      {
         VAR_FLAG = 1;

         if ( LEN_OF_STH < length )
         {
            length = LEN_OF_STH;
            place  = point;
         }

         LEN_OF_STH = 0;
      }
   }


   return place;
}
