int main()
{
   int  VAR__53647;
   int  VAR__21230;
   int  VAR__8444594 = 0;
   int  VAR__1238129 = 0;
   int  VAR_1238123  = 0;
   int  LEN_OF_STH;
   int  lon[50];
   int  VAR__MAX = 0;
   int  VAR__MIN = 100;
   char VAR__819283[2000];
   char word[50][40];

   gets(VAR__819283);
   LEN_OF_STH = strlen(VAR__819283);
   for ( VAR__53647 = 0; VAR__53647 < LEN_OF_STH; VAR__53647++ )
   {
      if ( VAR__819283[VAR__53647] == ' ' )
      {
         for ( VAR__21230 = VAR__8444594; VAR__21230 < VAR__53647; VAR__21230++ )
         {
            word[VAR__1238129][VAR_1238123] = VAR__819283[VAR__21230];
            VAR_1238123++;
         }

         word[VAR__1238129][VAR_1238123] = '\0';
         lon[VAR__1238129] = VAR_1238123;
         VAR__8444594      = VAR__53647 + 1;
         VAR__1238129++;
         VAR_1238123 = 0;
      }
   }

   for ( VAR__21230 = VAR__8444594; VAR__21230 < LEN_OF_STH; VAR__21230++ )
   {
      word[VAR__1238129][VAR_1238123] = VAR__819283[VAR__21230];
      VAR_1238123++;
   }

   word[VAR__1238129][VAR_1238123] = '\0';
   lon[VAR__1238129] = VAR_1238123;
   for ( VAR__53647 = 0; VAR__53647 <= VAR__1238129; VAR__53647++ )
   {
      if ( VAR__MAX < lon[VAR__53647] )
      {
         VAR__MAX = lon[VAR__53647];
      }

      if ( VAR__MIN > lon[VAR__53647] )
      {
         VAR__MIN = lon[VAR__53647];
      }
   }

   for ( VAR__53647 = 0; VAR__53647 <= VAR__1238129; VAR__53647++ )
   {
      if ( VAR__MAX == lon[VAR__53647] )
      {
         printf("%s\n", word[VAR__53647]);
         break;
      }
   }

   for ( VAR__53647 = 0; VAR__53647 <= VAR__1238129; VAR__53647++ )
   {
      if ( VAR__MIN == lon[VAR__53647] )
      {
         printf("%s\n", word[VAR__53647]);
         break;
      }
   }

   return 0;
}
