char YET_ANOTHER_STRING[1000] = { 0 };
void VAR__8444594(char A_STRING[])
{
   char ANOTHER_STRING[100][20] = { { 0 } };
   int  VAR__53647 = 0;
   int  VAR__21230;
   int  VAR__8444594;
   int  VAR__1111 = 0;

   for ( VAR__21230 = 0; A_STRING[VAR__21230] != 0; VAR__21230++ )
   {
      for ( VAR__53647 = VAR__21230, VAR__8444594 = 0; ((( A_STRING[VAR__53647] >= 'a' ) && ( A_STRING[VAR__53647] <= 'z' )) || (( A_STRING[VAR__53647] >= 'A' ) && ( A_STRING[VAR__53647] <= 'Z' ))) || ( A_STRING[VAR__53647] == 39 ); VAR__53647++, VAR__8444594++ )
      {
         ANOTHER_STRING[VAR__1111][VAR__8444594] = A_STRING[VAR__53647];
      }

      VAR__21230 = VAR__53647;
      VAR__1111++;
   }

   int VAR__MAX;
   int VAR__MIN;
   for ( VAR__53647 = 0, VAR__MIN = 0; VAR__53647 < VAR__1111; VAR__53647++ )
   {
      if ( strlen(ANOTHER_STRING[VAR__MIN]) > strlen(ANOTHER_STRING[VAR__53647]))
      {
         VAR__MIN = VAR__53647;
      }
   }


   strcpy(YET_ANOTHER_STRING, ANOTHER_STRING[VAR__MIN]);
   for ( VAR__53647 = 0, VAR__MAX = 0; VAR__53647 < VAR__1111; VAR__53647++ )
   {
      if ( strlen(ANOTHER_STRING[VAR__MAX]) < strlen(ANOTHER_STRING[VAR__53647]))
      {
         VAR__MAX = VAR__53647;
      }
   }


   strcpy(A_STRING, ANOTHER_STRING[VAR__MAX]);
}


int main()
{
   char A_STRING[1000] = { 0 };

   gets(A_STRING);
   VAR__8444594(A_STRING);
   puts(A_STRING);
   puts(YET_ANOTHER_STRING);
   return 0;
}
