int avoid(char as[]);

int main()
{
   int  VAR_1238123;
   int  VAR__53647;
   int  VAR__NUM;
   char A_STRING[10000][81];

   cin >> VAR_1238123;
   cin.get();
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      cin.getline(A_STRING[VAR__53647], 81);

      if ( A_STRING[VAR__53647][0] == '_' )
      {
         VAR__NUM = avoid(A_STRING[VAR__53647]);
         ( cout << VAR__NUM ) << endl;
      }

      if ( A_STRING[VAR__53647][0] != '_' )
      {
         if (((( A_STRING[VAR__53647][0] - 'a' ) >= 0 ) && (( A_STRING[VAR__53647][0] - 'a' ) <= 25 )) || ((( A_STRING[VAR__53647][0] - 'A' ) >= 0 ) && (( A_STRING[VAR__53647][0] - 'A' ) <= 25 )))
         {
            VAR__NUM = avoid(A_STRING[VAR__53647]);
            ( cout << VAR__NUM ) << endl;
         }
         else
         {
            ( cout << 0 ) << endl;
         }
      }
   }

   return 0;
}


int avoid(char as[])
{
   int LEN_OF_STH;

   LEN_OF_STH = strlen(as);
   int VAR__21230;
   int VAR__temp;
   for ( VAR__21230 = 1; VAR__21230 < LEN_OF_STH; VAR__21230++ )
   {
      if (((((( as[VAR__21230] - 'a' ) < 0 ) || (( as[VAR__21230] - 'a' ) > 25 )) && ((( as[VAR__21230] - 'A' ) < 0 ) || (( as[VAR__21230] - 'A' ) > 25 ))) && ((( as[VAR__21230] - '0' ) < 0 ) || (( as[VAR__21230] - '0' ) > 9 ))) && ( as[VAR__21230] != '_' ))
      {
         VAR__temp = 0;
         break;
      }
   }

   if ( VAR__21230 == LEN_OF_STH )
   {
      VAR__temp = 1;
   }

   return VAR__temp;
}
