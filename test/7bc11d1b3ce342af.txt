int main()
{
   char A_STRING[2000];
   int  VAR__53647;
   int  LEN_OF_STH;
   int  VAR_SIZE[200];
   int  VAR__8444594 = 1;
   int  VAR__MAX;
   int  maxword = 0;
   int  VAR__MIN;
   int  minword = 0;

   gets(A_STRING);
   LEN_OF_STH = strlen(A_STRING);
   for ( VAR__53647 = 0; VAR__53647 < LEN_OF_STH; VAR__53647++ )
   {
      if ((( A_STRING[VAR__53647] == ' ' ) || ( A_STRING[VAR__53647] == ',' )) && (( A_STRING[VAR__53647 + 1] != ' ' ) && ( A_STRING[VAR__53647 + 1] != ',' )))
      {
         VAR_SIZE[VAR__8444594] = VAR__53647 + 1;
         VAR__8444594++;
         A_STRING[VAR__53647] = 0;
      }
   }

   VAR_SIZE[VAR__8444594] = LEN_OF_STH + 1;
   VAR__MAX = VAR_SIZE[1] - 1;
   VAR__MIN = VAR_SIZE[1] - 1;
   for ( VAR__53647 = 1; VAR__53647 < VAR__8444594; VAR__53647++ )
   {
      if ((( VAR_SIZE[VAR__53647 + 1] - VAR_SIZE[VAR__53647] ) - 1 ) > VAR__MAX )
      {
         VAR__MAX = ( VAR_SIZE[VAR__53647 + 1] - VAR_SIZE[VAR__53647] ) - 1;
         maxword  = VAR_SIZE[VAR__53647];
      }
      else
      if ((( VAR_SIZE[VAR__53647 + 1] - VAR_SIZE[VAR__53647] ) - 1 ) < VAR__MIN )
      {
         VAR__MIN = ( VAR_SIZE[VAR__53647 + 1] - VAR_SIZE[VAR__53647] ) - 1;
         minword  = VAR_SIZE[VAR__53647];
      }
   }

   printf("%s\n", &A_STRING[maxword]);
   printf("%s\n", &A_STRING[minword]);
   return 0;
}
