int identf(char *A_STRING);
int isKey(char *A_STRING);
int x_strcmp(char *si, char *di);

int main()
{
   char buffer[256];
   int  VAR_1238123;
   int  VAR__53647;

   scanf("%d", &VAR_1238123);
   gets(buffer);
   for ( VAR__53647 = 0; VAR__53647 < VAR_1238123; VAR__53647++ )
   {
      gets(buffer);

      if ( identf(buffer))
      {
         puts("1");
      }
      else
      {
         puts("0");
      }
   }

   return 0;
}


int identf(char *A_STRING)
{
   int  VAR_FLAG = 0;
   char *VAR_233 = A_STRING;

   if ((((( *A_STRING ) >= 'a' ) && (( *A_STRING ) <= 'z' )) || ((( *A_STRING ) >= 'A' ) && (( *A_STRING ) <= 'Z' ))) || (( *A_STRING ) == '_' ))
   {
      VAR_FLAG = 1;
      A_STRING++;
   }

   while (( *A_STRING ) && VAR_FLAG )
   {
      if (((((( *A_STRING ) >= 'a' ) && (( *A_STRING ) <= 'z' )) || ((( *A_STRING ) >= 'A' ) && (( *A_STRING ) <= 'Z' ))) || (( *A_STRING ) == '_' )) || ((( *A_STRING ) >= '0' ) && (( *A_STRING ) <= '9' )))
      {
         VAR_FLAG = 1;
         A_STRING++;
      }
      else
      {
         VAR_FLAG = 0;
      }
   }

   if ( VAR_FLAG )
   {
      VAR_FLAG = isKey(VAR_233);
   }

   return VAR_FLAG;
}


int isKey(char *A_STRING)
{
   char *keyword[] = { "auto", "break", "case", "char", "const", "continue", "default", "do", "double", "else", "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "short", "signed", "sizeof", "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while" };
   int  VAR__53647;
   int  VAR_FLAG = 1;

   for ( VAR__53647 = 0; VAR__53647 < 32; VAR__53647++ )
   {
      if ( x_strcmp(A_STRING, keyword[VAR__53647]) == 0 )
      {
         VAR_FLAG = 0;
         break;
      }
   }

   return VAR_FLAG;
}


int x_strcmp(char *si, char *di)
{
   while ((( *si ) && ( *di )) && (( *si ) == ( *di )))
   {
      si++;
      di++;
   }

   return ( *si ) - ( *di );
}
