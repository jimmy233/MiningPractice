int main()
{
   int    nInput = 0;
   int    VAR__53647;
   int    VAR__21230;
   double VAR__7685[100];
   double VAR__3918907[100];
   double xDiff      = 0.0;
   double yDiff      = 0.0;
   double yMax       = 0.0;
   int    yPosition1 = 0.0;
   int    yPosition2 = 0.0;
   int    xMax       = 0.0;
   int    xPosition1 = 0.0;
   int    xPosition2 = 0.0;

   cin >> nInput;
   for ( VAR__53647 = 0; VAR__53647 < nInput; VAR__53647++ )
   {
      ( cin >> VAR__7685[VAR__53647] ) >> VAR__3918907[VAR__53647];
   }

   for ( VAR__53647 = 0; VAR__53647 < nInput; VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 < nInput; VAR__21230++ )
      {
         xDiff = VAR__7685[VAR__53647] - VAR__7685[VAR__21230];

         if ( xDiff > xMax )
         {
            xMax       = xDiff;
            xPosition1 = VAR__53647;
            xPosition2 = VAR__21230;
         }
      }
   }


   for ( VAR__53647 = 0; VAR__53647 < nInput; VAR__53647++ )
   {
      for ( VAR__21230 = 0; VAR__21230 < nInput; VAR__21230++ )
      {
         yDiff = VAR__3918907[VAR__53647] - VAR__3918907[VAR__21230];

         if ( yDiff > yMax )
         {
            yMax       = yDiff;
            yPosition1 = VAR__53647;
            yPosition2 = VAR__21230;
         }
      }
   }


   cout << endl;

   if ( yMax >= xMax )
   {
      cout << sqrt((( VAR__3918907[yPosition1] - VAR__3918907[yPosition2] ) * ( VAR__3918907[yPosition1] - VAR__3918907[yPosition2] )) + (( VAR__7685[yPosition1] - VAR__7685[yPosition2] ) * ( VAR__7685[yPosition1] - VAR__7685[yPosition2] )));
   }
   else
   {
      cout << ( sqrt(( VAR__3918907[xPosition1] - VAR__3918907[xPosition2] ) * ( VAR__3918907[xPosition1] - VAR__3918907[xPosition2] )) + (( VAR__7685[xPosition1] - VAR__7685[xPosition2] ) * ( VAR__7685[xPosition1] - VAR__7685[xPosition2] )));
   }

   return 0;
}
